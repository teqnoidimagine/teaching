{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2024 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport * as i0 from '@angular/core';\nimport { isDevMode, Component, HostBinding, Input, Directive, forwardRef, EventEmitter, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i3 from '@progress/kendo-angular-common';\nimport { hasObservers, isDocumentAvailable, isChanged, ResizeSensorModule } from '@progress/kendo-angular-common';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n/**\n * @hidden\n */\nconst _c0 = [\"progressStatus\"];\nconst _c1 = [\"progressStatusWrap\"];\nfunction ProgressBarComponent_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.formattedLabelValue);\n  }\n}\nfunction ProgressBarComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.formattedLabelValue);\n  }\n}\nfunction ChunkProgressBarComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 3);\n  }\n  if (rf & 2) {\n    const chunk_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"width\", ctx_r0.orientationStyles.width)(\"height\", ctx_r0.orientationStyles.height);\n    i0.ɵɵclassProp(\"k-first\", i_r2 === 0)(\"k-last\", i_r2 === ctx_r0.chunkCount - 1)(\"k-selected\", chunk_r1);\n    i0.ɵɵproperty(\"ngClass\", chunk_r1 ? ctx_r0.progressCssClass : ctx_r0.emptyCssClass)(\"ngStyle\", chunk_r1 ? ctx_r0.progressCssStyle : ctx_r0.emptyCssStyle);\n  }\n}\nconst _c6 = [\"progress\"];\nconst _c7 = [\"scale\"];\nconst _c8 = [\"label\"];\nconst _c9 = [\"surface\"];\nfunction CircularProgressBarComponent_div_11_ng_template_2_Template(rf, ctx) {}\nfunction CircularProgressBarComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(0, \"div\", 10, 11);\n    i0.ɵɵtemplate(2, CircularProgressBarComponent_div_11_ng_template_2_Template, 0, 0, \"ng-template\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.centerTemplate.templateRef)(\"ngTemplateOutletContext\", ctx_r4.centerTemplateContext);\n  }\n}\nconst packageMetadata = {\n  name: '@progress/kendo-angular-progressbar',\n  productName: 'Kendo UI for Angular',\n  productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n  publishDate: 1720607744,\n  version: '16.4.0',\n  licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n/**\n * @hidden\n */\nconst MIN_MAX_ERROR_MESSAGE = `The max value should be greater than the min.`;\n/**\n * @hidden\n */\nconst LABEL_DECIMALS = 3;\n/**\n * @hidden\n */\nconst MIN_RATIO = 0.0001;\n\n/**\n * @hidden\n */\nconst formatValue = (value, min, max, label) => {\n  const defaultFormattedValue = truncateNumber(value);\n  if (typeof label !== 'boolean') {\n    if (typeof label.format === 'string') {\n      switch (label.format) {\n        case 'value':\n          return defaultFormattedValue;\n        case 'percent':\n          return `${Math.floor(calculatePercentage(value, min, max))}%`;\n        default:\n          return defaultFormattedValue;\n      }\n    } else if (typeof label.format === 'function') {\n      return label.format(value);\n    } else {\n      return defaultFormattedValue;\n    }\n  }\n  return defaultFormattedValue;\n};\n/**\n * @hidden\n */\nconst validateRange = (min, max) => {\n  if (isDevMode && min > max) {\n    throw new Error(MIN_MAX_ERROR_MESSAGE);\n  }\n};\n/**\n * @hidden\n */\nconst adjustValueToRange = (min, max, value) => Math.max(Math.min(value, max), min);\n/**\n * @hidden\n */\nconst calculatePercentage = (value, min, max) => {\n  const decimalValue = Math.abs((value - min) / (max - min));\n  return decimalValue * 100;\n};\n/**\n * @hidden\n */\nconst truncateNumber = value => {\n  const numberParts = value.toString().split('.');\n  return numberParts.length === 1 ? `${numberParts[0]}` : `${numberParts[0]}.${numberParts[1].substr(0, LABEL_DECIMALS)}`;\n};\n/**\n * @hidden\n */\nconst calculateRatio = (min, max, value) => Math.max((value - min) / (max - min), MIN_RATIO);\n/**\n * @hidden\n */\nconst extractValueFromChanges = (changes, type, value) => changes[type] && changes[type].currentValue !== undefined ? changes[type].currentValue : value;\n/**\n * @hidden\n */\nconst runAnimation = (changes, animation, previousValue, displayValue) => animation && typeof requestAnimationFrame !== 'undefined' && changes['value'] && previousValue !== displayValue;\n/**\n * @hidden\n */\nconst stopCurrentAnimation = changes => {\n  const isAnimationChanged = Boolean(changes['animation']);\n  const hasAnimation = isAnimationChanged && changes['animation'].currentValue;\n  return isAnimationChanged && !hasAnimation;\n};\n/**\n * @hidden\n */\nconst setProgressBarStyles = (props, renderer) => {\n  props.forEach(prop => {\n    renderer[prop.method](prop.el, prop.attr, `${prop.attrValue}`);\n  });\n};\n/**\n * @hidden\n */\nconst removeProgressBarStyles = (props, renderer) => {\n  props.forEach(prop => {\n    renderer[prop.method](prop.el, prop.attr);\n  });\n};\n/**\n * @hidden\n */\nconst hasElementSize = element => {\n  return !!(element.style.width && element.style.height);\n};\n\n/**\n * @hidden\n */\nclass ProgressBarBase {\n  /**\n   * @hidden\n   */\n  constructor(elem, renderer, localization) {\n    this.elem = elem;\n    this.renderer = renderer;\n    this.localization = localization;\n    this.hostClasses = true;\n    this.roleAttribute = 'progressbar';\n    /**\n     * The maximum value of the ProgressBar.\n     * Defaults to `100`.\n     */\n    this.max = 100;\n    /**\n     * The minimum value of the ProgressBar.\n     * Defaults to `0`.\n     */\n    this.min = 0;\n    /**\n     * The value of the ProgressBar.\n     * Has to be between `min` and `max`.\n     * By default, the value is equal to the `min` value.\n     */\n    /**\n     * The value of the ProgressBar.\n     * Has to be between `min` and `max`.\n     * Defaults to `0`.\n     */\n    this.value = 0;\n    /**\n     * Defines the orientation of the ProgressBar\n     * ([see example]({% slug progressbar_orientation %})).\n     * Defaults to `horizontal`.\n     */\n    this.orientation = 'horizontal';\n    /**\n     * If set to `true`, the ProgressBar will be disabled\n     * ([see example]({% slug progressbar_disabled %})).\n     * It will still allow you to change its value.\n     * Defaults to `false`.\n     */\n    this.disabled = false;\n    /**\n     * If set to `true`, the ProgressBar will be reversed\n     * ([see example]({% slug progressbar_direction %})).\n     * Defaults to `false`.\n     */\n    this.reverse = false;\n    /**\n     * Sets the `indeterminate` state of the ProgressBar.\n     * Defaults to `false`.\n     */\n    this.indeterminate = false;\n    this.displayValue = 0;\n    this.previousValue = 0;\n    validatePackage(packageMetadata);\n    this.localizationChangeSubscription = localization.changes.subscribe(({\n      rtl\n    }) => {\n      this.direction = rtl ? 'rtl' : 'ltr';\n    });\n  }\n  get isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n  get isVertical() {\n    return this.orientation === 'vertical';\n  }\n  get disabledClass() {\n    return this.disabled;\n  }\n  get reverseClass() {\n    return this.reverse;\n  }\n  get indeterminateClass() {\n    return this.indeterminate;\n  }\n  get dirAttribute() {\n    return this.direction;\n  }\n  get ariaMinAttribute() {\n    return String(this.min);\n  }\n  get ariaMaxAttribute() {\n    return String(this.max);\n  }\n  get ariaValueAttribute() {\n    return this.indeterminate ? undefined : String(this.displayValue);\n  }\n  /**\n   * @hidden\n   */\n  get isCompleted() {\n    return this.value === this.max;\n  }\n  /**\n   * @hidden\n   */\n  get statusWidth() {\n    return this.orientation === 'horizontal' ? this._progressRatio * 100 : 100;\n  }\n  /**\n   * @hidden\n   */\n  get statusHeight() {\n    return this.orientation === 'vertical' ? this._progressRatio * 100 : 100;\n  }\n  /**\n   * @hidden\n   */\n  get statusWrapperWidth() {\n    return this.orientation === 'horizontal' ? 100 / this._progressRatio : 100;\n  }\n  /**\n   * @hidden\n   */\n  get statusWrapperHeight() {\n    return this.orientation === 'vertical' ? 100 / this._progressRatio : 100;\n  }\n  get _progressRatio() {\n    return calculateRatio(this.min, this.max, this.displayValue);\n  }\n  ngAfterViewInit() {\n    const elem = this.elem.nativeElement;\n    const label = this.localization.get('progressBarLabel');\n    this.renderer.setAttribute(elem, 'aria-label', label);\n  }\n  ngOnChanges(changes) {\n    const min = extractValueFromChanges(changes, 'min', this.min);\n    const max = extractValueFromChanges(changes, 'max', this.max);\n    const value = extractValueFromChanges(changes, 'value', this.value);\n    if (changes['min'] || changes['max'] || changes['value']) {\n      if (changes['min'] || changes['max']) {\n        validateRange(min, max);\n      }\n      if (changes['value']) {\n        if (value == null || Number.isNaN(value)) {\n          this.value = min;\n        }\n        const previousValue = this.displayValue;\n        this.displayValue = adjustValueToRange(this.min, this.max, value);\n        this.previousValue = previousValue;\n      }\n      this.min = min;\n      this.max = max;\n      this.displayValue = adjustValueToRange(this.min, this.max, value);\n    }\n  }\n  ngOnDestroy() {\n    if (this.localizationChangeSubscription) {\n      this.localizationChangeSubscription.unsubscribe();\n    }\n  }\n}\nProgressBarBase.ɵfac = function ProgressBarBase_Factory(t) {\n  return new (t || ProgressBarBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\nProgressBarBase.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProgressBarBase,\n  selectors: [[\"ng-component\"]],\n  hostVars: 17,\n  hostBindings: function ProgressBarBase_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"dir\", ctx.dirAttribute)(\"role\", ctx.roleAttribute)(\"aria-valuemin\", ctx.ariaMinAttribute)(\"aria-valuemax\", ctx.ariaMaxAttribute)(\"aria-valuenow\", ctx.ariaValueAttribute);\n      i0.ɵɵclassProp(\"k-progressbar\", ctx.hostClasses)(\"k-progressbar-horizontal\", ctx.isHorizontal)(\"k-progressbar-vertical\", ctx.isVertical)(\"k-disabled\", ctx.disabledClass)(\"k-progressbar-reverse\", ctx.reverseClass)(\"k-progressbar-indeterminate\", ctx.indeterminateClass);\n    }\n  },\n  inputs: {\n    max: \"max\",\n    min: \"min\",\n    value: \"value\",\n    orientation: \"orientation\",\n    disabled: \"disabled\",\n    reverse: \"reverse\",\n    indeterminate: \"indeterminate\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function ProgressBarBase_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressBarBase, [{\n    type: Component,\n    args: [{\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.LocalizationService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-progressbar']\n    }],\n    isHorizontal: [{\n      type: HostBinding,\n      args: ['class.k-progressbar-horizontal']\n    }],\n    isVertical: [{\n      type: HostBinding,\n      args: ['class.k-progressbar-vertical']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-disabled']\n    }],\n    reverseClass: [{\n      type: HostBinding,\n      args: ['class.k-progressbar-reverse']\n    }],\n    indeterminateClass: [{\n      type: HostBinding,\n      args: ['class.k-progressbar-indeterminate']\n    }],\n    dirAttribute: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    roleAttribute: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    ariaMinAttribute: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemin']\n    }],\n    ariaMaxAttribute: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemax']\n    }],\n    ariaValueAttribute: [{\n      type: HostBinding,\n      args: ['attr.aria-valuenow']\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    orientation: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }],\n    indeterminate: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass ProgressBarMessages extends ComponentMessages {}\nProgressBarMessages.ɵfac = /* @__PURE__ */function () {\n  let ɵProgressBarMessages_BaseFactory;\n  return function ProgressBarMessages_Factory(t) {\n    return (ɵProgressBarMessages_BaseFactory || (ɵProgressBarMessages_BaseFactory = i0.ɵɵgetInheritedFactory(ProgressBarMessages)))(t || ProgressBarMessages);\n  };\n}();\nProgressBarMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ProgressBarMessages,\n  inputs: {\n    progressBarLabel: \"progressBarLabel\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressBarMessages, [{\n    type: Directive,\n    args: [{}]\n  }], null, {\n    progressBarLabel: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @hidden\n */\nclass LocalizedProgressBarMessagesDirective extends ProgressBarMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n}\nLocalizedProgressBarMessagesDirective.ɵfac = function LocalizedProgressBarMessagesDirective_Factory(t) {\n  return new (t || LocalizedProgressBarMessagesDirective)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\nLocalizedProgressBarMessagesDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LocalizedProgressBarMessagesDirective,\n  selectors: [[\"\", \"kendoProgressBarLocalizedMessages\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ProgressBarMessages,\n    useExisting: forwardRef(() => LocalizedProgressBarMessagesDirective)\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizedProgressBarMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: ProgressBarMessages,\n        useExisting: forwardRef(() => LocalizedProgressBarMessagesDirective)\n      }],\n      selector: `[kendoProgressBarLocalizedMessages]`\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\n\n/**\n * Represents the [Kendo UI ProgressBar component for Angular]({% slug overview_progressbar %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-progressbar [value]=\"value\">\n *        </kendo-progressbar>\n *    `\n * })\n * class AppComponent {\n *     public value = 50;\n * }\n * ```\n */\nclass ProgressBarComponent extends ProgressBarBase {\n  /**\n   * @hidden\n   */\n  constructor(localization, elem, renderer, zone) {\n    super(elem, renderer, localization);\n    this.localization = localization;\n    this.elem = elem;\n    this.renderer = renderer;\n    this.zone = zone;\n    /**\n     * Determines whether the status label will be visible.\n     * Defaults to `true`&mdash;the label will be visible and displayed with the default\n     * `LabelSettings` having its position set to `end` and its format set to `value`.\n     */\n    this.label = true;\n    /**\n     * The animation configuration of the ProgressBar.\n     * Defaults to `false`.\n     */\n    this.animation = false;\n    /**\n     * Fires when the animation which indicates the latest value change is completed.\n     */\n    this.animationEnd = new EventEmitter();\n  }\n  /**\n   * @hidden\n   */\n  get showLabel() {\n    if (typeof this.label === 'boolean') {\n      return this.label;\n    } else {\n      if (this.label && !this.label.hasOwnProperty('visible')) {\n        this.label.visible = true;\n      }\n      return this.label.visible;\n    }\n  }\n  /**\n   * @hidden\n   */\n  get labelPosition() {\n    if (typeof this.label === 'boolean') {\n      return 'end';\n    } else {\n      if (this.label && !this.label.hasOwnProperty('position')) {\n        this.label.position = 'end';\n      }\n      return this.label.position;\n    }\n  }\n  /**\n   * @hidden\n   */\n  get isPositionStart() {\n    return this.labelPosition === 'start';\n  }\n  /**\n   * @hidden\n   */\n  get isPositionCenter() {\n    return this.labelPosition === 'center';\n  }\n  /**\n   * @hidden\n   */\n  get isPositionEnd() {\n    return this.labelPosition === 'end';\n  }\n  /**\n   * @hidden\n   */\n  get formattedLabelValue() {\n    return formatValue(this.displayValue, this.min, this.max, this.label);\n  }\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n    if (this.isAnimationInProgress && stopCurrentAnimation(changes)) {\n      this.cancelCurrentAnimation = true;\n    }\n    if (runAnimation(changes, this.animation, this.previousValue, this.displayValue) && !changes['value'].firstChange) {\n      this.startAnimation(this.previousValue);\n    }\n  }\n  /**\n   * @hidden\n   */\n  ngOnDestroy() {\n    if (this.animationFrame) {\n      cancelAnimationFrame(this.animationFrame);\n    }\n  }\n  /**\n   * @hidden\n   */\n  startAnimation(previousValue) {\n    this.isAnimationInProgress = true;\n    const element = this.progressStatusElement.nativeElement;\n    const wrapperElement = this.progressStatusWrapperElement.nativeElement;\n    const animationOptions = this.getAnimationOptions(previousValue);\n    this.zone.runOutsideAngular(() => {\n      if (this.animationFrame) {\n        cancelAnimationFrame(this.animationFrame);\n      }\n      const animate = () => {\n        const elapsed = new Date().getTime() - animationOptions.startTime;\n        const position = Math.min(elapsed / animationOptions.duration, 1);\n        const size = animationOptions.startSize + animationOptions.deltaSize * position;\n        const wrapperSize = 100 / size * 100;\n        this.renderValueChange(element, wrapperElement, animationOptions.property, size, wrapperSize);\n        if (position < 1) {\n          if (this.cancelCurrentAnimation) {\n            this.resetProgress(element, wrapperElement, animationOptions.property);\n            return;\n          }\n          this.animationFrame = requestAnimationFrame(animate);\n        } else {\n          this.stopAnimation(previousValue);\n        }\n      };\n      animate();\n    });\n  }\n  /**\n   * @hidden\n   */\n  get animationDuration() {\n    if (typeof this.animation === 'boolean') {\n      return 400;\n    } else {\n      if (this.animation && !this.animation.hasOwnProperty('duration')) {\n        this.animation.duration = 400;\n      }\n      return this.animation.duration;\n    }\n  }\n  stopAnimation(value) {\n    if (hasObservers(this.animationEnd)) {\n      this.zone.run(() => {\n        this.animationEnd.emit({\n          from: value,\n          to: this.displayValue\n        });\n      });\n    }\n    this.zone.run(() => {\n      this.isAnimationInProgress = false;\n    });\n  }\n  getAnimationOptions(value) {\n    const isHorizontal = this.orientation === 'horizontal';\n    const previousRatio = calculateRatio(this.min, this.max, value);\n    const previousStatusWidth = isHorizontal ? previousRatio * 100 : 100;\n    const previousStatusHeight = !isHorizontal ? previousRatio * 100 : 100;\n    const property = isHorizontal ? 'width' : 'height';\n    const startTime = new Date().getTime();\n    const startSize = isHorizontal ? previousStatusWidth : previousStatusHeight;\n    const deltaSize = isHorizontal ? this.statusWidth - previousStatusWidth : this.statusHeight - previousStatusHeight;\n    const duration = this.animationDuration * Math.abs(deltaSize / 100);\n    return {\n      property,\n      startTime,\n      startSize,\n      deltaSize,\n      duration\n    };\n  }\n  renderValueChange(element, wrapperElement, property, size, wrapperSize) {\n    this.renderer.setStyle(element, property, size + '%');\n    this.renderer.setStyle(wrapperElement, property, wrapperSize + '%');\n  }\n  resetProgress(element, wrapperElement, property) {\n    const size = calculateRatio(this.min, this.max, this.value);\n    const newSize = size * 100;\n    const newWrapperSize = 100 / size;\n    this.renderValueChange(element, wrapperElement, property, newSize, newWrapperSize);\n    this.zone.run(() => {\n      this.cancelCurrentAnimation = false;\n      this.isAnimationInProgress = false;\n    });\n  }\n}\nProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) {\n  return new (t || ProgressBarComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nProgressBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProgressBarComponent,\n  selectors: [[\"kendo-progressbar\"]],\n  viewQuery: function ProgressBarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.progressStatusElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.progressStatusWrapperElement = _t.first);\n    }\n  },\n  inputs: {\n    label: \"label\",\n    progressCssStyle: \"progressCssStyle\",\n    progressCssClass: \"progressCssClass\",\n    emptyCssStyle: \"emptyCssStyle\",\n    emptyCssClass: \"emptyCssClass\",\n    animation: \"animation\"\n  },\n  outputs: {\n    animationEnd: \"animationEnd\"\n  },\n  exportAs: [\"kendoProgressBar\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.progressbar'\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 28,\n  consts: function () {\n    let i18n_2;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label attribute for the ProgressBar component.\n       * @meaning kendo.progressbar.progressBarLabel\n       */\n      const MSG__USERS_TEQNOID_PROJECTS_TEACHINGCHANNEL_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PROGRESSBAR_FESM2020_PROGRESS_KENDO_ANGULAR_PROGRESSBAR_MJS_3 = goog.getMsg(\"Progressbar\");\n      i18n_2 = MSG__USERS_TEQNOID_PROJECTS_TEACHINGCHANNEL_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PROGRESSBAR_FESM2020_PROGRESS_KENDO_ANGULAR_PROGRESSBAR_MJS_3;\n    } else {\n      i18n_2 = $localize`:kendo.progressbar.progressBarLabel|The aria-label attribute for the ProgressBar component.:Progressbar`;\n    }\n    return [[\"kendoProgressBarLocalizedMessages\", \"\", \"progressBarLabel\", i18n_2], [1, \"k-progress-status-wrap\", 3, \"ngStyle\", \"ngClass\"], [\"class\", \"k-progress-status\", 4, \"ngIf\"], [1, \"k-selected\", \"k-progressbar-value\", 3, \"ngStyle\", \"ngClass\"], [\"progressStatus\", \"\"], [1, \"k-progress-status-wrap\"], [\"progressStatusWrap\", \"\"], [1, \"k-progress-status\"]];\n  },\n  template: function ProgressBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵtemplate(2, ProgressBarComponent_span_2_Template, 2, 1, \"span\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4)(5, \"span\", 5, 6);\n      i0.ɵɵtemplate(7, ProgressBarComponent_span_7_Template, 2, 1, \"span\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"k-progress-start\", ctx.isPositionStart)(\"k-progress-center\", ctx.isPositionCenter)(\"k-progress-end\", ctx.isPositionEnd);\n      i0.ɵɵproperty(\"ngStyle\", ctx.emptyCssStyle)(\"ngClass\", ctx.emptyCssClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.statusWidth, \"%\")(\"height\", ctx.statusHeight, \"%\");\n      i0.ɵɵclassProp(\"k-complete\", ctx.isCompleted);\n      i0.ɵɵproperty(\"ngStyle\", ctx.progressCssStyle)(\"ngClass\", ctx.progressCssClass);\n      i0.ɵɵadvance(2);\n      i0.ɵɵstyleProp(\"width\", ctx.statusWrapperWidth, \"%\")(\"height\", ctx.statusWrapperHeight, \"%\");\n      i0.ɵɵclassProp(\"k-progress-start\", ctx.isPositionStart)(\"k-progress-center\", ctx.isPositionCenter)(\"k-progress-end\", ctx.isPositionEnd);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showLabel);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i2.NgStyle, LocalizedProgressBarMessagesDirective],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressBarComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoProgressBar',\n      selector: 'kendo-progressbar',\n      template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.progressbar.progressBarLabel|The aria-label attribute for the ProgressBar component.\"\n            progressBarLabel=\"Progressbar\"\n        >\n        </ng-container>\n        <span class=\"k-progress-status-wrap\"\n            [class.k-progress-start]=\"isPositionStart\"\n            [class.k-progress-center]=\"isPositionCenter\"\n            [class.k-progress-end]=\"isPositionEnd\"\n            [ngStyle]=\"emptyCssStyle\"\n            [ngClass]=\"emptyCssClass\">\n            <span *ngIf=\"showLabel\" class=\"k-progress-status\">{{formattedLabelValue}}</span>\n        </span>\n        <div\n            #progressStatus\n            class=\"k-selected k-progressbar-value\"\n            [class.k-complete]=\"isCompleted\"\n            [ngStyle]=\"progressCssStyle\"\n            [ngClass]=\"progressCssClass\"\n            [style.width.%]=\"statusWidth\"\n            [style.height.%]=\"statusHeight\"\n            >\n            <span\n                #progressStatusWrap\n                class=\"k-progress-status-wrap\"\n                [style.width.%]=\"statusWrapperWidth\"\n                [style.height.%]=\"statusWrapperHeight\"\n                [class.k-progress-start]=\"isPositionStart\"\n                [class.k-progress-center]=\"isPositionCenter\"\n                [class.k-progress-end]=\"isPositionEnd\"\n                >\n                <span *ngIf=\"showLabel\" class=\"k-progress-status\">{{formattedLabelValue}}</span>\n            </span>\n        </div>\n       `,\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.progressbar'\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    label: [{\n      type: Input\n    }],\n    progressCssStyle: [{\n      type: Input\n    }],\n    progressCssClass: [{\n      type: Input\n    }],\n    emptyCssStyle: [{\n      type: Input\n    }],\n    emptyCssClass: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    animationEnd: [{\n      type: Output\n    }],\n    progressStatusElement: [{\n      type: ViewChild,\n      args: ['progressStatus', {\n        static: false\n      }]\n    }],\n    progressStatusWrapperElement: [{\n      type: ViewChild,\n      args: ['progressStatusWrap', {\n        static: false\n      }]\n    }]\n  });\n})();\n\n/**\n * Represents the [Kendo UI ChunkProgressBar component for Angular]({% slug overview_chunkprogressbar %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-chunkprogressbar [value]=\"value\">\n *        </kendo-chunkprogressbar>\n *    `\n * })\n * class AppComponent {\n *     public value = 40;\n * }\n * ```\n */\nclass ChunkProgressBarComponent extends ProgressBarBase {\n  /**\n   * @hidden\n   */\n  constructor(localization, elem, renderer) {\n    super(elem, renderer, localization);\n    this.localization = localization;\n    this.elem = elem;\n    this.renderer = renderer;\n    this.chunkClass = true;\n    /**\n     * Sets the number of chunks into which the ChunkProgressBar will be split.\n     * Defaults to `5`.\n     */\n    this.chunkCount = 5;\n    this._orientationStyles = {\n      width: `${this.chunkSizePercentage}%`,\n      height: null\n    };\n  }\n  /**\n   * @hidden\n   */\n  get chunks() {\n    const count = this.chunkCount;\n    const chunks = Array(count).fill(false);\n    const completedChunks = Math.floor(this._progressRatio * count);\n    for (let i = 0; i < completedChunks; i++) {\n      chunks[i] = true;\n    }\n    return chunks;\n  }\n  /**\n   * @hidden\n   */\n  get chunkSizePercentage() {\n    return 100 / this.chunkCount;\n  }\n  /**\n   * @hidden\n   */\n  get orientationStyles() {\n    if (this.orientation === 'horizontal') {\n      this._orientationStyles.width = `${this.chunkSizePercentage}%`;\n      this._orientationStyles.height = null;\n    } else {\n      this._orientationStyles.height = `${this.chunkSizePercentage}%`;\n      this._orientationStyles.width = null;\n    }\n    return this._orientationStyles;\n  }\n}\nChunkProgressBarComponent.ɵfac = function ChunkProgressBarComponent_Factory(t) {\n  return new (t || ChunkProgressBarComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nChunkProgressBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ChunkProgressBarComponent,\n  selectors: [[\"kendo-chunkprogressbar\"]],\n  hostVars: 2,\n  hostBindings: function ChunkProgressBarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"k-chunk-progressbar\", ctx.chunkClass);\n    }\n  },\n  inputs: {\n    chunkCount: \"chunkCount\",\n    progressCssStyle: \"progressCssStyle\",\n    progressCssClass: \"progressCssClass\",\n    emptyCssStyle: \"emptyCssStyle\",\n    emptyCssClass: \"emptyCssClass\"\n  },\n  exportAs: [\"kendoChunkProgressBar\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.chunkprogressbar'\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 1,\n  consts: function () {\n    let i18n_4;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label attribute for the ChunkProgressBar component.\n       * @meaning kendo.chunkprogressbar.progressBarLabel\n       */\n      const MSG__USERS_TEQNOID_PROJECTS_TEACHINGCHANNEL_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PROGRESSBAR_FESM2020_PROGRESS_KENDO_ANGULAR_PROGRESSBAR_MJS_5 = goog.getMsg(\"Chunk progressbar\");\n      i18n_4 = MSG__USERS_TEQNOID_PROJECTS_TEACHINGCHANNEL_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PROGRESSBAR_FESM2020_PROGRESS_KENDO_ANGULAR_PROGRESSBAR_MJS_5;\n    } else {\n      i18n_4 = $localize`:kendo.chunkprogressbar.progressBarLabel|The aria-label attribute for the ChunkProgressBar component.:Chunk progressbar`;\n    }\n    return [[\"kendoProgressBarLocalizedMessages\", \"\", \"progressBarLabel\", i18n_4], [1, \"k-reset\", \"k-progressbar-chunks\"], [\"class\", \"k-progressbar-chunk\", 3, \"k-first\", \"k-last\", \"k-selected\", \"ngClass\", \"ngStyle\", \"width\", \"height\", 4, \"ngFor\", \"ngForOf\"], [1, \"k-progressbar-chunk\", 3, \"ngClass\", \"ngStyle\"]];\n  },\n  template: function ChunkProgressBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"ul\", 1);\n      i0.ɵɵtemplate(2, ChunkProgressBarComponent_li_2_Template, 1, 12, \"li\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chunks);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgStyle, LocalizedProgressBarMessagesDirective],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChunkProgressBarComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoChunkProgressBar',\n      selector: 'kendo-chunkprogressbar',\n      template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.chunkprogressbar.progressBarLabel|The aria-label attribute for the ChunkProgressBar component.\"\n            progressBarLabel=\"Chunk progressbar\"\n        >\n        </ng-container>\n        <ul class=\"k-reset k-progressbar-chunks\">\n            <li class=\"k-progressbar-chunk\" *ngFor=\"let chunk of chunks; let i = index;\"\n                [class.k-first]=\"i === 0\"\n                [class.k-last]=\"i === chunkCount - 1\"\n                [class.k-selected]=\"chunk\"\n                [ngClass]=\"chunk ? progressCssClass : emptyCssClass\"\n                [ngStyle]=\"chunk ? progressCssStyle : emptyCssStyle\"\n                [style.width]=\"orientationStyles.width\"\n                [style.height]=\"orientationStyles.height\"\n                >\n            </li>\n        </ul>\n    `,\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.chunkprogressbar'\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    chunkClass: [{\n      type: HostBinding,\n      args: ['class.k-chunk-progressbar']\n    }],\n    chunkCount: [{\n      type: Input\n    }],\n    progressCssStyle: [{\n      type: Input\n    }],\n    progressCssClass: [{\n      type: Input\n    }],\n    emptyCssStyle: [{\n      type: Input\n    }],\n    emptyCssClass: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * A directive that selects a template within the <kendo-circularprogessbar> component which will be used for the center template.\n * ([see example]({% slug center_template_circularprogressbar %})).\n */\nclass CircularProgressbarCenterTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n}\nCircularProgressbarCenterTemplateDirective.ɵfac = function CircularProgressbarCenterTemplateDirective_Factory(t) {\n  return new (t || CircularProgressbarCenterTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nCircularProgressbarCenterTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: CircularProgressbarCenterTemplateDirective,\n  selectors: [[\"\", \"kendoCircularProgressbarCenterTemplate\", \"\"]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircularProgressbarCenterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCircularProgressbarCenterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\nconst DEFAULT_SURFACE_SIZE = 200;\n/**\n * Represents the [Kendo UI Circular ProgressBar component for Angular]({% slug overview_circularprogressbar %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-circularprogressbar [value]=\"value\"></kendo-circularprogressbar>\n *    `\n * })\n * class AppComponent {\n *     public value: number = 50;\n * }\n * ```\n */\nclass CircularProgressBarComponent {\n  constructor(renderer, cdr, localization, element, zone) {\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.localization = localization;\n    this.element = element;\n    this.zone = zone;\n    this.hostClasses = true;\n    this.roleAttribute = 'progressbar';\n    /**\n     * Indicates whether an animation will be played on value changes.\n     *\n     * @default false\n     */\n    this.animation = false;\n    /**\n     * The opacity of the value arc.\n     * @default 1\n     */\n    this.opacity = 1;\n    /**\n     * Fires when the animation which indicates the latest value change is completed.\n     */\n    this.animationEnd = new EventEmitter();\n    this.centerTemplateContext = {};\n    this._indeterminate = false;\n    this._max = 100;\n    this._min = 0;\n    this._value = 0;\n    this.previousValue = 0;\n    this.internalValue = 0;\n    this.subscriptions = new Subscription();\n    validatePackage(packageMetadata);\n    this.subscriptions.add(this.localization.changes.subscribe(this.rtlChange.bind(this)));\n  }\n  get ariaMinAttribute() {\n    return String(this.min);\n  }\n  get ariaMaxAttribute() {\n    return String(this.max);\n  }\n  get ariaValueAttribute() {\n    return this.indeterminate ? undefined : String(this.value);\n  }\n  /**\n   * Sets the default value of the Circular Progressbar between `min` and `max`.\n   *\n   * @default 0\n   */\n  set value(value) {\n    if (value > this.max) {\n      this.handleErrors('value > max');\n    }\n    if (value < this.min) {\n      this.handleErrors('value < min');\n    }\n    this.previousValue = this.value;\n    this._value = value;\n  }\n  get value() {\n    return this._value;\n  }\n  /**\n   * The maximum value which the Circular Progressbar can accept.\n   *\n   * @default 100\n   */\n  set max(max) {\n    if (max < this.min) {\n      this.handleErrors('max < min');\n    }\n    this._max = max;\n  }\n  get max() {\n    return this._max;\n  }\n  /**\n   * The minimum value which the Circular Progressbar can accept.\n   *\n   * @default 0\n   */\n  set min(min) {\n    if (min > this.max) {\n      this.handleErrors('max < min');\n    }\n    this._min = min;\n  }\n  get min() {\n    return this._min;\n  }\n  /**\n   * Puts the Circular ProgressBar in indeterminate state.\n   * @default false\n   */\n  set indeterminate(indeterminate) {\n    this._indeterminate = indeterminate;\n  }\n  get indeterminate() {\n    return this._indeterminate;\n  }\n  ngAfterViewInit() {\n    if (!isDocumentAvailable()) {\n      return;\n    }\n    const elem = this.element.nativeElement;\n    const ariaLabel = this.localization.get('progressBarLabel');\n    this.renderer.setAttribute(elem, 'aria-label', ariaLabel);\n    this.initProgressArc();\n  }\n  ngOnChanges(changes) {\n    const skipFirstChange = true;\n    if (isChanged('value', changes, skipFirstChange) && this.progress) {\n      if (this.animation) {\n        this.progressbarAnimation();\n      } else {\n        const value = this.value - this.min;\n        this.internalValue = changes['value'].currentValue;\n        this.calculateProgress(value);\n      }\n    }\n    if (changes['opacity'] && this.progress) {\n      setProgressBarStyles([{\n        method: 'setAttribute',\n        el: this.progress.nativeElement,\n        attr: 'opacity',\n        attrValue: this.opacity.toString()\n      }], this.renderer);\n    }\n    if (changes['indeterminate'] && !changes['indeterminate'].firstChange) {\n      this.indeterminateState();\n    }\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  /**\n   * @hidden\n   */\n  onResize() {\n    this.setStyles();\n    const value = this.animation ? this.internalValue : this.value;\n    this.calculateProgress(value);\n    this.updateCenterTemplate(value);\n  }\n  initProgressArc() {\n    this.setStyles();\n    if (this.indeterminate) {\n      this.indeterminateState();\n    } else {\n      if (!this.animation) {\n        const value = this.value - this.min;\n        this.calculateProgress(value);\n      } else {\n        this.progressbarAnimation();\n      }\n    }\n  }\n  calculateProgress(value) {\n    if (this.progressColor) {\n      this.updateProgressColor(value);\n    }\n    // needed when we have *ngIf inside the template to render different content depending on some condition\n    this.zone.onStable.pipe(take(1)).subscribe(() => {\n      this.updateCenterTemplate(value + this.min);\n    });\n    const progressArc = this.progress.nativeElement;\n    const radius = this.progress.nativeElement.r.baseVal.value;\n    const circumference = Math.PI * (radius * 2);\n    const dir = this.rtl ? circumference * -1 : circumference;\n    const strokeDashOffest = circumference - dir * (value / (this.max - this.min));\n    const progressCalculations = [{\n      method: 'setStyle',\n      el: progressArc,\n      attr: 'strokeDasharray',\n      attrValue: circumference.toString()\n    }, {\n      method: 'setStyle',\n      el: progressArc,\n      attr: 'strokeDashoffset',\n      attrValue: strokeDashOffest.toString()\n    }];\n    setProgressBarStyles(progressCalculations, this.renderer);\n  }\n  progressbarAnimation() {\n    const forwardProgress = {\n      isOngoing: this.internalValue > this.value - this.min,\n      isPositive: this.value >= this.previousValue\n    };\n    const backwardProgress = {\n      isOngoing: this.internalValue < this.value - this.min,\n      isNegative: this.value <= this.previousValue\n    };\n    if (forwardProgress.isOngoing && forwardProgress.isPositive || backwardProgress.isOngoing && backwardProgress.isNegative) {\n      return;\n    }\n    this.calculateProgress(this.internalValue);\n    const from = this.internalValue;\n    if (hasObservers(this.animationEnd)) {\n      this.animationEnd.emit({\n        from: from,\n        to: this.internalValue\n      });\n    }\n    // eslint-disable-next-line no-unused-expressions\n    forwardProgress.isPositive ? this.internalValue += 1 : this.internalValue -= 1;\n    requestAnimationFrame(this.progressbarAnimation.bind(this));\n  }\n  setStyles() {\n    const progressArc = this.progress.nativeElement;\n    const scale = this.scale.nativeElement;\n    const surface = this.surface.nativeElement;\n    const element = this.element.nativeElement;\n    let elWidth = element.getBoundingClientRect().width;\n    if (!hasElementSize(element)) {\n      const surfaceSize = [{\n        method: 'setStyle',\n        el: surface,\n        attr: 'width',\n        attrValue: `${DEFAULT_SURFACE_SIZE}px`\n      }, {\n        method: 'setStyle',\n        el: surface,\n        attr: 'height',\n        attrValue: `${DEFAULT_SURFACE_SIZE}px`\n      }];\n      elWidth = DEFAULT_SURFACE_SIZE;\n      setProgressBarStyles(surfaceSize, this.renderer);\n    }\n    const attributesArray = [{\n      method: 'setAttribute',\n      el: progressArc,\n      attr: 'r',\n      attrValue: String(elWidth / 2 - 10)\n    }, {\n      method: 'setAttribute',\n      el: progressArc,\n      attr: 'cx',\n      attrValue: String(elWidth / 2)\n    }, {\n      method: 'setAttribute',\n      el: progressArc,\n      attr: 'cy',\n      attrValue: String(elWidth / 2)\n    }, {\n      method: 'setAttribute',\n      el: progressArc,\n      attr: 'opacity',\n      attrValue: String(this.opacity)\n    }, {\n      method: 'setAttribute',\n      el: scale,\n      attr: 'r',\n      attrValue: String(elWidth / 2 - 10)\n    }, {\n      method: 'setAttribute',\n      el: scale,\n      attr: 'cx',\n      attrValue: String(elWidth / 2)\n    }, {\n      method: 'setAttribute',\n      el: scale,\n      attr: 'cy',\n      attrValue: String(elWidth / 2)\n    }];\n    setProgressBarStyles(attributesArray, this.renderer);\n  }\n  indeterminateState() {\n    const progressArc = this.progress.nativeElement;\n    if (this.indeterminate) {\n      // the indeterminate state wont work as the `k-circular-progressbar-arc` has a transform: rotate(-90deg) which is\n      // interfering with the svg animation as the animateTransform brings its own transform: rotate()\n      // This will be like this until the themes release a new version, bringing a new class `k-circular-progressbar-indeterminate-arc`\n      // containing only the necassery CSS styles and we will switch between them when the state of the progressbar is switched.\n      this.calculateProgress(this.value - this.min);\n      const rotate = this.rtl ? {\n        from: 360,\n        to: 0\n      } : {\n        from: 0,\n        to: 360\n      };\n      let color;\n      if (!this.progressColor) {\n        color = getComputedStyle(progressArc).stroke;\n      }\n      const indeterminateStyles = [{\n        method: 'setStyle',\n        el: progressArc,\n        attr: 'transform-origin',\n        attrValue: 'center'\n      }, {\n        method: 'setStyle',\n        el: progressArc,\n        attr: 'fill',\n        attrValue: 'none'\n      }, {\n        method: 'setStyle',\n        el: progressArc,\n        attr: 'stroke-linecap',\n        attrValue: 'round'\n      }, {\n        method: 'setStyle',\n        el: progressArc,\n        attr: 'stroke',\n        attrValue: color ? color : this.currentColor\n      }];\n      setProgressBarStyles(indeterminateStyles, this.renderer);\n      this.renderer.removeClass(progressArc, 'k-circular-progressbar-arc');\n      progressArc.innerHTML = `<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"${rotate.from} 0 0\" to=\"${rotate.to} 0 0\" dur=\"1s\" repeatCount=\"indefinite\" />`;\n    } else {\n      this.renderer.addClass(progressArc, 'k-circular-progressbar-arc');\n      const removeIndeterminateStyles = [{\n        method: 'removeStyle',\n        el: progressArc,\n        attr: 'transform-origin'\n      }, {\n        method: 'removeStyle',\n        el: progressArc,\n        attr: 'fill'\n      }, {\n        method: 'removeStyle',\n        el: progressArc,\n        attr: 'stroke-linecap'\n      }];\n      removeProgressBarStyles(removeIndeterminateStyles, this.renderer);\n      progressArc.innerHTML = '';\n      if (this.animation) {\n        this.progressbarAnimation();\n      }\n    }\n  }\n  updateCenterTemplate(value) {\n    if (!this.centerTemplate) {\n      return;\n    }\n    this.centerTemplateContext.value = value;\n    this.centerTemplateContext.color = this.currentColor;\n    this.cdr.detectChanges();\n    this.positionLabel();\n  }\n  positionLabel() {\n    const labelEl = this.labelElement.nativeElement;\n    const element = this.element.nativeElement;\n    const surface = this.surface.nativeElement;\n    let elWidth;\n    let elHeight;\n    if (!hasElementSize(element)) {\n      const surfaceSize = surface.getBoundingClientRect();\n      elWidth = surfaceSize.width;\n      elHeight = surfaceSize.height;\n    } else {\n      const elementSize = element.getBoundingClientRect();\n      elWidth = elementSize.width;\n      elHeight = elementSize.height;\n    }\n    const left = elWidth / 2 - labelEl.offsetWidth / 2;\n    const top = elHeight / 2 - labelEl.offsetHeight / 2;\n    const labelCalculations = [{\n      method: 'setStyle',\n      el: labelEl,\n      attr: 'left',\n      attrValue: `${left}px`\n    }, {\n      method: 'setStyle',\n      el: labelEl,\n      attr: 'top',\n      attrValue: `${top}px`\n    }];\n    setProgressBarStyles(labelCalculations, this.renderer);\n  }\n  get currentColor() {\n    const currentColor = this.progress.nativeElement.style.stroke;\n    return currentColor;\n  }\n  updateProgressColor(value) {\n    const progressArc = this.progress.nativeElement;\n    if (typeof this.progressColor === 'string') {\n      this.renderer.setStyle(progressArc, 'stroke', this.progressColor);\n    } else {\n      for (let i = 0; i < this.progressColor.length; i++) {\n        const from = this.progressColor[i].from;\n        const to = this.progressColor[i].to;\n        if (value >= from && value <= to || !from && value <= to) {\n          this.renderer.setStyle(progressArc, 'stroke', this.progressColor[i].color);\n          break;\n        }\n        if (!to && value >= from) {\n          this.renderer.setStyle(progressArc, 'stroke', this.progressColor[i].color);\n        }\n      }\n    }\n  }\n  handleErrors(type) {\n    if (isDevMode()) {\n      switch (type) {\n        case 'value > max':\n          throw new Error('The value of the CircularProgressbar cannot exceed the max value');\n        case 'value < min':\n          throw new Error('The value of the CircularProgressbar cannot be lower than the min value');\n        case 'max < min':\n          throw new Error('The min value cannot be higher than the max value');\n        default:\n      }\n    }\n  }\n  setDirection() {\n    this.rtl = this.localization.rtl;\n    if (this.element) {\n      this.renderer.setAttribute(this.element.nativeElement, 'dir', this.rtl ? 'rtl' : 'ltr');\n    }\n    if (this.labelElement) {\n      this.renderer.setAttribute(this.labelElement.nativeElement, 'dir', this.rtl ? 'rtl' : 'ltr');\n    }\n  }\n  rtlChange() {\n    if (this.element && this.rtl !== this.localization.rtl) {\n      this.setDirection();\n    }\n  }\n}\nCircularProgressBarComponent.ɵfac = function CircularProgressBarComponent_Factory(t) {\n  return new (t || CircularProgressBarComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.LocalizationService), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nCircularProgressBarComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CircularProgressBarComponent,\n  selectors: [[\"kendo-circularprogressbar\"]],\n  contentQueries: function CircularProgressBarComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, CircularProgressbarCenterTemplateDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.centerTemplate = _t.first);\n    }\n  },\n  viewQuery: function CircularProgressBarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n      i0.ɵɵviewQuery(_c8, 5);\n      i0.ɵɵviewQuery(_c9, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.progress = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scale = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.labelElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.surface = _t.first);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function CircularProgressBarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuemin\", ctx.ariaMinAttribute)(\"aria-valuemax\", ctx.ariaMaxAttribute)(\"aria-valuenow\", ctx.ariaValueAttribute)(\"role\", ctx.roleAttribute);\n      i0.ɵɵclassProp(\"k-circular-progressbar\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    max: \"max\",\n    min: \"min\",\n    animation: \"animation\",\n    opacity: \"opacity\",\n    indeterminate: \"indeterminate\",\n    progressColor: \"progressColor\"\n  },\n  outputs: {\n    animationEnd: \"animationEnd\"\n  },\n  exportAs: [\"kendoCircularProgressBar\"],\n  features: [i0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.circularprogressbar'\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 13,\n  vars: 1,\n  consts: function () {\n    let i18n_10;\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The aria-label attribute for the Circular ProgressBar component.\n       * @meaning kendo.circularprogressbar.progressBarLabel\n       */\n      const MSG__USERS_TEQNOID_PROJECTS_TEACHINGCHANNEL_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PROGRESSBAR_FESM2020_PROGRESS_KENDO_ANGULAR_PROGRESSBAR_MJS_11 = goog.getMsg(\"Circular progressbar\");\n      i18n_10 = MSG__USERS_TEQNOID_PROJECTS_TEACHINGCHANNEL_NODE_MODULES__PROGRESS_KENDO_ANGULAR_PROGRESSBAR_FESM2020_PROGRESS_KENDO_ANGULAR_PROGRESSBAR_MJS_11;\n    } else {\n      i18n_10 = $localize`:kendo.circularprogressbar.progressBarLabel|The aria-label attribute for the Circular ProgressBar component.:Circular progressbar`;\n    }\n    return [[\"kendoProgressBarLocalizedMessages\", \"\", \"progressBarLabel\", i18n_10], [1, \"k-circular-progressbar-surface\"], [\"surface\", \"\"], [\"svg\", \"\"], [\"stroke-width\", \"9.5\", 1, \"k-circular-progressbar-scale\"], [\"scale\", \"\"], [\"stroke-width\", \"9.5\", 1, \"k-circular-progressbar-arc\"], [\"progress\", \"\"], [\"class\", \"k-circular-progressbar-label\", 4, \"ngIf\"], [3, \"resize\"], [1, \"k-circular-progressbar-label\"], [\"label\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]];\n  },\n  template: function CircularProgressBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementContainer(0, 0);\n      i0.ɵɵelementStart(1, \"div\", 1, 2)(3, \"div\");\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(4, \"svg\", null, 3)(6, \"g\");\n      i0.ɵɵelement(7, \"circle\", 4, 5)(9, \"circle\", 6, 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, CircularProgressBarComponent_div_11_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelementStart(12, \"kendo-resize-sensor\", 9);\n      i0.ɵɵlistener(\"resize\", function CircularProgressBarComponent_Template_kendo_resize_sensor_resize_12_listener() {\n        return ctx.onResize();\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.centerTemplate);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet, i3.ResizeSensorComponent, LocalizedProgressBarMessagesDirective],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CircularProgressBarComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoCircularProgressBar',\n      selector: 'kendo-circularprogressbar',\n      template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.circularprogressbar.progressBarLabel|The aria-label attribute for the Circular ProgressBar component.\"\n            progressBarLabel=\"Circular progressbar\"\n        >\n        </ng-container>\n        <div #surface class=\"k-circular-progressbar-surface\">\n            <div>\n                <svg #svg>\n                    <g>\n                        <circle class=\"k-circular-progressbar-scale\" #scale stroke-width=\"9.5\"></circle>\n                        <circle class=\"k-circular-progressbar-arc\" #progress stroke-width=\"9.5\"></circle>\n                    </g>\n                </svg>\n                <div class=\"k-circular-progressbar-label\" *ngIf=\"centerTemplate\" #label>\n                    <ng-template [ngTemplateOutlet]=\"centerTemplate.templateRef\" [ngTemplateOutletContext]=\"centerTemplateContext\"></ng-template>\n                </div>\n            </div>\n        </div>\n        <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n    `,\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.circularprogressbar'\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.LocalizationService\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-circular-progressbar']\n    }],\n    ariaMinAttribute: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemin']\n    }],\n    ariaMaxAttribute: [{\n      type: HostBinding,\n      args: ['attr.aria-valuemax']\n    }],\n    ariaValueAttribute: [{\n      type: HostBinding,\n      args: ['attr.aria-valuenow']\n    }],\n    roleAttribute: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    indeterminate: [{\n      type: Input\n    }],\n    progressColor: [{\n      type: Input\n    }],\n    animationEnd: [{\n      type: Output\n    }],\n    progress: [{\n      type: ViewChild,\n      args: ['progress']\n    }],\n    scale: [{\n      type: ViewChild,\n      args: ['scale']\n    }],\n    labelElement: [{\n      type: ViewChild,\n      args: [\"label\"]\n    }],\n    surface: [{\n      type: ViewChild,\n      args: [\"surface\"]\n    }],\n    centerTemplate: [{\n      type: ContentChild,\n      args: [CircularProgressbarCenterTemplateDirective]\n    }]\n  });\n})();\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug rtl_layout %})).\n */\nclass ProgressBarCustomMessagesComponent extends ProgressBarMessages {\n  constructor(service) {\n    super();\n    this.service = service;\n  }\n  get override() {\n    return true;\n  }\n}\nProgressBarCustomMessagesComponent.ɵfac = function ProgressBarCustomMessagesComponent_Factory(t) {\n  return new (t || ProgressBarCustomMessagesComponent)(i0.ɵɵdirectiveInject(i1.LocalizationService));\n};\nProgressBarCustomMessagesComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ProgressBarCustomMessagesComponent,\n  selectors: [[\"kendo-progressbar-messages\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: ProgressBarMessages,\n    useExisting: forwardRef(() => ProgressBarCustomMessagesComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ProgressBarCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressBarCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ProgressBarMessages,\n        useExisting: forwardRef(() => ProgressBarCustomMessagesComponent)\n      }],\n      selector: 'kendo-progressbar-messages',\n      template: ``\n    }]\n  }], function () {\n    return [{\n      type: i1.LocalizationService\n    }];\n  }, null);\n})();\nconst COMPONENT_DIRECTIVES = [ProgressBarComponent, ChunkProgressBarComponent, CircularProgressBarComponent, CircularProgressbarCenterTemplateDirective, LocalizedProgressBarMessagesDirective, ProgressBarCustomMessagesComponent];\nconst MODULES = [CommonModule, ResizeSensorModule];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the ProgressBar components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the ProgressBar module\n * import { ProgressBarModule } from '@progress/kendo-angular-progressbar';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ProgressBarModule], // import ProgressBar module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ProgressBarModule {}\nProgressBarModule.ɵfac = function ProgressBarModule_Factory(t) {\n  return new (t || ProgressBarModule)();\n};\nProgressBarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ProgressBarModule\n});\nProgressBarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MODULES]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ProgressBarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: COMPONENT_DIRECTIVES,\n      exports: COMPONENT_DIRECTIVES,\n      imports: MODULES\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChunkProgressBarComponent, CircularProgressBarComponent, CircularProgressbarCenterTemplateDirective, LocalizedProgressBarMessagesDirective, ProgressBarComponent, ProgressBarCustomMessagesComponent, ProgressBarModule };","map":{"version":3,"names":["i1","ComponentMessages","LocalizationService","L10N_PREFIX","i0","isDevMode","Component","HostBinding","Input","Directive","forwardRef","EventEmitter","Output","ViewChild","ContentChild","NgModule","validatePackage","i3","hasObservers","isDocumentAvailable","isChanged","ResizeSensorModule","i2","CommonModule","Subscription","take","packageMetadata","name","productName","productCodes","publishDate","version","licensingDocsUrl","MIN_MAX_ERROR_MESSAGE","LABEL_DECIMALS","MIN_RATIO","formatValue","value","min","max","label","defaultFormattedValue","truncateNumber","format","Math","floor","calculatePercentage","validateRange","Error","adjustValueToRange","decimalValue","abs","numberParts","toString","split","length","substr","calculateRatio","extractValueFromChanges","changes","type","currentValue","undefined","runAnimation","animation","previousValue","displayValue","requestAnimationFrame","stopCurrentAnimation","isAnimationChanged","Boolean","hasAnimation","setProgressBarStyles","props","renderer","forEach","prop","method","el","attr","attrValue","removeProgressBarStyles","hasElementSize","element","style","width","height","ProgressBarBase","constructor","elem","localization","hostClasses","roleAttribute","orientation","disabled","reverse","indeterminate","localizationChangeSubscription","subscribe","rtl","direction","isHorizontal","isVertical","disabledClass","reverseClass","indeterminateClass","dirAttribute","ariaMinAttribute","String","ariaMaxAttribute","ariaValueAttribute","isCompleted","statusWidth","_progressRatio","statusHeight","statusWrapperWidth","statusWrapperHeight","ngAfterViewInit","nativeElement","get","setAttribute","ngOnChanges","Number","isNaN","ngOnDestroy","unsubscribe","ɵfac","ElementRef","Renderer2","ɵcmp","args","template","ProgressBarMessages","ɵdir","progressBarLabel","LocalizedProgressBarMessagesDirective","service","provide","useExisting","providers","selector","ProgressBarComponent","zone","animationEnd","showLabel","hasOwnProperty","visible","labelPosition","position","isPositionStart","isPositionCenter","isPositionEnd","formattedLabelValue","isAnimationInProgress","cancelCurrentAnimation","firstChange","startAnimation","animationFrame","cancelAnimationFrame","progressStatusElement","wrapperElement","progressStatusWrapperElement","animationOptions","getAnimationOptions","runOutsideAngular","animate","elapsed","Date","getTime","startTime","duration","size","startSize","deltaSize","wrapperSize","renderValueChange","property","resetProgress","stopAnimation","animationDuration","run","emit","from","to","previousRatio","previousStatusWidth","previousStatusHeight","setStyle","newSize","newWrapperSize","NgZone","useValue","NgClass","NgIf","NgStyle","exportAs","progressCssStyle","progressCssClass","emptyCssStyle","emptyCssClass","static","ChunkProgressBarComponent","chunkClass","chunkCount","_orientationStyles","chunkSizePercentage","chunks","count","Array","fill","completedChunks","i","orientationStyles","NgForOf","CircularProgressbarCenterTemplateDirective","templateRef","TemplateRef","DEFAULT_SURFACE_SIZE","CircularProgressBarComponent","cdr","opacity","centerTemplateContext","_indeterminate","_max","_min","_value","internalValue","subscriptions","add","rtlChange","bind","handleErrors","ariaLabel","initProgressArc","skipFirstChange","progress","progressbarAnimation","calculateProgress","indeterminateState","onResize","setStyles","updateCenterTemplate","progressColor","updateProgressColor","onStable","pipe","progressArc","radius","r","baseVal","circumference","PI","dir","strokeDashOffest","progressCalculations","forwardProgress","isOngoing","isPositive","backwardProgress","isNegative","scale","surface","elWidth","getBoundingClientRect","surfaceSize","attributesArray","rotate","color","getComputedStyle","stroke","indeterminateStyles","currentColor","removeClass","innerHTML","addClass","removeIndeterminateStyles","centerTemplate","detectChanges","positionLabel","labelEl","labelElement","elHeight","elementSize","left","offsetWidth","top","offsetHeight","labelCalculations","setDirection","ChangeDetectorRef","NgTemplateOutlet","ResizeSensorComponent","ProgressBarCustomMessagesComponent","override","COMPONENT_DIRECTIVES","MODULES","ProgressBarModule","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/teqnoid/Projects/teachingchannel/node_modules/@progress/kendo-angular-progressbar/fesm2020/progress-kendo-angular-progressbar.mjs"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2024 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i1 from '@progress/kendo-angular-l10n';\nimport { ComponentMessages, LocalizationService, L10N_PREFIX } from '@progress/kendo-angular-l10n';\nimport * as i0 from '@angular/core';\nimport { isDevMode, Component, HostBinding, Input, Directive, forwardRef, EventEmitter, Output, ViewChild, ContentChild, NgModule } from '@angular/core';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport * as i3 from '@progress/kendo-angular-common';\nimport { hasObservers, isDocumentAvailable, isChanged, ResizeSensorModule } from '@progress/kendo-angular-common';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n/**\n * @hidden\n */\nconst packageMetadata = {\n    name: '@progress/kendo-angular-progressbar',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1720607744,\n    version: '16.4.0',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/'\n};\n\n/**\n * @hidden\n */\nconst MIN_MAX_ERROR_MESSAGE = `The max value should be greater than the min.`;\n/**\n * @hidden\n */\nconst LABEL_DECIMALS = 3;\n/**\n * @hidden\n */\nconst MIN_RATIO = 0.0001;\n\n/**\n * @hidden\n */\nconst formatValue = (value, min, max, label) => {\n    const defaultFormattedValue = truncateNumber(value);\n    if (typeof label !== 'boolean') {\n        if (typeof label.format === 'string') {\n            switch (label.format) {\n                case 'value':\n                    return defaultFormattedValue;\n                case 'percent':\n                    return `${Math.floor(calculatePercentage(value, min, max))}%`;\n                default:\n                    return defaultFormattedValue;\n            }\n        }\n        else if (typeof label.format === 'function') {\n            return label.format(value);\n        }\n        else {\n            return defaultFormattedValue;\n        }\n    }\n    return defaultFormattedValue;\n};\n/**\n * @hidden\n */\nconst validateRange = (min, max) => {\n    if (isDevMode && min > max) {\n        throw new Error(MIN_MAX_ERROR_MESSAGE);\n    }\n};\n/**\n * @hidden\n */\nconst adjustValueToRange = (min, max, value) => Math.max(Math.min(value, max), min);\n/**\n * @hidden\n */\nconst calculatePercentage = (value, min, max) => {\n    const decimalValue = Math.abs((value - min) / (max - min));\n    return decimalValue * 100;\n};\n/**\n * @hidden\n */\nconst truncateNumber = (value) => {\n    const numberParts = value.toString().split('.');\n    return numberParts.length === 1 ? `${numberParts[0]}` : `${numberParts[0]}.${numberParts[1].substr(0, LABEL_DECIMALS)}`;\n};\n/**\n * @hidden\n */\nconst calculateRatio = (min, max, value) => Math.max((value - min) / (max - min), MIN_RATIO);\n/**\n * @hidden\n */\nconst extractValueFromChanges = (changes, type, value) => changes[type] && changes[type].currentValue !== undefined ? changes[type].currentValue : value;\n/**\n * @hidden\n */\nconst runAnimation = (changes, animation, previousValue, displayValue) => animation && typeof requestAnimationFrame !== 'undefined' && changes['value'] && previousValue !== displayValue;\n/**\n * @hidden\n */\nconst stopCurrentAnimation = (changes) => {\n    const isAnimationChanged = Boolean(changes['animation']);\n    const hasAnimation = isAnimationChanged && changes['animation'].currentValue;\n    return isAnimationChanged && !hasAnimation;\n};\n/**\n * @hidden\n */\nconst setProgressBarStyles = (props, renderer) => {\n    props.forEach(prop => {\n        renderer[prop.method](prop.el, prop.attr, `${prop.attrValue}`);\n    });\n};\n/**\n * @hidden\n */\nconst removeProgressBarStyles = (props, renderer) => {\n    props.forEach(prop => {\n        renderer[prop.method](prop.el, prop.attr);\n    });\n};\n/**\n * @hidden\n */\nconst hasElementSize = (element) => {\n    return !!(element.style.width && element.style.height);\n};\n\n/**\n * @hidden\n */\nclass ProgressBarBase {\n    /**\n     * @hidden\n     */\n    constructor(elem, renderer, localization) {\n        this.elem = elem;\n        this.renderer = renderer;\n        this.localization = localization;\n        this.hostClasses = true;\n        this.roleAttribute = 'progressbar';\n        /**\n         * The maximum value of the ProgressBar.\n         * Defaults to `100`.\n         */\n        this.max = 100;\n        /**\n         * The minimum value of the ProgressBar.\n         * Defaults to `0`.\n         */\n        this.min = 0;\n        /**\n         * The value of the ProgressBar.\n         * Has to be between `min` and `max`.\n         * By default, the value is equal to the `min` value.\n         */\n        /**\n         * The value of the ProgressBar.\n         * Has to be between `min` and `max`.\n         * Defaults to `0`.\n         */\n        this.value = 0;\n        /**\n         * Defines the orientation of the ProgressBar\n         * ([see example]({% slug progressbar_orientation %})).\n         * Defaults to `horizontal`.\n         */\n        this.orientation = 'horizontal';\n        /**\n         * If set to `true`, the ProgressBar will be disabled\n         * ([see example]({% slug progressbar_disabled %})).\n         * It will still allow you to change its value.\n         * Defaults to `false`.\n         */\n        this.disabled = false;\n        /**\n         * If set to `true`, the ProgressBar will be reversed\n         * ([see example]({% slug progressbar_direction %})).\n         * Defaults to `false`.\n         */\n        this.reverse = false;\n        /**\n         * Sets the `indeterminate` state of the ProgressBar.\n         * Defaults to `false`.\n         */\n        this.indeterminate = false;\n        this.displayValue = 0;\n        this.previousValue = 0;\n        validatePackage(packageMetadata);\n        this.localizationChangeSubscription = localization.changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n        });\n    }\n    get isHorizontal() {\n        return this.orientation === 'horizontal';\n    }\n    get isVertical() {\n        return this.orientation === 'vertical';\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get reverseClass() {\n        return this.reverse;\n    }\n    get indeterminateClass() {\n        return this.indeterminate;\n    }\n    get dirAttribute() {\n        return this.direction;\n    }\n    get ariaMinAttribute() {\n        return String(this.min);\n    }\n    get ariaMaxAttribute() {\n        return String(this.max);\n    }\n    get ariaValueAttribute() {\n        return this.indeterminate ? undefined : String(this.displayValue);\n    }\n    /**\n     * @hidden\n     */\n    get isCompleted() {\n        return this.value === this.max;\n    }\n    /**\n     * @hidden\n     */\n    get statusWidth() {\n        return this.orientation === 'horizontal' ? this._progressRatio * 100 : 100;\n    }\n    /**\n     * @hidden\n     */\n    get statusHeight() {\n        return this.orientation === 'vertical' ? this._progressRatio * 100 : 100;\n    }\n    /**\n     * @hidden\n     */\n    get statusWrapperWidth() {\n        return this.orientation === 'horizontal' ? 100 / this._progressRatio : 100;\n    }\n    /**\n     * @hidden\n     */\n    get statusWrapperHeight() {\n        return this.orientation === 'vertical' ? 100 / this._progressRatio : 100;\n    }\n    get _progressRatio() {\n        return calculateRatio(this.min, this.max, this.displayValue);\n    }\n    ngAfterViewInit() {\n        const elem = this.elem.nativeElement;\n        const label = this.localization.get('progressBarLabel');\n        this.renderer.setAttribute(elem, 'aria-label', label);\n    }\n    ngOnChanges(changes) {\n        const min = extractValueFromChanges(changes, 'min', this.min);\n        const max = extractValueFromChanges(changes, 'max', this.max);\n        const value = extractValueFromChanges(changes, 'value', this.value);\n        if (changes['min'] || changes['max'] || changes['value']) {\n            if (changes['min'] || changes['max']) {\n                validateRange(min, max);\n            }\n            if (changes['value']) {\n                if (value == null || Number.isNaN(value)) {\n                    this.value = min;\n                }\n                const previousValue = this.displayValue;\n                this.displayValue = adjustValueToRange(this.min, this.max, value);\n                this.previousValue = previousValue;\n            }\n            this.min = min;\n            this.max = max;\n            this.displayValue = adjustValueToRange(this.min, this.max, value);\n        }\n    }\n    ngOnDestroy() {\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n    }\n}\nProgressBarBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarBase, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nProgressBarBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: ProgressBarBase, selector: \"ng-component\", inputs: { max: \"max\", min: \"min\", value: \"value\", orientation: \"orientation\", disabled: \"disabled\", reverse: \"reverse\", indeterminate: \"indeterminate\" }, host: { properties: { \"class.k-progressbar\": \"this.hostClasses\", \"class.k-progressbar-horizontal\": \"this.isHorizontal\", \"class.k-progressbar-vertical\": \"this.isVertical\", \"class.k-disabled\": \"this.disabledClass\", \"class.k-progressbar-reverse\": \"this.reverseClass\", \"class.k-progressbar-indeterminate\": \"this.indeterminateClass\", \"attr.dir\": \"this.dirAttribute\", \"attr.role\": \"this.roleAttribute\", \"attr.aria-valuemin\": \"this.ariaMinAttribute\", \"attr.aria-valuemax\": \"this.ariaMaxAttribute\", \"attr.aria-valuenow\": \"this.ariaValueAttribute\" } }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarBase, decorators: [{\n            type: Component,\n            args: [{\n                    template: ''\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.LocalizationService }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-progressbar']\n            }], isHorizontal: [{\n                type: HostBinding,\n                args: ['class.k-progressbar-horizontal']\n            }], isVertical: [{\n                type: HostBinding,\n                args: ['class.k-progressbar-vertical']\n            }], disabledClass: [{\n                type: HostBinding,\n                args: ['class.k-disabled']\n            }], reverseClass: [{\n                type: HostBinding,\n                args: ['class.k-progressbar-reverse']\n            }], indeterminateClass: [{\n                type: HostBinding,\n                args: ['class.k-progressbar-indeterminate']\n            }], dirAttribute: [{\n                type: HostBinding,\n                args: ['attr.dir']\n            }], roleAttribute: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], ariaMinAttribute: [{\n                type: HostBinding,\n                args: ['attr.aria-valuemin']\n            }], ariaMaxAttribute: [{\n                type: HostBinding,\n                args: ['attr.aria-valuemax']\n            }], ariaValueAttribute: [{\n                type: HostBinding,\n                args: ['attr.aria-valuenow']\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], orientation: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], reverse: [{\n                type: Input\n            }], indeterminate: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass ProgressBarMessages extends ComponentMessages {\n}\nProgressBarMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarMessages, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nProgressBarMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.10\", type: ProgressBarMessages, inputs: { progressBarLabel: \"progressBarLabel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarMessages, decorators: [{\n            type: Directive,\n            args: [{}]\n        }], propDecorators: { progressBarLabel: [{\n                type: Input\n            }] } });\n\n/**\n * @hidden\n */\nclass LocalizedProgressBarMessagesDirective extends ProgressBarMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedProgressBarMessagesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: LocalizedProgressBarMessagesDirective, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Directive });\nLocalizedProgressBarMessagesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.10\", type: LocalizedProgressBarMessagesDirective, selector: \"[kendoProgressBarLocalizedMessages]\", providers: [\n        {\n            provide: ProgressBarMessages,\n            useExisting: forwardRef(() => LocalizedProgressBarMessagesDirective)\n        }\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: LocalizedProgressBarMessagesDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            provide: ProgressBarMessages,\n                            useExisting: forwardRef(() => LocalizedProgressBarMessagesDirective)\n                        }\n                    ],\n                    selector: `[kendoProgressBarLocalizedMessages]`\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\n/**\n * Represents the [Kendo UI ProgressBar component for Angular]({% slug overview_progressbar %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-progressbar [value]=\"value\">\n *        </kendo-progressbar>\n *    `\n * })\n * class AppComponent {\n *     public value = 50;\n * }\n * ```\n */\nclass ProgressBarComponent extends ProgressBarBase {\n    /**\n     * @hidden\n     */\n    constructor(localization, elem, renderer, zone) {\n        super(elem, renderer, localization);\n        this.localization = localization;\n        this.elem = elem;\n        this.renderer = renderer;\n        this.zone = zone;\n        /**\n         * Determines whether the status label will be visible.\n         * Defaults to `true`&mdash;the label will be visible and displayed with the default\n         * `LabelSettings` having its position set to `end` and its format set to `value`.\n         */\n        this.label = true;\n        /**\n         * The animation configuration of the ProgressBar.\n         * Defaults to `false`.\n         */\n        this.animation = false;\n        /**\n         * Fires when the animation which indicates the latest value change is completed.\n         */\n        this.animationEnd = new EventEmitter();\n    }\n    /**\n     * @hidden\n     */\n    get showLabel() {\n        if (typeof this.label === 'boolean') {\n            return this.label;\n        }\n        else {\n            if (this.label && !this.label.hasOwnProperty('visible')) {\n                this.label.visible = true;\n            }\n            return this.label.visible;\n        }\n    }\n    /**\n     * @hidden\n     */\n    get labelPosition() {\n        if (typeof this.label === 'boolean') {\n            return 'end';\n        }\n        else {\n            if (this.label && !this.label.hasOwnProperty('position')) {\n                this.label.position = 'end';\n            }\n            return this.label.position;\n        }\n    }\n    /**\n     * @hidden\n     */\n    get isPositionStart() {\n        return this.labelPosition === 'start';\n    }\n    /**\n     * @hidden\n     */\n    get isPositionCenter() {\n        return this.labelPosition === 'center';\n    }\n    /**\n     * @hidden\n     */\n    get isPositionEnd() {\n        return this.labelPosition === 'end';\n    }\n    /**\n     * @hidden\n     */\n    get formattedLabelValue() {\n        return formatValue(this.displayValue, this.min, this.max, this.label);\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n        if (this.isAnimationInProgress && stopCurrentAnimation(changes)) {\n            this.cancelCurrentAnimation = true;\n        }\n        if (runAnimation(changes, this.animation, this.previousValue, this.displayValue) && !changes['value'].firstChange) {\n            this.startAnimation(this.previousValue);\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        if (this.animationFrame) {\n            cancelAnimationFrame(this.animationFrame);\n        }\n    }\n    /**\n     * @hidden\n     */\n    startAnimation(previousValue) {\n        this.isAnimationInProgress = true;\n        const element = this.progressStatusElement.nativeElement;\n        const wrapperElement = this.progressStatusWrapperElement.nativeElement;\n        const animationOptions = this.getAnimationOptions(previousValue);\n        this.zone.runOutsideAngular(() => {\n            if (this.animationFrame) {\n                cancelAnimationFrame(this.animationFrame);\n            }\n            const animate = () => {\n                const elapsed = new Date().getTime() - animationOptions.startTime;\n                const position = Math.min(elapsed / animationOptions.duration, 1);\n                const size = animationOptions.startSize + animationOptions.deltaSize * position;\n                const wrapperSize = (100 / size) * 100;\n                this.renderValueChange(element, wrapperElement, animationOptions.property, size, wrapperSize);\n                if (position < 1) {\n                    if (this.cancelCurrentAnimation) {\n                        this.resetProgress(element, wrapperElement, animationOptions.property);\n                        return;\n                    }\n                    this.animationFrame = requestAnimationFrame(animate);\n                }\n                else {\n                    this.stopAnimation(previousValue);\n                }\n            };\n            animate();\n        });\n    }\n    /**\n     * @hidden\n     */\n    get animationDuration() {\n        if (typeof this.animation === 'boolean') {\n            return 400;\n        }\n        else {\n            if (this.animation && !this.animation.hasOwnProperty('duration')) {\n                this.animation.duration = 400;\n            }\n            return this.animation.duration;\n        }\n    }\n    stopAnimation(value) {\n        if (hasObservers(this.animationEnd)) {\n            this.zone.run(() => {\n                this.animationEnd.emit({\n                    from: value,\n                    to: this.displayValue\n                });\n            });\n        }\n        this.zone.run(() => {\n            this.isAnimationInProgress = false;\n        });\n    }\n    getAnimationOptions(value) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const previousRatio = calculateRatio(this.min, this.max, value);\n        const previousStatusWidth = isHorizontal ? previousRatio * 100 : 100;\n        const previousStatusHeight = !isHorizontal ? previousRatio * 100 : 100;\n        const property = isHorizontal ? 'width' : 'height';\n        const startTime = new Date().getTime();\n        const startSize = isHorizontal ? previousStatusWidth : previousStatusHeight;\n        const deltaSize = isHorizontal ? this.statusWidth - previousStatusWidth : this.statusHeight - previousStatusHeight;\n        const duration = this.animationDuration * Math.abs((deltaSize / 100));\n        return {\n            property,\n            startTime,\n            startSize,\n            deltaSize,\n            duration\n        };\n    }\n    renderValueChange(element, wrapperElement, property, size, wrapperSize) {\n        this.renderer.setStyle(element, property, size + '%');\n        this.renderer.setStyle(wrapperElement, property, wrapperSize + '%');\n    }\n    resetProgress(element, wrapperElement, property) {\n        const size = calculateRatio(this.min, this.max, this.value);\n        const newSize = size * 100;\n        const newWrapperSize = 100 / size;\n        this.renderValueChange(element, wrapperElement, property, newSize, newWrapperSize);\n        this.zone.run(() => {\n            this.cancelCurrentAnimation = false;\n            this.isAnimationInProgress = false;\n        });\n    }\n}\nProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarComponent, deps: [{ token: i1.LocalizationService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: ProgressBarComponent, selector: \"kendo-progressbar\", inputs: { label: \"label\", progressCssStyle: \"progressCssStyle\", progressCssClass: \"progressCssClass\", emptyCssStyle: \"emptyCssStyle\", emptyCssClass: \"emptyCssClass\", animation: \"animation\" }, outputs: { animationEnd: \"animationEnd\" }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.progressbar'\n        }\n    ], viewQueries: [{ propertyName: \"progressStatusElement\", first: true, predicate: [\"progressStatus\"], descendants: true }, { propertyName: \"progressStatusWrapperElement\", first: true, predicate: [\"progressStatusWrap\"], descendants: true }], exportAs: [\"kendoProgressBar\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.progressbar.progressBarLabel|The aria-label attribute for the ProgressBar component.\"\n            progressBarLabel=\"Progressbar\"\n        >\n        </ng-container>\n        <span class=\"k-progress-status-wrap\"\n            [class.k-progress-start]=\"isPositionStart\"\n            [class.k-progress-center]=\"isPositionCenter\"\n            [class.k-progress-end]=\"isPositionEnd\"\n            [ngStyle]=\"emptyCssStyle\"\n            [ngClass]=\"emptyCssClass\">\n            <span *ngIf=\"showLabel\" class=\"k-progress-status\">{{formattedLabelValue}}</span>\n        </span>\n        <div\n            #progressStatus\n            class=\"k-selected k-progressbar-value\"\n            [class.k-complete]=\"isCompleted\"\n            [ngStyle]=\"progressCssStyle\"\n            [ngClass]=\"progressCssClass\"\n            [style.width.%]=\"statusWidth\"\n            [style.height.%]=\"statusHeight\"\n            >\n            <span\n                #progressStatusWrap\n                class=\"k-progress-status-wrap\"\n                [style.width.%]=\"statusWrapperWidth\"\n                [style.height.%]=\"statusWrapperHeight\"\n                [class.k-progress-start]=\"isPositionStart\"\n                [class.k-progress-center]=\"isPositionCenter\"\n                [class.k-progress-end]=\"isPositionEnd\"\n                >\n                <span *ngIf=\"showLabel\" class=\"k-progress-status\">{{formattedLabelValue}}</span>\n            </span>\n        </div>\n       `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: LocalizedProgressBarMessagesDirective, selector: \"[kendoProgressBarLocalizedMessages]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoProgressBar',\n                    selector: 'kendo-progressbar',\n                    template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.progressbar.progressBarLabel|The aria-label attribute for the ProgressBar component.\"\n            progressBarLabel=\"Progressbar\"\n        >\n        </ng-container>\n        <span class=\"k-progress-status-wrap\"\n            [class.k-progress-start]=\"isPositionStart\"\n            [class.k-progress-center]=\"isPositionCenter\"\n            [class.k-progress-end]=\"isPositionEnd\"\n            [ngStyle]=\"emptyCssStyle\"\n            [ngClass]=\"emptyCssClass\">\n            <span *ngIf=\"showLabel\" class=\"k-progress-status\">{{formattedLabelValue}}</span>\n        </span>\n        <div\n            #progressStatus\n            class=\"k-selected k-progressbar-value\"\n            [class.k-complete]=\"isCompleted\"\n            [ngStyle]=\"progressCssStyle\"\n            [ngClass]=\"progressCssClass\"\n            [style.width.%]=\"statusWidth\"\n            [style.height.%]=\"statusHeight\"\n            >\n            <span\n                #progressStatusWrap\n                class=\"k-progress-status-wrap\"\n                [style.width.%]=\"statusWrapperWidth\"\n                [style.height.%]=\"statusWrapperHeight\"\n                [class.k-progress-start]=\"isPositionStart\"\n                [class.k-progress-center]=\"isPositionCenter\"\n                [class.k-progress-end]=\"isPositionEnd\"\n                >\n                <span *ngIf=\"showLabel\" class=\"k-progress-status\">{{formattedLabelValue}}</span>\n            </span>\n        </div>\n       `,\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.progressbar'\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }]; }, propDecorators: { label: [{\n                type: Input\n            }], progressCssStyle: [{\n                type: Input\n            }], progressCssClass: [{\n                type: Input\n            }], emptyCssStyle: [{\n                type: Input\n            }], emptyCssClass: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], animationEnd: [{\n                type: Output\n            }], progressStatusElement: [{\n                type: ViewChild,\n                args: ['progressStatus', { static: false }]\n            }], progressStatusWrapperElement: [{\n                type: ViewChild,\n                args: ['progressStatusWrap', { static: false }]\n            }] } });\n\n/**\n * Represents the [Kendo UI ChunkProgressBar component for Angular]({% slug overview_chunkprogressbar %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-chunkprogressbar [value]=\"value\">\n *        </kendo-chunkprogressbar>\n *    `\n * })\n * class AppComponent {\n *     public value = 40;\n * }\n * ```\n */\nclass ChunkProgressBarComponent extends ProgressBarBase {\n    /**\n     * @hidden\n     */\n    constructor(localization, elem, renderer) {\n        super(elem, renderer, localization);\n        this.localization = localization;\n        this.elem = elem;\n        this.renderer = renderer;\n        this.chunkClass = true;\n        /**\n         * Sets the number of chunks into which the ChunkProgressBar will be split.\n         * Defaults to `5`.\n         */\n        this.chunkCount = 5;\n        this._orientationStyles = {\n            width: `${this.chunkSizePercentage}%`,\n            height: null\n        };\n    }\n    /**\n     * @hidden\n     */\n    get chunks() {\n        const count = this.chunkCount;\n        const chunks = Array(count).fill(false);\n        const completedChunks = Math.floor(this._progressRatio * count);\n        for (let i = 0; i < completedChunks; i++) {\n            chunks[i] = true;\n        }\n        return chunks;\n    }\n    /**\n     * @hidden\n     */\n    get chunkSizePercentage() {\n        return 100 / this.chunkCount;\n    }\n    /**\n     * @hidden\n     */\n    get orientationStyles() {\n        if (this.orientation === 'horizontal') {\n            this._orientationStyles.width = `${this.chunkSizePercentage}%`;\n            this._orientationStyles.height = null;\n        }\n        else {\n            this._orientationStyles.height = `${this.chunkSizePercentage}%`;\n            this._orientationStyles.width = null;\n        }\n        return this._orientationStyles;\n    }\n}\nChunkProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ChunkProgressBarComponent, deps: [{ token: i1.LocalizationService }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });\nChunkProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: ChunkProgressBarComponent, selector: \"kendo-chunkprogressbar\", inputs: { chunkCount: \"chunkCount\", progressCssStyle: \"progressCssStyle\", progressCssClass: \"progressCssClass\", emptyCssStyle: \"emptyCssStyle\", emptyCssClass: \"emptyCssClass\" }, host: { properties: { \"class.k-chunk-progressbar\": \"this.chunkClass\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.chunkprogressbar'\n        }\n    ], exportAs: [\"kendoChunkProgressBar\"], usesInheritance: true, ngImport: i0, template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.chunkprogressbar.progressBarLabel|The aria-label attribute for the ChunkProgressBar component.\"\n            progressBarLabel=\"Chunk progressbar\"\n        >\n        </ng-container>\n        <ul class=\"k-reset k-progressbar-chunks\">\n            <li class=\"k-progressbar-chunk\" *ngFor=\"let chunk of chunks; let i = index;\"\n                [class.k-first]=\"i === 0\"\n                [class.k-last]=\"i === chunkCount - 1\"\n                [class.k-selected]=\"chunk\"\n                [ngClass]=\"chunk ? progressCssClass : emptyCssClass\"\n                [ngStyle]=\"chunk ? progressCssStyle : emptyCssStyle\"\n                [style.width]=\"orientationStyles.width\"\n                [style.height]=\"orientationStyles.height\"\n                >\n            </li>\n        </ul>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: LocalizedProgressBarMessagesDirective, selector: \"[kendoProgressBarLocalizedMessages]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ChunkProgressBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoChunkProgressBar',\n                    selector: 'kendo-chunkprogressbar',\n                    template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.chunkprogressbar.progressBarLabel|The aria-label attribute for the ChunkProgressBar component.\"\n            progressBarLabel=\"Chunk progressbar\"\n        >\n        </ng-container>\n        <ul class=\"k-reset k-progressbar-chunks\">\n            <li class=\"k-progressbar-chunk\" *ngFor=\"let chunk of chunks; let i = index;\"\n                [class.k-first]=\"i === 0\"\n                [class.k-last]=\"i === chunkCount - 1\"\n                [class.k-selected]=\"chunk\"\n                [ngClass]=\"chunk ? progressCssClass : emptyCssClass\"\n                [ngStyle]=\"chunk ? progressCssStyle : emptyCssStyle\"\n                [style.width]=\"orientationStyles.width\"\n                [style.height]=\"orientationStyles.height\"\n                >\n            </li>\n        </ul>\n    `,\n                    providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.chunkprogressbar'\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { chunkClass: [{\n                type: HostBinding,\n                args: ['class.k-chunk-progressbar']\n            }], chunkCount: [{\n                type: Input\n            }], progressCssStyle: [{\n                type: Input\n            }], progressCssClass: [{\n                type: Input\n            }], emptyCssStyle: [{\n                type: Input\n            }], emptyCssClass: [{\n                type: Input\n            }] } });\n\n/**\n * A directive that selects a template within the <kendo-circularprogessbar> component which will be used for the center template.\n * ([see example]({% slug center_template_circularprogressbar %})).\n */\nclass CircularProgressbarCenterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCircularProgressbarCenterTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: CircularProgressbarCenterTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCircularProgressbarCenterTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.10\", type: CircularProgressbarCenterTemplateDirective, selector: \"[kendoCircularProgressbarCenterTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: CircularProgressbarCenterTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[kendoCircularProgressbarCenterTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nconst DEFAULT_SURFACE_SIZE = 200;\n/**\n * Represents the [Kendo UI Circular ProgressBar component for Angular]({% slug overview_circularprogressbar %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-circularprogressbar [value]=\"value\"></kendo-circularprogressbar>\n *    `\n * })\n * class AppComponent {\n *     public value: number = 50;\n * }\n * ```\n */\nclass CircularProgressBarComponent {\n    constructor(renderer, cdr, localization, element, zone) {\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.localization = localization;\n        this.element = element;\n        this.zone = zone;\n        this.hostClasses = true;\n        this.roleAttribute = 'progressbar';\n        /**\n         * Indicates whether an animation will be played on value changes.\n         *\n         * @default false\n         */\n        this.animation = false;\n        /**\n         * The opacity of the value arc.\n         * @default 1\n         */\n        this.opacity = 1;\n        /**\n         * Fires when the animation which indicates the latest value change is completed.\n         */\n        this.animationEnd = new EventEmitter();\n        this.centerTemplateContext = {};\n        this._indeterminate = false;\n        this._max = 100;\n        this._min = 0;\n        this._value = 0;\n        this.previousValue = 0;\n        this.internalValue = 0;\n        this.subscriptions = new Subscription();\n        validatePackage(packageMetadata);\n        this.subscriptions.add(this.localization.changes.subscribe(this.rtlChange.bind(this)));\n    }\n    get ariaMinAttribute() {\n        return String(this.min);\n    }\n    get ariaMaxAttribute() {\n        return String(this.max);\n    }\n    get ariaValueAttribute() {\n        return this.indeterminate ? undefined : String(this.value);\n    }\n    /**\n     * Sets the default value of the Circular Progressbar between `min` and `max`.\n     *\n     * @default 0\n     */\n    set value(value) {\n        if (value > this.max) {\n            this.handleErrors('value > max');\n        }\n        if (value < this.min) {\n            this.handleErrors('value < min');\n        }\n        this.previousValue = this.value;\n        this._value = value;\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * The maximum value which the Circular Progressbar can accept.\n     *\n     * @default 100\n     */\n    set max(max) {\n        if (max < this.min) {\n            this.handleErrors('max < min');\n        }\n        this._max = max;\n    }\n    get max() {\n        return this._max;\n    }\n    /**\n     * The minimum value which the Circular Progressbar can accept.\n     *\n     * @default 0\n     */\n    set min(min) {\n        if (min > this.max) {\n            this.handleErrors('max < min');\n        }\n        this._min = min;\n    }\n    get min() {\n        return this._min;\n    }\n    /**\n     * Puts the Circular ProgressBar in indeterminate state.\n     * @default false\n     */\n    set indeterminate(indeterminate) {\n        this._indeterminate = indeterminate;\n    }\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    ngAfterViewInit() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        const elem = this.element.nativeElement;\n        const ariaLabel = this.localization.get('progressBarLabel');\n        this.renderer.setAttribute(elem, 'aria-label', ariaLabel);\n        this.initProgressArc();\n    }\n    ngOnChanges(changes) {\n        const skipFirstChange = true;\n        if (isChanged('value', changes, skipFirstChange) && this.progress) {\n            if (this.animation) {\n                this.progressbarAnimation();\n            }\n            else {\n                const value = this.value - this.min;\n                this.internalValue = changes['value'].currentValue;\n                this.calculateProgress(value);\n            }\n        }\n        if (changes['opacity'] && this.progress) {\n            setProgressBarStyles([{ method: 'setAttribute', el: this.progress.nativeElement, attr: 'opacity', attrValue: this.opacity.toString() }], this.renderer);\n        }\n        if (changes['indeterminate'] && !changes['indeterminate'].firstChange) {\n            this.indeterminateState();\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        this.setStyles();\n        const value = this.animation ? this.internalValue : this.value;\n        this.calculateProgress(value);\n        this.updateCenterTemplate(value);\n    }\n    initProgressArc() {\n        this.setStyles();\n        if (this.indeterminate) {\n            this.indeterminateState();\n        }\n        else {\n            if (!this.animation) {\n                const value = this.value - this.min;\n                this.calculateProgress(value);\n            }\n            else {\n                this.progressbarAnimation();\n            }\n        }\n    }\n    calculateProgress(value) {\n        if (this.progressColor) {\n            this.updateProgressColor(value);\n        }\n        // needed when we have *ngIf inside the template to render different content depending on some condition\n        this.zone.onStable.pipe(take(1)).subscribe(() => {\n            this.updateCenterTemplate(value + this.min);\n        });\n        const progressArc = this.progress.nativeElement;\n        const radius = this.progress.nativeElement.r.baseVal.value;\n        const circumference = Math.PI * (radius * 2);\n        const dir = this.rtl ? circumference * -1 : circumference;\n        const strokeDashOffest = circumference - dir * (value / (this.max - this.min));\n        const progressCalculations = [\n            { method: 'setStyle', el: progressArc, attr: 'strokeDasharray', attrValue: circumference.toString() },\n            { method: 'setStyle', el: progressArc, attr: 'strokeDashoffset', attrValue: strokeDashOffest.toString() }\n        ];\n        setProgressBarStyles(progressCalculations, this.renderer);\n    }\n    progressbarAnimation() {\n        const forwardProgress = {\n            isOngoing: this.internalValue > this.value - this.min,\n            isPositive: this.value >= this.previousValue\n        };\n        const backwardProgress = {\n            isOngoing: this.internalValue < this.value - this.min,\n            isNegative: this.value <= this.previousValue\n        };\n        if (forwardProgress.isOngoing && forwardProgress.isPositive ||\n            backwardProgress.isOngoing && backwardProgress.isNegative) {\n            return;\n        }\n        this.calculateProgress(this.internalValue);\n        const from = this.internalValue;\n        if (hasObservers(this.animationEnd)) {\n            this.animationEnd.emit({\n                from: from,\n                to: this.internalValue\n            });\n        }\n        // eslint-disable-next-line no-unused-expressions\n        forwardProgress.isPositive ? this.internalValue += 1 : this.internalValue -= 1;\n        requestAnimationFrame(this.progressbarAnimation.bind(this));\n    }\n    setStyles() {\n        const progressArc = this.progress.nativeElement;\n        const scale = this.scale.nativeElement;\n        const surface = this.surface.nativeElement;\n        const element = this.element.nativeElement;\n        let elWidth = element.getBoundingClientRect().width;\n        if (!hasElementSize(element)) {\n            const surfaceSize = [\n                { method: 'setStyle', el: surface, attr: 'width', attrValue: `${DEFAULT_SURFACE_SIZE}px` },\n                { method: 'setStyle', el: surface, attr: 'height', attrValue: `${DEFAULT_SURFACE_SIZE}px` }\n            ];\n            elWidth = DEFAULT_SURFACE_SIZE;\n            setProgressBarStyles(surfaceSize, this.renderer);\n        }\n        const attributesArray = [\n            { method: 'setAttribute', el: progressArc, attr: 'r', attrValue: String((elWidth / 2) - 10) },\n            { method: 'setAttribute', el: progressArc, attr: 'cx', attrValue: String((elWidth / 2)) },\n            { method: 'setAttribute', el: progressArc, attr: 'cy', attrValue: String((elWidth / 2)) },\n            { method: 'setAttribute', el: progressArc, attr: 'opacity', attrValue: String(this.opacity) },\n            { method: 'setAttribute', el: scale, attr: 'r', attrValue: String((elWidth / 2) - 10) },\n            { method: 'setAttribute', el: scale, attr: 'cx', attrValue: String(elWidth / 2) },\n            { method: 'setAttribute', el: scale, attr: 'cy', attrValue: String(elWidth / 2) }\n        ];\n        setProgressBarStyles(attributesArray, this.renderer);\n    }\n    indeterminateState() {\n        const progressArc = this.progress.nativeElement;\n        if (this.indeterminate) {\n            // the indeterminate state wont work as the `k-circular-progressbar-arc` has a transform: rotate(-90deg) which is\n            // interfering with the svg animation as the animateTransform brings its own transform: rotate()\n            // This will be like this until the themes release a new version, bringing a new class `k-circular-progressbar-indeterminate-arc`\n            // containing only the necassery CSS styles and we will switch between them when the state of the progressbar is switched.\n            this.calculateProgress(this.value - this.min);\n            const rotate = this.rtl ? { from: 360, to: 0 } : { from: 0, to: 360 };\n            let color;\n            if (!this.progressColor) {\n                color = getComputedStyle(progressArc).stroke;\n            }\n            const indeterminateStyles = [\n                { method: 'setStyle', el: progressArc, attr: 'transform-origin', attrValue: 'center' },\n                { method: 'setStyle', el: progressArc, attr: 'fill', attrValue: 'none' },\n                { method: 'setStyle', el: progressArc, attr: 'stroke-linecap', attrValue: 'round' },\n                { method: 'setStyle', el: progressArc, attr: 'stroke', attrValue: color ? color : this.currentColor }\n            ];\n            setProgressBarStyles(indeterminateStyles, this.renderer);\n            this.renderer.removeClass(progressArc, 'k-circular-progressbar-arc');\n            progressArc.innerHTML = `<animateTransform attributeName=\"transform\" type=\"rotate\" from=\"${rotate.from} 0 0\" to=\"${rotate.to} 0 0\" dur=\"1s\" repeatCount=\"indefinite\" />`;\n        }\n        else {\n            this.renderer.addClass(progressArc, 'k-circular-progressbar-arc');\n            const removeIndeterminateStyles = [\n                { method: 'removeStyle', el: progressArc, attr: 'transform-origin' },\n                { method: 'removeStyle', el: progressArc, attr: 'fill' },\n                { method: 'removeStyle', el: progressArc, attr: 'stroke-linecap' }\n            ];\n            removeProgressBarStyles(removeIndeterminateStyles, this.renderer);\n            progressArc.innerHTML = '';\n            if (this.animation) {\n                this.progressbarAnimation();\n            }\n        }\n    }\n    updateCenterTemplate(value) {\n        if (!this.centerTemplate) {\n            return;\n        }\n        this.centerTemplateContext.value = value;\n        this.centerTemplateContext.color = this.currentColor;\n        this.cdr.detectChanges();\n        this.positionLabel();\n    }\n    positionLabel() {\n        const labelEl = this.labelElement.nativeElement;\n        const element = this.element.nativeElement;\n        const surface = this.surface.nativeElement;\n        let elWidth;\n        let elHeight;\n        if (!hasElementSize(element)) {\n            const surfaceSize = surface.getBoundingClientRect();\n            elWidth = surfaceSize.width;\n            elHeight = surfaceSize.height;\n        }\n        else {\n            const elementSize = element.getBoundingClientRect();\n            elWidth = elementSize.width;\n            elHeight = elementSize.height;\n        }\n        const left = (elWidth / 2) - (labelEl.offsetWidth / 2);\n        const top = (elHeight / 2) - (labelEl.offsetHeight / 2);\n        const labelCalculations = [\n            { method: 'setStyle', el: labelEl, attr: 'left', attrValue: `${left}px` },\n            { method: 'setStyle', el: labelEl, attr: 'top', attrValue: `${top}px` }\n        ];\n        setProgressBarStyles(labelCalculations, this.renderer);\n    }\n    get currentColor() {\n        const currentColor = this.progress.nativeElement.style.stroke;\n        return currentColor;\n    }\n    updateProgressColor(value) {\n        const progressArc = this.progress.nativeElement;\n        if (typeof this.progressColor === 'string') {\n            this.renderer.setStyle(progressArc, 'stroke', this.progressColor);\n        }\n        else {\n            for (let i = 0; i < this.progressColor.length; i++) {\n                const from = this.progressColor[i].from;\n                const to = this.progressColor[i].to;\n                if (value >= from && value <= to || (!from && value <= to)) {\n                    this.renderer.setStyle(progressArc, 'stroke', this.progressColor[i].color);\n                    break;\n                }\n                if (!to && value >= from) {\n                    this.renderer.setStyle(progressArc, 'stroke', this.progressColor[i].color);\n                }\n            }\n        }\n    }\n    handleErrors(type) {\n        if (isDevMode()) {\n            switch (type) {\n                case 'value > max':\n                    throw new Error('The value of the CircularProgressbar cannot exceed the max value');\n                case 'value < min':\n                    throw new Error('The value of the CircularProgressbar cannot be lower than the min value');\n                case 'max < min':\n                    throw new Error('The min value cannot be higher than the max value');\n                default:\n            }\n        }\n    }\n    setDirection() {\n        this.rtl = this.localization.rtl;\n        if (this.element) {\n            this.renderer.setAttribute(this.element.nativeElement, 'dir', this.rtl ? 'rtl' : 'ltr');\n        }\n        if (this.labelElement) {\n            this.renderer.setAttribute(this.labelElement.nativeElement, 'dir', this.rtl ? 'rtl' : 'ltr');\n        }\n    }\n    rtlChange() {\n        if (this.element && this.rtl !== this.localization.rtl) {\n            this.setDirection();\n        }\n    }\n}\nCircularProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: CircularProgressBarComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1.LocalizationService }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nCircularProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: CircularProgressBarComponent, selector: \"kendo-circularprogressbar\", inputs: { value: \"value\", max: \"max\", min: \"min\", animation: \"animation\", opacity: \"opacity\", indeterminate: \"indeterminate\", progressColor: \"progressColor\" }, outputs: { animationEnd: \"animationEnd\" }, host: { properties: { \"class.k-circular-progressbar\": \"this.hostClasses\", \"attr.aria-valuemin\": \"this.ariaMinAttribute\", \"attr.aria-valuemax\": \"this.ariaMaxAttribute\", \"attr.aria-valuenow\": \"this.ariaValueAttribute\", \"attr.role\": \"this.roleAttribute\" } }, providers: [\n        LocalizationService,\n        {\n            provide: L10N_PREFIX,\n            useValue: 'kendo.circularprogressbar'\n        }\n    ], queries: [{ propertyName: \"centerTemplate\", first: true, predicate: CircularProgressbarCenterTemplateDirective, descendants: true }], viewQueries: [{ propertyName: \"progress\", first: true, predicate: [\"progress\"], descendants: true }, { propertyName: \"scale\", first: true, predicate: [\"scale\"], descendants: true }, { propertyName: \"labelElement\", first: true, predicate: [\"label\"], descendants: true }, { propertyName: \"surface\", first: true, predicate: [\"surface\"], descendants: true }], exportAs: [\"kendoCircularProgressBar\"], usesOnChanges: true, ngImport: i0, template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.circularprogressbar.progressBarLabel|The aria-label attribute for the Circular ProgressBar component.\"\n            progressBarLabel=\"Circular progressbar\"\n        >\n        </ng-container>\n        <div #surface class=\"k-circular-progressbar-surface\">\n            <div>\n                <svg #svg>\n                    <g>\n                        <circle class=\"k-circular-progressbar-scale\" #scale stroke-width=\"9.5\"></circle>\n                        <circle class=\"k-circular-progressbar-arc\" #progress stroke-width=\"9.5\"></circle>\n                    </g>\n                </svg>\n                <div class=\"k-circular-progressbar-label\" *ngIf=\"centerTemplate\" #label>\n                    <ng-template [ngTemplateOutlet]=\"centerTemplate.templateRef\" [ngTemplateOutletContext]=\"centerTemplateContext\"></ng-template>\n                </div>\n            </div>\n        </div>\n        <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: i3.ResizeSensorComponent, selector: \"kendo-resize-sensor\", inputs: [\"rateLimit\"], outputs: [\"resize\"] }, { kind: \"directive\", type: LocalizedProgressBarMessagesDirective, selector: \"[kendoProgressBarLocalizedMessages]\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: CircularProgressBarComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: 'kendoCircularProgressBar',\n                    selector: 'kendo-circularprogressbar',\n                    template: `\n        <ng-container kendoProgressBarLocalizedMessages\n            i18n-progressBarLabel=\"kendo.circularprogressbar.progressBarLabel|The aria-label attribute for the Circular ProgressBar component.\"\n            progressBarLabel=\"Circular progressbar\"\n        >\n        </ng-container>\n        <div #surface class=\"k-circular-progressbar-surface\">\n            <div>\n                <svg #svg>\n                    <g>\n                        <circle class=\"k-circular-progressbar-scale\" #scale stroke-width=\"9.5\"></circle>\n                        <circle class=\"k-circular-progressbar-arc\" #progress stroke-width=\"9.5\"></circle>\n                    </g>\n                </svg>\n                <div class=\"k-circular-progressbar-label\" *ngIf=\"centerTemplate\" #label>\n                    <ng-template [ngTemplateOutlet]=\"centerTemplate.templateRef\" [ngTemplateOutletContext]=\"centerTemplateContext\"></ng-template>\n                </div>\n            </div>\n        </div>\n        <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n    `, providers: [\n                        LocalizationService,\n                        {\n                            provide: L10N_PREFIX,\n                            useValue: 'kendo.circularprogressbar'\n                        }\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1.LocalizationService }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { hostClasses: [{\n                type: HostBinding,\n                args: ['class.k-circular-progressbar']\n            }], ariaMinAttribute: [{\n                type: HostBinding,\n                args: ['attr.aria-valuemin']\n            }], ariaMaxAttribute: [{\n                type: HostBinding,\n                args: ['attr.aria-valuemax']\n            }], ariaValueAttribute: [{\n                type: HostBinding,\n                args: ['attr.aria-valuenow']\n            }], roleAttribute: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], indeterminate: [{\n                type: Input\n            }], progressColor: [{\n                type: Input\n            }], animationEnd: [{\n                type: Output\n            }], progress: [{\n                type: ViewChild,\n                args: ['progress']\n            }], scale: [{\n                type: ViewChild,\n                args: ['scale']\n            }], labelElement: [{\n                type: ViewChild,\n                args: [\"label\"]\n            }], surface: [{\n                type: ViewChild,\n                args: [\"surface\"]\n            }], centerTemplate: [{\n                type: ContentChild,\n                args: [CircularProgressbarCenterTemplateDirective]\n            }] } });\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug rtl_layout %})).\n */\nclass ProgressBarCustomMessagesComponent extends ProgressBarMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nProgressBarCustomMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarCustomMessagesComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });\nProgressBarCustomMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: ProgressBarCustomMessagesComponent, selector: \"kendo-progressbar-messages\", providers: [\n        {\n            provide: ProgressBarMessages,\n            useExisting: forwardRef(() => ProgressBarCustomMessagesComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarCustomMessagesComponent, decorators: [{\n            type: Component,\n            args: [{\n                    providers: [\n                        {\n                            provide: ProgressBarMessages,\n                            useExisting: forwardRef(() => ProgressBarCustomMessagesComponent)\n                        }\n                    ],\n                    selector: 'kendo-progressbar-messages',\n                    template: ``\n                }]\n        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; } });\n\nconst COMPONENT_DIRECTIVES = [\n    ProgressBarComponent,\n    ChunkProgressBarComponent,\n    CircularProgressBarComponent,\n    CircularProgressbarCenterTemplateDirective,\n    LocalizedProgressBarMessagesDirective,\n    ProgressBarCustomMessagesComponent\n];\nconst MODULES = [CommonModule, ResizeSensorModule];\n/**\n * Represents the [NgModule](link:site.data.urls.angular['ngmodules'])\n * definition for the ProgressBar components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the ProgressBar module\n * import { ProgressBarModule } from '@progress/kendo-angular-progressbar';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, ProgressBarModule], // import ProgressBar module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ProgressBarModule {\n}\nProgressBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nProgressBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarModule, declarations: [ProgressBarComponent,\n        ChunkProgressBarComponent,\n        CircularProgressBarComponent,\n        CircularProgressbarCenterTemplateDirective,\n        LocalizedProgressBarMessagesDirective,\n        ProgressBarCustomMessagesComponent], imports: [CommonModule, ResizeSensorModule], exports: [ProgressBarComponent,\n        ChunkProgressBarComponent,\n        CircularProgressBarComponent,\n        CircularProgressbarCenterTemplateDirective,\n        LocalizedProgressBarMessagesDirective,\n        ProgressBarCustomMessagesComponent] });\nProgressBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarModule, imports: [MODULES] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ProgressBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: COMPONENT_DIRECTIVES,\n                    exports: COMPONENT_DIRECTIVES,\n                    imports: MODULES\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChunkProgressBarComponent, CircularProgressBarComponent, CircularProgressbarCenterTemplateDirective, LocalizedProgressBarMessagesDirective, ProgressBarComponent, ProgressBarCustomMessagesComponent, ProgressBarModule };\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,EAAE,MAAM,8BAA8B;AAClD,SAASC,iBAAiB,EAAEC,mBAAmB,EAAEC,WAAW,QAAQ,8BAA8B;AAClG,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,KAAK,EAAEC,SAAS,EAAEC,UAAU,EAAEC,YAAY,EAAEC,MAAM,EAAEC,SAAS,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,eAAe;AACxJ,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,OAAO,KAAKC,EAAE,MAAM,gCAAgC;AACpD,SAASC,YAAY,EAAEC,mBAAmB,EAAEC,SAAS,EAAEC,kBAAkB,QAAQ,gCAAgC;AACjH,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAQ,MAAM;AACnC,SAASC,IAAI,QAAQ,gBAAgB;;AAErC;AACA;AACA;AAFA;AAAA;AAAA;EAAA;IAoRmGrB,EAAE,6BAqUvC;IArUqCA,EAAE,UAqUhB;IArUcA,EAAE,eAqUT;EAAA;EAAA;IAAA,eArUOA,EAAE;IAAFA,EAAE,aAqUhB;IArUcA,EAAE,8CAqUhB;EAAA;AAAA;AAAA;EAAA;IArUcA,EAAE,6BAyVnC;IAzViCA,EAAE,UAyVZ;IAzVUA,EAAE,eAyVL;EAAA;EAAA;IAAA,eAzVGA,EAAE;IAAFA,EAAE,aAyVZ;IAzVUA,EAAE,8CAyVZ;EAAA;AAAA;AAAA;EAAA;IAzVUA,EAAE,sBAigBpF;EAAA;EAAA;IAAA;IAAA;IAAA,eAjgBkFA,EAAE;IAAFA,EAAE,qDA8f9C;IA9f4CA,EAAE,mCAyf5D;IAzf0DA,EAAE,iFA4fjC;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAAA;IA5f+BA,EAAE;IAAFA,EAAE,kBAo8Bb;IAp8BWA,EAAE,iCAo8Bb;IAp8BWA,EAAE,mGAq8B4C;IAr8B9CA,EAAE,eAs8B/E;EAAA;EAAA;IAAA,eAt8B6EA,EAAE;IAAFA,EAAE,aAq8BrB;IAr8BmBA,EAAE,kEAq8BrB;EAAA;AAAA;AAttChF,MAAMsB,eAAe,GAAG;EACpBC,IAAI,EAAE,qCAAqC;EAC3CC,WAAW,EAAE,sBAAsB;EACnCC,YAAY,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;EACnDC,WAAW,EAAE,UAAU;EACvBC,OAAO,EAAE,QAAQ;EACjBC,gBAAgB,EAAE;AACtB,CAAC;;AAED;AACA;AACA;AACA,MAAMC,qBAAqB,GAAI,+CAA8C;AAC7E;AACA;AACA;AACA,MAAMC,cAAc,GAAG,CAAC;AACxB;AACA;AACA;AACA,MAAMC,SAAS,GAAG,MAAM;;AAExB;AACA;AACA;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAK;EAC5C,MAAMC,qBAAqB,GAAGC,cAAc,CAACL,KAAK,CAAC;EACnD,IAAI,OAAOG,KAAK,KAAK,SAAS,EAAE;IAC5B,IAAI,OAAOA,KAAK,CAACG,MAAM,KAAK,QAAQ,EAAE;MAClC,QAAQH,KAAK,CAACG,MAAM;QAChB,KAAK,OAAO;UACR,OAAOF,qBAAqB;QAChC,KAAK,SAAS;UACV,OAAQ,GAAEG,IAAI,CAACC,KAAK,CAACC,mBAAmB,CAACT,KAAK,EAAEC,GAAG,EAAEC,GAAG,CAAC,CAAE,GAAE;QACjE;UACI,OAAOE,qBAAqB;MAAC;IAEzC,CAAC,MACI,IAAI,OAAOD,KAAK,CAACG,MAAM,KAAK,UAAU,EAAE;MACzC,OAAOH,KAAK,CAACG,MAAM,CAACN,KAAK,CAAC;IAC9B,CAAC,MACI;MACD,OAAOI,qBAAqB;IAChC;EACJ;EACA,OAAOA,qBAAqB;AAChC,CAAC;AACD;AACA;AACA;AACA,MAAMM,aAAa,GAAG,CAACT,GAAG,EAAEC,GAAG,KAAK;EAChC,IAAIlC,SAAS,IAAIiC,GAAG,GAAGC,GAAG,EAAE;IACxB,MAAM,IAAIS,KAAK,CAACf,qBAAqB,CAAC;EAC1C;AACJ,CAAC;AACD;AACA;AACA;AACA,MAAMgB,kBAAkB,GAAG,CAACX,GAAG,EAAEC,GAAG,EAAEF,KAAK,KAAKO,IAAI,CAACL,GAAG,CAACK,IAAI,CAACN,GAAG,CAACD,KAAK,EAAEE,GAAG,CAAC,EAAED,GAAG,CAAC;AACnF;AACA;AACA;AACA,MAAMQ,mBAAmB,GAAG,CAACT,KAAK,EAAEC,GAAG,EAAEC,GAAG,KAAK;EAC7C,MAAMW,YAAY,GAAGN,IAAI,CAACO,GAAG,CAAC,CAACd,KAAK,GAAGC,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC,CAAC;EAC1D,OAAOY,YAAY,GAAG,GAAG;AAC7B,CAAC;AACD;AACA;AACA;AACA,MAAMR,cAAc,GAAIL,KAAK,IAAK;EAC9B,MAAMe,WAAW,GAAGf,KAAK,CAACgB,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;EAC/C,OAAOF,WAAW,CAACG,MAAM,KAAK,CAAC,GAAI,GAAEH,WAAW,CAAC,CAAC,CAAE,EAAC,GAAI,GAAEA,WAAW,CAAC,CAAC,CAAE,IAAGA,WAAW,CAAC,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC,EAAEtB,cAAc,CAAE,EAAC;AAC3H,CAAC;AACD;AACA;AACA;AACA,MAAMuB,cAAc,GAAG,CAACnB,GAAG,EAAEC,GAAG,EAAEF,KAAK,KAAKO,IAAI,CAACL,GAAG,CAAC,CAACF,KAAK,GAAGC,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC,EAAEH,SAAS,CAAC;AAC5F;AACA;AACA;AACA,MAAMuB,uBAAuB,GAAG,CAACC,OAAO,EAAEC,IAAI,EAAEvB,KAAK,KAAKsB,OAAO,CAACC,IAAI,CAAC,IAAID,OAAO,CAACC,IAAI,CAAC,CAACC,YAAY,KAAKC,SAAS,GAAGH,OAAO,CAACC,IAAI,CAAC,CAACC,YAAY,GAAGxB,KAAK;AACxJ;AACA;AACA;AACA,MAAM0B,YAAY,GAAG,CAACJ,OAAO,EAAEK,SAAS,EAAEC,aAAa,EAAEC,YAAY,KAAKF,SAAS,IAAI,OAAOG,qBAAqB,KAAK,WAAW,IAAIR,OAAO,CAAC,OAAO,CAAC,IAAIM,aAAa,KAAKC,YAAY;AACzL;AACA;AACA;AACA,MAAME,oBAAoB,GAAIT,OAAO,IAAK;EACtC,MAAMU,kBAAkB,GAAGC,OAAO,CAACX,OAAO,CAAC,WAAW,CAAC,CAAC;EACxD,MAAMY,YAAY,GAAGF,kBAAkB,IAAIV,OAAO,CAAC,WAAW,CAAC,CAACE,YAAY;EAC5E,OAAOQ,kBAAkB,IAAI,CAACE,YAAY;AAC9C,CAAC;AACD;AACA;AACA;AACA,MAAMC,oBAAoB,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC9CD,KAAK,CAACE,OAAO,CAACC,IAAI,IAAI;IAClBF,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAACD,IAAI,CAACE,EAAE,EAAEF,IAAI,CAACG,IAAI,EAAG,GAAEH,IAAI,CAACI,SAAU,EAAC,CAAC;EAClE,CAAC,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA,MAAMC,uBAAuB,GAAG,CAACR,KAAK,EAAEC,QAAQ,KAAK;EACjDD,KAAK,CAACE,OAAO,CAACC,IAAI,IAAI;IAClBF,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAACD,IAAI,CAACE,EAAE,EAAEF,IAAI,CAACG,IAAI,CAAC;EAC7C,CAAC,CAAC;AACN,CAAC;AACD;AACA;AACA;AACA,MAAMG,cAAc,GAAIC,OAAO,IAAK;EAChC,OAAO,CAAC,EAAEA,OAAO,CAACC,KAAK,CAACC,KAAK,IAAIF,OAAO,CAACC,KAAK,CAACE,MAAM,CAAC;AAC1D,CAAC;;AAED;AACA;AACA;AACA,MAAMC,eAAe,CAAC;EAClB;AACJ;AACA;EACIC,WAAW,CAACC,IAAI,EAAEf,QAAQ,EAAEgB,YAAY,EAAE;IACtC,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACf,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACgB,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,aAAa,GAAG,aAAa;IAClC;AACR;AACA;AACA;IACQ,IAAI,CAACrD,GAAG,GAAG,GAAG;IACd;AACR;AACA;AACA;IACQ,IAAI,CAACD,GAAG,GAAG,CAAC;IACZ;AACR;AACA;AACA;AACA;IACQ;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACD,KAAK,GAAG,CAAC;IACd;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACwD,WAAW,GAAG,YAAY;IAC/B;AACR;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB;AACR;AACA;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B,IAAI,CAAC9B,YAAY,GAAG,CAAC;IACrB,IAAI,CAACD,aAAa,GAAG,CAAC;IACtBjD,eAAe,CAACU,eAAe,CAAC;IAChC,IAAI,CAACuE,8BAA8B,GAAGP,YAAY,CAAC/B,OAAO,CAACuC,SAAS,CAAC,CAAC;MAAEC;IAAI,CAAC,KAAK;MAC9E,IAAI,CAACC,SAAS,GAAGD,GAAG,GAAG,KAAK,GAAG,KAAK;IACxC,CAAC,CAAC;EACN;EACA,IAAIE,YAAY,GAAG;IACf,OAAO,IAAI,CAACR,WAAW,KAAK,YAAY;EAC5C;EACA,IAAIS,UAAU,GAAG;IACb,OAAO,IAAI,CAACT,WAAW,KAAK,UAAU;EAC1C;EACA,IAAIU,aAAa,GAAG;IAChB,OAAO,IAAI,CAACT,QAAQ;EACxB;EACA,IAAIU,YAAY,GAAG;IACf,OAAO,IAAI,CAACT,OAAO;EACvB;EACA,IAAIU,kBAAkB,GAAG;IACrB,OAAO,IAAI,CAACT,aAAa;EAC7B;EACA,IAAIU,YAAY,GAAG;IACf,OAAO,IAAI,CAACN,SAAS;EACzB;EACA,IAAIO,gBAAgB,GAAG;IACnB,OAAOC,MAAM,CAAC,IAAI,CAACtE,GAAG,CAAC;EAC3B;EACA,IAAIuE,gBAAgB,GAAG;IACnB,OAAOD,MAAM,CAAC,IAAI,CAACrE,GAAG,CAAC;EAC3B;EACA,IAAIuE,kBAAkB,GAAG;IACrB,OAAO,IAAI,CAACd,aAAa,GAAGlC,SAAS,GAAG8C,MAAM,CAAC,IAAI,CAAC1C,YAAY,CAAC;EACrE;EACA;AACJ;AACA;EACI,IAAI6C,WAAW,GAAG;IACd,OAAO,IAAI,CAAC1E,KAAK,KAAK,IAAI,CAACE,GAAG;EAClC;EACA;AACJ;AACA;EACI,IAAIyE,WAAW,GAAG;IACd,OAAO,IAAI,CAACnB,WAAW,KAAK,YAAY,GAAG,IAAI,CAACoB,cAAc,GAAG,GAAG,GAAG,GAAG;EAC9E;EACA;AACJ;AACA;EACI,IAAIC,YAAY,GAAG;IACf,OAAO,IAAI,CAACrB,WAAW,KAAK,UAAU,GAAG,IAAI,CAACoB,cAAc,GAAG,GAAG,GAAG,GAAG;EAC5E;EACA;AACJ;AACA;EACI,IAAIE,kBAAkB,GAAG;IACrB,OAAO,IAAI,CAACtB,WAAW,KAAK,YAAY,GAAG,GAAG,GAAG,IAAI,CAACoB,cAAc,GAAG,GAAG;EAC9E;EACA;AACJ;AACA;EACI,IAAIG,mBAAmB,GAAG;IACtB,OAAO,IAAI,CAACvB,WAAW,KAAK,UAAU,GAAG,GAAG,GAAG,IAAI,CAACoB,cAAc,GAAG,GAAG;EAC5E;EACA,IAAIA,cAAc,GAAG;IACjB,OAAOxD,cAAc,CAAC,IAAI,CAACnB,GAAG,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAAC2B,YAAY,CAAC;EAChE;EACAmD,eAAe,GAAG;IACd,MAAM5B,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC6B,aAAa;IACpC,MAAM9E,KAAK,GAAG,IAAI,CAACkD,YAAY,CAAC6B,GAAG,CAAC,kBAAkB,CAAC;IACvD,IAAI,CAAC7C,QAAQ,CAAC8C,YAAY,CAAC/B,IAAI,EAAE,YAAY,EAAEjD,KAAK,CAAC;EACzD;EACAiF,WAAW,CAAC9D,OAAO,EAAE;IACjB,MAAMrB,GAAG,GAAGoB,uBAAuB,CAACC,OAAO,EAAE,KAAK,EAAE,IAAI,CAACrB,GAAG,CAAC;IAC7D,MAAMC,GAAG,GAAGmB,uBAAuB,CAACC,OAAO,EAAE,KAAK,EAAE,IAAI,CAACpB,GAAG,CAAC;IAC7D,MAAMF,KAAK,GAAGqB,uBAAuB,CAACC,OAAO,EAAE,OAAO,EAAE,IAAI,CAACtB,KAAK,CAAC;IACnE,IAAIsB,OAAO,CAAC,KAAK,CAAC,IAAIA,OAAO,CAAC,KAAK,CAAC,IAAIA,OAAO,CAAC,OAAO,CAAC,EAAE;MACtD,IAAIA,OAAO,CAAC,KAAK,CAAC,IAAIA,OAAO,CAAC,KAAK,CAAC,EAAE;QAClCZ,aAAa,CAACT,GAAG,EAAEC,GAAG,CAAC;MAC3B;MACA,IAAIoB,OAAO,CAAC,OAAO,CAAC,EAAE;QAClB,IAAItB,KAAK,IAAI,IAAI,IAAIqF,MAAM,CAACC,KAAK,CAACtF,KAAK,CAAC,EAAE;UACtC,IAAI,CAACA,KAAK,GAAGC,GAAG;QACpB;QACA,MAAM2B,aAAa,GAAG,IAAI,CAACC,YAAY;QACvC,IAAI,CAACA,YAAY,GAAGjB,kBAAkB,CAAC,IAAI,CAACX,GAAG,EAAE,IAAI,CAACC,GAAG,EAAEF,KAAK,CAAC;QACjE,IAAI,CAAC4B,aAAa,GAAGA,aAAa;MACtC;MACA,IAAI,CAAC3B,GAAG,GAAGA,GAAG;MACd,IAAI,CAACC,GAAG,GAAGA,GAAG;MACd,IAAI,CAAC2B,YAAY,GAAGjB,kBAAkB,CAAC,IAAI,CAACX,GAAG,EAAE,IAAI,CAACC,GAAG,EAAEF,KAAK,CAAC;IACrE;EACJ;EACAuF,WAAW,GAAG;IACV,IAAI,IAAI,CAAC3B,8BAA8B,EAAE;MACrC,IAAI,CAACA,8BAA8B,CAAC4B,WAAW,EAAE;IACrD;EACJ;AACJ;AACAtC,eAAe,CAACuC,IAAI;EAAA,iBAAyFvC,eAAe,EAAzBnF,EAAE,mBAAyCA,EAAE,CAAC2H,UAAU,GAAxD3H,EAAE,mBAAmEA,EAAE,CAAC4H,SAAS,GAAjF5H,EAAE,mBAA4FJ,EAAE,CAACE,mBAAmB;AAAA,CAA4C;AACnQqF,eAAe,CAAC0C,IAAI,kBAD+E7H,EAAE;EAAA,MACJmF,eAAe;EAAA;EAAA;EAAA;IAAA;MADbnF,EAAE;MAAFA,EAAE;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA,WAAFA,EAAE;EAAA;EAAA;EAAA;EAAA;AAAA,EACmyB;AACx4B;EAAA,mDAFmGA,EAAE,mBAETmF,eAAe,EAAc,CAAC;IAC9G3B,IAAI,EAAEtD,SAAS;IACf4H,IAAI,EAAE,CAAC;MACCC,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvE,IAAI,EAAExD,EAAE,CAAC2H;IAAW,CAAC,EAAE;MAAEnE,IAAI,EAAExD,EAAE,CAAC4H;IAAU,CAAC,EAAE;MAAEpE,IAAI,EAAE5D,EAAE,CAACE;IAAoB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEyF,WAAW,EAAE,CAAC;MACzJ/B,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,qBAAqB;IAChC,CAAC,CAAC;IAAE7B,YAAY,EAAE,CAAC;MACfzC,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,gCAAgC;IAC3C,CAAC,CAAC;IAAE5B,UAAU,EAAE,CAAC;MACb1C,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,8BAA8B;IACzC,CAAC,CAAC;IAAE3B,aAAa,EAAE,CAAC;MAChB3C,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,kBAAkB;IAC7B,CAAC,CAAC;IAAE1B,YAAY,EAAE,CAAC;MACf5C,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,6BAA6B;IACxC,CAAC,CAAC;IAAEzB,kBAAkB,EAAE,CAAC;MACrB7C,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,mCAAmC;IAC9C,CAAC,CAAC;IAAExB,YAAY,EAAE,CAAC;MACf9C,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,UAAU;IACrB,CAAC,CAAC;IAAEtC,aAAa,EAAE,CAAC;MAChBhC,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,WAAW;IACtB,CAAC,CAAC;IAAEvB,gBAAgB,EAAE,CAAC;MACnB/C,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAErB,gBAAgB,EAAE,CAAC;MACnBjD,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAEpB,kBAAkB,EAAE,CAAC;MACrBlD,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAE3F,GAAG,EAAE,CAAC;MACNqB,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE8B,GAAG,EAAE,CAAC;MACNsB,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE6B,KAAK,EAAE,CAAC;MACRuB,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEqF,WAAW,EAAE,CAAC;MACdjC,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEsF,QAAQ,EAAE,CAAC;MACXlC,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEuF,OAAO,EAAE,CAAC;MACVnC,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEwF,aAAa,EAAE,CAAC;MAChBpC,IAAI,EAAEpD;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA,MAAM4H,mBAAmB,SAASnI,iBAAiB,CAAC;AAEpDmI,mBAAmB,CAACN,IAAI;EAAA;EAAA;IAAA,gFA7D2E1H,EAAE,uBA6DYgI,mBAAmB,SAAnBA,mBAAmB;EAAA;AAAA,GAAqD;AACzLA,mBAAmB,CAACC,IAAI,kBA9D2EjI,EAAE;EAAA,MA8DAgI,mBAAmB;EAAA;IAAA;EAAA;EAAA,WA9DrBhI,EAAE;AAAA,EA8D6G;AAClN;EAAA,mDA/DmGA,EAAE,mBA+DTgI,mBAAmB,EAAc,CAAC;IAClHxE,IAAI,EAAEnD,SAAS;IACfyH,IAAI,EAAE,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,QAAkB;IAAEI,gBAAgB,EAAE,CAAC;MACjC1E,IAAI,EAAEpD;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA,MAAM+H,qCAAqC,SAASH,mBAAmB,CAAC;EACpE5C,WAAW,CAACgD,OAAO,EAAE;IACjB,KAAK,EAAE;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;AACJ;AACAD,qCAAqC,CAACT,IAAI;EAAA,iBAAyFS,qCAAqC,EA/ErEnI,EAAE,mBA+EqFJ,EAAE,CAACE,mBAAmB;AAAA,CAA4C;AAC5PqI,qCAAqC,CAACF,IAAI,kBAhFyDjI,EAAE;EAAA,MAgFkBmI,qCAAqC;EAAA;EAAA,WAhFzDnI,EAAE,oBAgFqH,CAClN;IACIqI,OAAO,EAAEL,mBAAmB;IAC5BM,WAAW,EAAEhI,UAAU,CAAC,MAAM6H,qCAAqC;EACvE,CAAC,CACJ,GArF8FnI,EAAE;AAAA,EAqFxD;AAC7C;EAAA,mDAtFmGA,EAAE,mBAsFTmI,qCAAqC,EAAc,CAAC;IACpI3E,IAAI,EAAEnD,SAAS;IACfyH,IAAI,EAAE,CAAC;MACCS,SAAS,EAAE,CACP;QACIF,OAAO,EAAEL,mBAAmB;QAC5BM,WAAW,EAAEhI,UAAU,CAAC,MAAM6H,qCAAqC;MACvE,CAAC,CACJ;MACDK,QAAQ,EAAG;IACf,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEhF,IAAI,EAAE5D,EAAE,CAACE;IAAoB,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM2I,oBAAoB,SAAStD,eAAe,CAAC;EAC/C;AACJ;AACA;EACIC,WAAW,CAACE,YAAY,EAAED,IAAI,EAAEf,QAAQ,EAAEoE,IAAI,EAAE;IAC5C,KAAK,CAACrD,IAAI,EAAEf,QAAQ,EAAEgB,YAAY,CAAC;IACnC,IAAI,CAACA,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACf,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACoE,IAAI,GAAGA,IAAI;IAChB;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACtG,KAAK,GAAG,IAAI;IACjB;AACR;AACA;AACA;IACQ,IAAI,CAACwB,SAAS,GAAG,KAAK;IACtB;AACR;AACA;IACQ,IAAI,CAAC+E,YAAY,GAAG,IAAIpI,YAAY,EAAE;EAC1C;EACA;AACJ;AACA;EACI,IAAIqI,SAAS,GAAG;IACZ,IAAI,OAAO,IAAI,CAACxG,KAAK,KAAK,SAAS,EAAE;MACjC,OAAO,IAAI,CAACA,KAAK;IACrB,CAAC,MACI;MACD,IAAI,IAAI,CAACA,KAAK,IAAI,CAAC,IAAI,CAACA,KAAK,CAACyG,cAAc,CAAC,SAAS,CAAC,EAAE;QACrD,IAAI,CAACzG,KAAK,CAAC0G,OAAO,GAAG,IAAI;MAC7B;MACA,OAAO,IAAI,CAAC1G,KAAK,CAAC0G,OAAO;IAC7B;EACJ;EACA;AACJ;AACA;EACI,IAAIC,aAAa,GAAG;IAChB,IAAI,OAAO,IAAI,CAAC3G,KAAK,KAAK,SAAS,EAAE;MACjC,OAAO,KAAK;IAChB,CAAC,MACI;MACD,IAAI,IAAI,CAACA,KAAK,IAAI,CAAC,IAAI,CAACA,KAAK,CAACyG,cAAc,CAAC,UAAU,CAAC,EAAE;QACtD,IAAI,CAACzG,KAAK,CAAC4G,QAAQ,GAAG,KAAK;MAC/B;MACA,OAAO,IAAI,CAAC5G,KAAK,CAAC4G,QAAQ;IAC9B;EACJ;EACA;AACJ;AACA;EACI,IAAIC,eAAe,GAAG;IAClB,OAAO,IAAI,CAACF,aAAa,KAAK,OAAO;EACzC;EACA;AACJ;AACA;EACI,IAAIG,gBAAgB,GAAG;IACnB,OAAO,IAAI,CAACH,aAAa,KAAK,QAAQ;EAC1C;EACA;AACJ;AACA;EACI,IAAII,aAAa,GAAG;IAChB,OAAO,IAAI,CAACJ,aAAa,KAAK,KAAK;EACvC;EACA;AACJ;AACA;EACI,IAAIK,mBAAmB,GAAG;IACtB,OAAOpH,WAAW,CAAC,IAAI,CAAC8B,YAAY,EAAE,IAAI,CAAC5B,GAAG,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,KAAK,CAAC;EACzE;EACA;AACJ;AACA;EACIiF,WAAW,CAAC9D,OAAO,EAAE;IACjB,KAAK,CAAC8D,WAAW,CAAC9D,OAAO,CAAC;IAC1B,IAAI,IAAI,CAAC8F,qBAAqB,IAAIrF,oBAAoB,CAACT,OAAO,CAAC,EAAE;MAC7D,IAAI,CAAC+F,sBAAsB,GAAG,IAAI;IACtC;IACA,IAAI3F,YAAY,CAACJ,OAAO,EAAE,IAAI,CAACK,SAAS,EAAE,IAAI,CAACC,aAAa,EAAE,IAAI,CAACC,YAAY,CAAC,IAAI,CAACP,OAAO,CAAC,OAAO,CAAC,CAACgG,WAAW,EAAE;MAC/G,IAAI,CAACC,cAAc,CAAC,IAAI,CAAC3F,aAAa,CAAC;IAC3C;EACJ;EACA;AACJ;AACA;EACI2D,WAAW,GAAG;IACV,IAAI,IAAI,CAACiC,cAAc,EAAE;MACrBC,oBAAoB,CAAC,IAAI,CAACD,cAAc,CAAC;IAC7C;EACJ;EACA;AACJ;AACA;EACID,cAAc,CAAC3F,aAAa,EAAE;IAC1B,IAAI,CAACwF,qBAAqB,GAAG,IAAI;IACjC,MAAMtE,OAAO,GAAG,IAAI,CAAC4E,qBAAqB,CAACzC,aAAa;IACxD,MAAM0C,cAAc,GAAG,IAAI,CAACC,4BAA4B,CAAC3C,aAAa;IACtE,MAAM4C,gBAAgB,GAAG,IAAI,CAACC,mBAAmB,CAAClG,aAAa,CAAC;IAChE,IAAI,CAAC6E,IAAI,CAACsB,iBAAiB,CAAC,MAAM;MAC9B,IAAI,IAAI,CAACP,cAAc,EAAE;QACrBC,oBAAoB,CAAC,IAAI,CAACD,cAAc,CAAC;MAC7C;MACA,MAAMQ,OAAO,GAAG,MAAM;QAClB,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGN,gBAAgB,CAACO,SAAS;QACjE,MAAMrB,QAAQ,GAAGxG,IAAI,CAACN,GAAG,CAACgI,OAAO,GAAGJ,gBAAgB,CAACQ,QAAQ,EAAE,CAAC,CAAC;QACjE,MAAMC,IAAI,GAAGT,gBAAgB,CAACU,SAAS,GAAGV,gBAAgB,CAACW,SAAS,GAAGzB,QAAQ;QAC/E,MAAM0B,WAAW,GAAI,GAAG,GAAGH,IAAI,GAAI,GAAG;QACtC,IAAI,CAACI,iBAAiB,CAAC5F,OAAO,EAAE6E,cAAc,EAAEE,gBAAgB,CAACc,QAAQ,EAAEL,IAAI,EAAEG,WAAW,CAAC;QAC7F,IAAI1B,QAAQ,GAAG,CAAC,EAAE;UACd,IAAI,IAAI,CAACM,sBAAsB,EAAE;YAC7B,IAAI,CAACuB,aAAa,CAAC9F,OAAO,EAAE6E,cAAc,EAAEE,gBAAgB,CAACc,QAAQ,CAAC;YACtE;UACJ;UACA,IAAI,CAACnB,cAAc,GAAG1F,qBAAqB,CAACkG,OAAO,CAAC;QACxD,CAAC,MACI;UACD,IAAI,CAACa,aAAa,CAACjH,aAAa,CAAC;QACrC;MACJ,CAAC;MACDoG,OAAO,EAAE;IACb,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACI,IAAIc,iBAAiB,GAAG;IACpB,IAAI,OAAO,IAAI,CAACnH,SAAS,KAAK,SAAS,EAAE;MACrC,OAAO,GAAG;IACd,CAAC,MACI;MACD,IAAI,IAAI,CAACA,SAAS,IAAI,CAAC,IAAI,CAACA,SAAS,CAACiF,cAAc,CAAC,UAAU,CAAC,EAAE;QAC9D,IAAI,CAACjF,SAAS,CAAC0G,QAAQ,GAAG,GAAG;MACjC;MACA,OAAO,IAAI,CAAC1G,SAAS,CAAC0G,QAAQ;IAClC;EACJ;EACAQ,aAAa,CAAC7I,KAAK,EAAE;IACjB,IAAInB,YAAY,CAAC,IAAI,CAAC6H,YAAY,CAAC,EAAE;MACjC,IAAI,CAACD,IAAI,CAACsC,GAAG,CAAC,MAAM;QAChB,IAAI,CAACrC,YAAY,CAACsC,IAAI,CAAC;UACnBC,IAAI,EAAEjJ,KAAK;UACXkJ,EAAE,EAAE,IAAI,CAACrH;QACb,CAAC,CAAC;MACN,CAAC,CAAC;IACN;IACA,IAAI,CAAC4E,IAAI,CAACsC,GAAG,CAAC,MAAM;MAChB,IAAI,CAAC3B,qBAAqB,GAAG,KAAK;IACtC,CAAC,CAAC;EACN;EACAU,mBAAmB,CAAC9H,KAAK,EAAE;IACvB,MAAMgE,YAAY,GAAG,IAAI,CAACR,WAAW,KAAK,YAAY;IACtD,MAAM2F,aAAa,GAAG/H,cAAc,CAAC,IAAI,CAACnB,GAAG,EAAE,IAAI,CAACC,GAAG,EAAEF,KAAK,CAAC;IAC/D,MAAMoJ,mBAAmB,GAAGpF,YAAY,GAAGmF,aAAa,GAAG,GAAG,GAAG,GAAG;IACpE,MAAME,oBAAoB,GAAG,CAACrF,YAAY,GAAGmF,aAAa,GAAG,GAAG,GAAG,GAAG;IACtE,MAAMR,QAAQ,GAAG3E,YAAY,GAAG,OAAO,GAAG,QAAQ;IAClD,MAAMoE,SAAS,GAAG,IAAIF,IAAI,EAAE,CAACC,OAAO,EAAE;IACtC,MAAMI,SAAS,GAAGvE,YAAY,GAAGoF,mBAAmB,GAAGC,oBAAoB;IAC3E,MAAMb,SAAS,GAAGxE,YAAY,GAAG,IAAI,CAACW,WAAW,GAAGyE,mBAAmB,GAAG,IAAI,CAACvE,YAAY,GAAGwE,oBAAoB;IAClH,MAAMhB,QAAQ,GAAG,IAAI,CAACS,iBAAiB,GAAGvI,IAAI,CAACO,GAAG,CAAE0H,SAAS,GAAG,GAAG,CAAE;IACrE,OAAO;MACHG,QAAQ;MACRP,SAAS;MACTG,SAAS;MACTC,SAAS;MACTH;IACJ,CAAC;EACL;EACAK,iBAAiB,CAAC5F,OAAO,EAAE6E,cAAc,EAAEgB,QAAQ,EAAEL,IAAI,EAAEG,WAAW,EAAE;IACpE,IAAI,CAACpG,QAAQ,CAACiH,QAAQ,CAACxG,OAAO,EAAE6F,QAAQ,EAAEL,IAAI,GAAG,GAAG,CAAC;IACrD,IAAI,CAACjG,QAAQ,CAACiH,QAAQ,CAAC3B,cAAc,EAAEgB,QAAQ,EAAEF,WAAW,GAAG,GAAG,CAAC;EACvE;EACAG,aAAa,CAAC9F,OAAO,EAAE6E,cAAc,EAAEgB,QAAQ,EAAE;IAC7C,MAAML,IAAI,GAAGlH,cAAc,CAAC,IAAI,CAACnB,GAAG,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACF,KAAK,CAAC;IAC3D,MAAMuJ,OAAO,GAAGjB,IAAI,GAAG,GAAG;IAC1B,MAAMkB,cAAc,GAAG,GAAG,GAAGlB,IAAI;IACjC,IAAI,CAACI,iBAAiB,CAAC5F,OAAO,EAAE6E,cAAc,EAAEgB,QAAQ,EAAEY,OAAO,EAAEC,cAAc,CAAC;IAClF,IAAI,CAAC/C,IAAI,CAACsC,GAAG,CAAC,MAAM;MAChB,IAAI,CAAC1B,sBAAsB,GAAG,KAAK;MACnC,IAAI,CAACD,qBAAqB,GAAG,KAAK;IACtC,CAAC,CAAC;EACN;AACJ;AACAZ,oBAAoB,CAACf,IAAI;EAAA,iBAAyFe,oBAAoB,EAlTnCzI,EAAE,mBAkTmDJ,EAAE,CAACE,mBAAmB,GAlT3EE,EAAE,mBAkTsFA,EAAE,CAAC2H,UAAU,GAlTrG3H,EAAE,mBAkTgHA,EAAE,CAAC4H,SAAS,GAlT9H5H,EAAE,mBAkTyIA,EAAE,CAAC0L,MAAM;AAAA,CAA4C;AACnSjD,oBAAoB,CAACZ,IAAI,kBAnT0E7H,EAAE;EAAA,MAmTCyI,oBAAoB;EAAA;EAAA;IAAA;MAnTvBzI,EAAE;MAAFA,EAAE;IAAA;IAAA;MAAA;MAAFA,EAAE,qBAAFA,EAAE;MAAFA,EAAE,qBAAFA,EAAE;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA,WAAFA,EAAE,oBAmT4S,CACzYF,mBAAmB,EACnB;IACIuI,OAAO,EAAEtI,WAAW;IACpB4L,QAAQ,EAAE;EACd,CAAC,CACJ,GAzT8F3L,EAAE,6BAAFA,EAAE;EAAA;EAAA;EAAA;IAAA;IAAA;MAAA;AACrG;AACA;AACA;MAHqG;MAAA;IAAA;MAAA,SA4TvE,kHAAW;IAAA;IAAA;EAAA;EAAA;IAAA;MA5T0DA,EAAE,yBA8T9E;MA9T4EA,EAAE,6BAoU/D;MApU6DA,EAAE,qEAqUT;MArUOA,EAAE,eAsUtF;MAtUoFA,EAAE,+BA+UxF;MA/UsFA,EAAE,qEAyVL;MAzVGA,EAAE,eA0VlF;IAAA;IAAA;MA1VgFA,EAAE,aAgU/C;MAhU6CA,EAAE,qDAgU/C;MAhU6CA,EAAE,yCAmUhE;MAnU8DA,EAAE,aAqUnE;MArUiEA,EAAE,kCAqUnE;MArUiEA,EAAE,aA6U5D;MA7U0DA,EAAE,2CA6U5D;MA7U0DA,EAAE,2CA0UzD;MA1UuDA,EAAE,4CA2U7D;MA3U2DA,EAAE,aAmVjD;MAnV+CA,EAAE,kDAmVjD;MAnV+CA,EAAE,qDAqV3C;MArVyCA,EAAE,aAyV/D;MAzV6DA,EAAE,kCAyV/D;IAAA;EAAA;EAAA,eAG8BkB,EAAE,CAAC0K,OAAO,EAAoF1K,EAAE,CAAC2K,IAAI,EAA6F3K,EAAE,CAAC4K,OAAO,EAA2E3D,qCAAqC;EAAA;AAAA,EAAuD;AACvb;EAAA,mDA7VmGnI,EAAE,mBA6VTyI,oBAAoB,EAAc,CAAC;IACnHjF,IAAI,EAAEtD,SAAS;IACf4H,IAAI,EAAE,CAAC;MACCiE,QAAQ,EAAE,kBAAkB;MAC5BvD,QAAQ,EAAE,mBAAmB;MAC7BT,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;MACYQ,SAAS,EAAE,CACPzI,mBAAmB,EACnB;QACIuI,OAAO,EAAEtI,WAAW;QACpB4L,QAAQ,EAAE;MACd,CAAC;IAET,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEnI,IAAI,EAAE5D,EAAE,CAACE;IAAoB,CAAC,EAAE;MAAE0D,IAAI,EAAExD,EAAE,CAAC2H;IAAW,CAAC,EAAE;MAAEnE,IAAI,EAAExD,EAAE,CAAC4H;IAAU,CAAC,EAAE;MAAEpE,IAAI,EAAExD,EAAE,CAAC0L;IAAO,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEtJ,KAAK,EAAE,CAAC;MACxKoB,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE4L,gBAAgB,EAAE,CAAC;MACnBxI,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE6L,gBAAgB,EAAE,CAAC;MACnBzI,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE8L,aAAa,EAAE,CAAC;MAChB1I,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE+L,aAAa,EAAE,CAAC;MAChB3I,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEwD,SAAS,EAAE,CAAC;MACZJ,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEuI,YAAY,EAAE,CAAC;MACfnF,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAEmJ,qBAAqB,EAAE,CAAC;MACxBnG,IAAI,EAAE/C,SAAS;MACfqH,IAAI,EAAE,CAAC,gBAAgB,EAAE;QAAEsE,MAAM,EAAE;MAAM,CAAC;IAC9C,CAAC,CAAC;IAAEvC,4BAA4B,EAAE,CAAC;MAC/BrG,IAAI,EAAE/C,SAAS;MACfqH,IAAI,EAAE,CAAC,oBAAoB,EAAE;QAAEsE,MAAM,EAAE;MAAM,CAAC;IAClD,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,yBAAyB,SAASlH,eAAe,CAAC;EACpD;AACJ;AACA;EACIC,WAAW,CAACE,YAAY,EAAED,IAAI,EAAEf,QAAQ,EAAE;IACtC,KAAK,CAACe,IAAI,EAAEf,QAAQ,EAAEgB,YAAY,CAAC;IACnC,IAAI,CAACA,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACf,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACgI,UAAU,GAAG,IAAI;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,kBAAkB,GAAG;MACtBvH,KAAK,EAAG,GAAE,IAAI,CAACwH,mBAAoB,GAAE;MACrCvH,MAAM,EAAE;IACZ,CAAC;EACL;EACA;AACJ;AACA;EACI,IAAIwH,MAAM,GAAG;IACT,MAAMC,KAAK,GAAG,IAAI,CAACJ,UAAU;IAC7B,MAAMG,MAAM,GAAGE,KAAK,CAACD,KAAK,CAAC,CAACE,IAAI,CAAC,KAAK,CAAC;IACvC,MAAMC,eAAe,GAAGtK,IAAI,CAACC,KAAK,CAAC,IAAI,CAACoE,cAAc,GAAG8F,KAAK,CAAC;IAC/D,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,eAAe,EAAEC,CAAC,EAAE,EAAE;MACtCL,MAAM,CAACK,CAAC,CAAC,GAAG,IAAI;IACpB;IACA,OAAOL,MAAM;EACjB;EACA;AACJ;AACA;EACI,IAAID,mBAAmB,GAAG;IACtB,OAAO,GAAG,GAAG,IAAI,CAACF,UAAU;EAChC;EACA;AACJ;AACA;EACI,IAAIS,iBAAiB,GAAG;IACpB,IAAI,IAAI,CAACvH,WAAW,KAAK,YAAY,EAAE;MACnC,IAAI,CAAC+G,kBAAkB,CAACvH,KAAK,GAAI,GAAE,IAAI,CAACwH,mBAAoB,GAAE;MAC9D,IAAI,CAACD,kBAAkB,CAACtH,MAAM,GAAG,IAAI;IACzC,CAAC,MACI;MACD,IAAI,CAACsH,kBAAkB,CAACtH,MAAM,GAAI,GAAE,IAAI,CAACuH,mBAAoB,GAAE;MAC/D,IAAI,CAACD,kBAAkB,CAACvH,KAAK,GAAG,IAAI;IACxC;IACA,OAAO,IAAI,CAACuH,kBAAkB;EAClC;AACJ;AACAH,yBAAyB,CAAC3E,IAAI;EAAA,iBAAyF2E,yBAAyB,EA1e7CrM,EAAE,mBA0e6DJ,EAAE,CAACE,mBAAmB,GA1erFE,EAAE,mBA0egGA,EAAE,CAAC2H,UAAU,GA1e/G3H,EAAE,mBA0e0HA,EAAE,CAAC4H,SAAS;AAAA,CAA4C;AACvRyE,yBAAyB,CAACxE,IAAI,kBA3eqE7H,EAAE;EAAA,MA2eMqM,yBAAyB;EAAA;EAAA;EAAA;IAAA;MA3ejCrM,EAAE;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;EAAA,WAAFA,EAAE,oBA2e4U,CACzaF,mBAAmB,EACnB;IACIuI,OAAO,EAAEtI,WAAW;IACpB4L,QAAQ,EAAE;EACd,CAAC,CACJ,GAjf8F3L,EAAE;EAAA;EAAA;EAAA;IAAA;IAAA;MAAA;AACrG;AACA;AACA;MAHqG;MAAA;IAAA;MAAA,SAofvE,kIAAiB;IAAA;IAAA;EAAA;EAAA;IAAA;MApfoDA,EAAE,yBAsf9E;MAtf4EA,EAAE,2BAufpD;MAvfkDA,EAAE,uEAigBpF;MAjgBkFA,EAAE,eAkgBxF;IAAA;IAAA;MAlgBsFA,EAAE,aAwf5B;MAxf0BA,EAAE,kCAwf5B;IAAA;EAAA;EAAA,eAWRkB,EAAE,CAAC0K,OAAO,EAAoF1K,EAAE,CAAC+L,OAAO,EAAmH/L,EAAE,CAAC4K,OAAO,EAA2E3D,qCAAqC;EAAA;AAAA,EAAuD;AAC7c;EAAA,mDApgBmGnI,EAAE,mBAogBTqM,yBAAyB,EAAc,CAAC;IACxH7I,IAAI,EAAEtD,SAAS;IACf4H,IAAI,EAAE,CAAC;MACCiE,QAAQ,EAAE,uBAAuB;MACjCvD,QAAQ,EAAE,wBAAwB;MAClCT,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MACeQ,SAAS,EAAE,CACPzI,mBAAmB,EACnB;QACIuI,OAAO,EAAEtI,WAAW;QACpB4L,QAAQ,EAAE;MACd,CAAC;IAET,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEnI,IAAI,EAAE5D,EAAE,CAACE;IAAoB,CAAC,EAAE;MAAE0D,IAAI,EAAExD,EAAE,CAAC2H;IAAW,CAAC,EAAE;MAAEnE,IAAI,EAAExD,EAAE,CAAC4H;IAAU,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE0E,UAAU,EAAE,CAAC;MACxJ9I,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,2BAA2B;IACtC,CAAC,CAAC;IAAEyE,UAAU,EAAE,CAAC;MACb/I,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE4L,gBAAgB,EAAE,CAAC;MACnBxI,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE6L,gBAAgB,EAAE,CAAC;MACnBzI,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE8L,aAAa,EAAE,CAAC;MAChB1I,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE+L,aAAa,EAAE,CAAC;MAChB3I,IAAI,EAAEpD;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA,MAAM8M,0CAA0C,CAAC;EAC7C9H,WAAW,CAAC+H,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGA,WAAW;EAClC;AACJ;AACAD,0CAA0C,CAACxF,IAAI;EAAA,iBAAyFwF,0CAA0C,EA5jB/ElN,EAAE,mBA4jB+FA,EAAE,CAACoN,WAAW;AAAA,CAA4C;AAC9PF,0CAA0C,CAACjF,IAAI,kBA7jBoDjI,EAAE;EAAA,MA6jBuBkN,0CAA0C;EAAA;AAAA,EAAuE;AAC7O;EAAA,mDA9jBmGlN,EAAE,mBA8jBTkN,0CAA0C,EAAc,CAAC;IACzI1J,IAAI,EAAEnD,SAAS;IACfyH,IAAI,EAAE,CAAC;MACCU,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEhF,IAAI,EAAExD,EAAE,CAACoN;IAAY,CAAC,CAAC;EAAE,CAAC;AAAA;AAE9E,MAAMC,oBAAoB,GAAG,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,4BAA4B,CAAC;EAC/BlI,WAAW,CAACd,QAAQ,EAAEiJ,GAAG,EAAEjI,YAAY,EAAEP,OAAO,EAAE2D,IAAI,EAAE;IACpD,IAAI,CAACpE,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACiJ,GAAG,GAAGA,GAAG;IACd,IAAI,CAACjI,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACP,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC2D,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACnD,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,aAAa,GAAG,aAAa;IAClC;AACR;AACA;AACA;AACA;IACQ,IAAI,CAAC5B,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAAC4J,OAAO,GAAG,CAAC;IAChB;AACR;AACA;IACQ,IAAI,CAAC7E,YAAY,GAAG,IAAIpI,YAAY,EAAE;IACtC,IAAI,CAACkN,qBAAqB,GAAG,CAAC,CAAC;IAC/B,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACC,IAAI,GAAG,GAAG;IACf,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAAChK,aAAa,GAAG,CAAC;IACtB,IAAI,CAACiK,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,aAAa,GAAG,IAAI3M,YAAY,EAAE;IACvCR,eAAe,CAACU,eAAe,CAAC;IAChC,IAAI,CAACyM,aAAa,CAACC,GAAG,CAAC,IAAI,CAAC1I,YAAY,CAAC/B,OAAO,CAACuC,SAAS,CAAC,IAAI,CAACmI,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1F;EACA,IAAI3H,gBAAgB,GAAG;IACnB,OAAOC,MAAM,CAAC,IAAI,CAACtE,GAAG,CAAC;EAC3B;EACA,IAAIuE,gBAAgB,GAAG;IACnB,OAAOD,MAAM,CAAC,IAAI,CAACrE,GAAG,CAAC;EAC3B;EACA,IAAIuE,kBAAkB,GAAG;IACrB,OAAO,IAAI,CAACd,aAAa,GAAGlC,SAAS,GAAG8C,MAAM,CAAC,IAAI,CAACvE,KAAK,CAAC;EAC9D;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIA,KAAK,CAACA,KAAK,EAAE;IACb,IAAIA,KAAK,GAAG,IAAI,CAACE,GAAG,EAAE;MAClB,IAAI,CAACgM,YAAY,CAAC,aAAa,CAAC;IACpC;IACA,IAAIlM,KAAK,GAAG,IAAI,CAACC,GAAG,EAAE;MAClB,IAAI,CAACiM,YAAY,CAAC,aAAa,CAAC;IACpC;IACA,IAAI,CAACtK,aAAa,GAAG,IAAI,CAAC5B,KAAK;IAC/B,IAAI,CAAC4L,MAAM,GAAG5L,KAAK;EACvB;EACA,IAAIA,KAAK,GAAG;IACR,OAAO,IAAI,CAAC4L,MAAM;EACtB;EACA;AACJ;AACA;AACA;AACA;EACI,IAAI1L,GAAG,CAACA,GAAG,EAAE;IACT,IAAIA,GAAG,GAAG,IAAI,CAACD,GAAG,EAAE;MAChB,IAAI,CAACiM,YAAY,CAAC,WAAW,CAAC;IAClC;IACA,IAAI,CAACR,IAAI,GAAGxL,GAAG;EACnB;EACA,IAAIA,GAAG,GAAG;IACN,OAAO,IAAI,CAACwL,IAAI;EACpB;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIzL,GAAG,CAACA,GAAG,EAAE;IACT,IAAIA,GAAG,GAAG,IAAI,CAACC,GAAG,EAAE;MAChB,IAAI,CAACgM,YAAY,CAAC,WAAW,CAAC;IAClC;IACA,IAAI,CAACP,IAAI,GAAG1L,GAAG;EACnB;EACA,IAAIA,GAAG,GAAG;IACN,OAAO,IAAI,CAAC0L,IAAI;EACpB;EACA;AACJ;AACA;AACA;EACI,IAAIhI,aAAa,CAACA,aAAa,EAAE;IAC7B,IAAI,CAAC8H,cAAc,GAAG9H,aAAa;EACvC;EACA,IAAIA,aAAa,GAAG;IAChB,OAAO,IAAI,CAAC8H,cAAc;EAC9B;EACAzG,eAAe,GAAG;IACd,IAAI,CAAClG,mBAAmB,EAAE,EAAE;MACxB;IACJ;IACA,MAAMsE,IAAI,GAAG,IAAI,CAACN,OAAO,CAACmC,aAAa;IACvC,MAAMkH,SAAS,GAAG,IAAI,CAAC9I,YAAY,CAAC6B,GAAG,CAAC,kBAAkB,CAAC;IAC3D,IAAI,CAAC7C,QAAQ,CAAC8C,YAAY,CAAC/B,IAAI,EAAE,YAAY,EAAE+I,SAAS,CAAC;IACzD,IAAI,CAACC,eAAe,EAAE;EAC1B;EACAhH,WAAW,CAAC9D,OAAO,EAAE;IACjB,MAAM+K,eAAe,GAAG,IAAI;IAC5B,IAAItN,SAAS,CAAC,OAAO,EAAEuC,OAAO,EAAE+K,eAAe,CAAC,IAAI,IAAI,CAACC,QAAQ,EAAE;MAC/D,IAAI,IAAI,CAAC3K,SAAS,EAAE;QAChB,IAAI,CAAC4K,oBAAoB,EAAE;MAC/B,CAAC,MACI;QACD,MAAMvM,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,IAAI,CAACC,GAAG;QACnC,IAAI,CAAC4L,aAAa,GAAGvK,OAAO,CAAC,OAAO,CAAC,CAACE,YAAY;QAClD,IAAI,CAACgL,iBAAiB,CAACxM,KAAK,CAAC;MACjC;IACJ;IACA,IAAIsB,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAACgL,QAAQ,EAAE;MACrCnK,oBAAoB,CAAC,CAAC;QAAEK,MAAM,EAAE,cAAc;QAAEC,EAAE,EAAE,IAAI,CAAC6J,QAAQ,CAACrH,aAAa;QAAEvC,IAAI,EAAE,SAAS;QAAEC,SAAS,EAAE,IAAI,CAAC4I,OAAO,CAACvK,QAAQ;MAAG,CAAC,CAAC,EAAE,IAAI,CAACqB,QAAQ,CAAC;IAC3J;IACA,IAAIf,OAAO,CAAC,eAAe,CAAC,IAAI,CAACA,OAAO,CAAC,eAAe,CAAC,CAACgG,WAAW,EAAE;MACnE,IAAI,CAACmF,kBAAkB,EAAE;IAC7B;EACJ;EACAlH,WAAW,GAAG;IACV,IAAI,CAACuG,aAAa,CAACtG,WAAW,EAAE;EACpC;EACA;AACJ;AACA;EACIkH,QAAQ,GAAG;IACP,IAAI,CAACC,SAAS,EAAE;IAChB,MAAM3M,KAAK,GAAG,IAAI,CAAC2B,SAAS,GAAG,IAAI,CAACkK,aAAa,GAAG,IAAI,CAAC7L,KAAK;IAC9D,IAAI,CAACwM,iBAAiB,CAACxM,KAAK,CAAC;IAC7B,IAAI,CAAC4M,oBAAoB,CAAC5M,KAAK,CAAC;EACpC;EACAoM,eAAe,GAAG;IACd,IAAI,CAACO,SAAS,EAAE;IAChB,IAAI,IAAI,CAAChJ,aAAa,EAAE;MACpB,IAAI,CAAC8I,kBAAkB,EAAE;IAC7B,CAAC,MACI;MACD,IAAI,CAAC,IAAI,CAAC9K,SAAS,EAAE;QACjB,MAAM3B,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,IAAI,CAACC,GAAG;QACnC,IAAI,CAACuM,iBAAiB,CAACxM,KAAK,CAAC;MACjC,CAAC,MACI;QACD,IAAI,CAACuM,oBAAoB,EAAE;MAC/B;IACJ;EACJ;EACAC,iBAAiB,CAACxM,KAAK,EAAE;IACrB,IAAI,IAAI,CAAC6M,aAAa,EAAE;MACpB,IAAI,CAACC,mBAAmB,CAAC9M,KAAK,CAAC;IACnC;IACA;IACA,IAAI,CAACyG,IAAI,CAACsG,QAAQ,CAACC,IAAI,CAAC5N,IAAI,CAAC,CAAC,CAAC,CAAC,CAACyE,SAAS,CAAC,MAAM;MAC7C,IAAI,CAAC+I,oBAAoB,CAAC5M,KAAK,GAAG,IAAI,CAACC,GAAG,CAAC;IAC/C,CAAC,CAAC;IACF,MAAMgN,WAAW,GAAG,IAAI,CAACX,QAAQ,CAACrH,aAAa;IAC/C,MAAMiI,MAAM,GAAG,IAAI,CAACZ,QAAQ,CAACrH,aAAa,CAACkI,CAAC,CAACC,OAAO,CAACpN,KAAK;IAC1D,MAAMqN,aAAa,GAAG9M,IAAI,CAAC+M,EAAE,IAAIJ,MAAM,GAAG,CAAC,CAAC;IAC5C,MAAMK,GAAG,GAAG,IAAI,CAACzJ,GAAG,GAAGuJ,aAAa,GAAG,CAAC,CAAC,GAAGA,aAAa;IACzD,MAAMG,gBAAgB,GAAGH,aAAa,GAAGE,GAAG,IAAIvN,KAAK,IAAI,IAAI,CAACE,GAAG,GAAG,IAAI,CAACD,GAAG,CAAC,CAAC;IAC9E,MAAMwN,oBAAoB,GAAG,CACzB;MAAEjL,MAAM,EAAE,UAAU;MAAEC,EAAE,EAAEwK,WAAW;MAAEvK,IAAI,EAAE,iBAAiB;MAAEC,SAAS,EAAE0K,aAAa,CAACrM,QAAQ;IAAG,CAAC,EACrG;MAAEwB,MAAM,EAAE,UAAU;MAAEC,EAAE,EAAEwK,WAAW;MAAEvK,IAAI,EAAE,kBAAkB;MAAEC,SAAS,EAAE6K,gBAAgB,CAACxM,QAAQ;IAAG,CAAC,CAC5G;IACDmB,oBAAoB,CAACsL,oBAAoB,EAAE,IAAI,CAACpL,QAAQ,CAAC;EAC7D;EACAkK,oBAAoB,GAAG;IACnB,MAAMmB,eAAe,GAAG;MACpBC,SAAS,EAAE,IAAI,CAAC9B,aAAa,GAAG,IAAI,CAAC7L,KAAK,GAAG,IAAI,CAACC,GAAG;MACrD2N,UAAU,EAAE,IAAI,CAAC5N,KAAK,IAAI,IAAI,CAAC4B;IACnC,CAAC;IACD,MAAMiM,gBAAgB,GAAG;MACrBF,SAAS,EAAE,IAAI,CAAC9B,aAAa,GAAG,IAAI,CAAC7L,KAAK,GAAG,IAAI,CAACC,GAAG;MACrD6N,UAAU,EAAE,IAAI,CAAC9N,KAAK,IAAI,IAAI,CAAC4B;IACnC,CAAC;IACD,IAAI8L,eAAe,CAACC,SAAS,IAAID,eAAe,CAACE,UAAU,IACvDC,gBAAgB,CAACF,SAAS,IAAIE,gBAAgB,CAACC,UAAU,EAAE;MAC3D;IACJ;IACA,IAAI,CAACtB,iBAAiB,CAAC,IAAI,CAACX,aAAa,CAAC;IAC1C,MAAM5C,IAAI,GAAG,IAAI,CAAC4C,aAAa;IAC/B,IAAIhN,YAAY,CAAC,IAAI,CAAC6H,YAAY,CAAC,EAAE;MACjC,IAAI,CAACA,YAAY,CAACsC,IAAI,CAAC;QACnBC,IAAI,EAAEA,IAAI;QACVC,EAAE,EAAE,IAAI,CAAC2C;MACb,CAAC,CAAC;IACN;IACA;IACA6B,eAAe,CAACE,UAAU,GAAG,IAAI,CAAC/B,aAAa,IAAI,CAAC,GAAG,IAAI,CAACA,aAAa,IAAI,CAAC;IAC9E/J,qBAAqB,CAAC,IAAI,CAACyK,oBAAoB,CAACN,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/D;EACAU,SAAS,GAAG;IACR,MAAMM,WAAW,GAAG,IAAI,CAACX,QAAQ,CAACrH,aAAa;IAC/C,MAAM8I,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC9I,aAAa;IACtC,MAAM+I,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC/I,aAAa;IAC1C,MAAMnC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACmC,aAAa;IAC1C,IAAIgJ,OAAO,GAAGnL,OAAO,CAACoL,qBAAqB,EAAE,CAAClL,KAAK;IACnD,IAAI,CAACH,cAAc,CAACC,OAAO,CAAC,EAAE;MAC1B,MAAMqL,WAAW,GAAG,CAChB;QAAE3L,MAAM,EAAE,UAAU;QAAEC,EAAE,EAAEuL,OAAO;QAAEtL,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAG,GAAEyI,oBAAqB;MAAI,CAAC,EAC1F;QAAE5I,MAAM,EAAE,UAAU;QAAEC,EAAE,EAAEuL,OAAO;QAAEtL,IAAI,EAAE,QAAQ;QAAEC,SAAS,EAAG,GAAEyI,oBAAqB;MAAI,CAAC,CAC9F;MACD6C,OAAO,GAAG7C,oBAAoB;MAC9BjJ,oBAAoB,CAACgM,WAAW,EAAE,IAAI,CAAC9L,QAAQ,CAAC;IACpD;IACA,MAAM+L,eAAe,GAAG,CACpB;MAAE5L,MAAM,EAAE,cAAc;MAAEC,EAAE,EAAEwK,WAAW;MAAEvK,IAAI,EAAE,GAAG;MAAEC,SAAS,EAAE4B,MAAM,CAAE0J,OAAO,GAAG,CAAC,GAAI,EAAE;IAAE,CAAC,EAC7F;MAAEzL,MAAM,EAAE,cAAc;MAAEC,EAAE,EAAEwK,WAAW;MAAEvK,IAAI,EAAE,IAAI;MAAEC,SAAS,EAAE4B,MAAM,CAAE0J,OAAO,GAAG,CAAC;IAAG,CAAC,EACzF;MAAEzL,MAAM,EAAE,cAAc;MAAEC,EAAE,EAAEwK,WAAW;MAAEvK,IAAI,EAAE,IAAI;MAAEC,SAAS,EAAE4B,MAAM,CAAE0J,OAAO,GAAG,CAAC;IAAG,CAAC,EACzF;MAAEzL,MAAM,EAAE,cAAc;MAAEC,EAAE,EAAEwK,WAAW;MAAEvK,IAAI,EAAE,SAAS;MAAEC,SAAS,EAAE4B,MAAM,CAAC,IAAI,CAACgH,OAAO;IAAE,CAAC,EAC7F;MAAE/I,MAAM,EAAE,cAAc;MAAEC,EAAE,EAAEsL,KAAK;MAAErL,IAAI,EAAE,GAAG;MAAEC,SAAS,EAAE4B,MAAM,CAAE0J,OAAO,GAAG,CAAC,GAAI,EAAE;IAAE,CAAC,EACvF;MAAEzL,MAAM,EAAE,cAAc;MAAEC,EAAE,EAAEsL,KAAK;MAAErL,IAAI,EAAE,IAAI;MAAEC,SAAS,EAAE4B,MAAM,CAAC0J,OAAO,GAAG,CAAC;IAAE,CAAC,EACjF;MAAEzL,MAAM,EAAE,cAAc;MAAEC,EAAE,EAAEsL,KAAK;MAAErL,IAAI,EAAE,IAAI;MAAEC,SAAS,EAAE4B,MAAM,CAAC0J,OAAO,GAAG,CAAC;IAAE,CAAC,CACpF;IACD9L,oBAAoB,CAACiM,eAAe,EAAE,IAAI,CAAC/L,QAAQ,CAAC;EACxD;EACAoK,kBAAkB,GAAG;IACjB,MAAMQ,WAAW,GAAG,IAAI,CAACX,QAAQ,CAACrH,aAAa;IAC/C,IAAI,IAAI,CAACtB,aAAa,EAAE;MACpB;MACA;MACA;MACA;MACA,IAAI,CAAC6I,iBAAiB,CAAC,IAAI,CAACxM,KAAK,GAAG,IAAI,CAACC,GAAG,CAAC;MAC7C,MAAMoO,MAAM,GAAG,IAAI,CAACvK,GAAG,GAAG;QAAEmF,IAAI,EAAE,GAAG;QAAEC,EAAE,EAAE;MAAE,CAAC,GAAG;QAAED,IAAI,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAI,CAAC;MACrE,IAAIoF,KAAK;MACT,IAAI,CAAC,IAAI,CAACzB,aAAa,EAAE;QACrByB,KAAK,GAAGC,gBAAgB,CAACtB,WAAW,CAAC,CAACuB,MAAM;MAChD;MACA,MAAMC,mBAAmB,GAAG,CACxB;QAAEjM,MAAM,EAAE,UAAU;QAAEC,EAAE,EAAEwK,WAAW;QAAEvK,IAAI,EAAE,kBAAkB;QAAEC,SAAS,EAAE;MAAS,CAAC,EACtF;QAAEH,MAAM,EAAE,UAAU;QAAEC,EAAE,EAAEwK,WAAW;QAAEvK,IAAI,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO,CAAC,EACxE;QAAEH,MAAM,EAAE,UAAU;QAAEC,EAAE,EAAEwK,WAAW;QAAEvK,IAAI,EAAE,gBAAgB;QAAEC,SAAS,EAAE;MAAQ,CAAC,EACnF;QAAEH,MAAM,EAAE,UAAU;QAAEC,EAAE,EAAEwK,WAAW;QAAEvK,IAAI,EAAE,QAAQ;QAAEC,SAAS,EAAE2L,KAAK,GAAGA,KAAK,GAAG,IAAI,CAACI;MAAa,CAAC,CACxG;MACDvM,oBAAoB,CAACsM,mBAAmB,EAAE,IAAI,CAACpM,QAAQ,CAAC;MACxD,IAAI,CAACA,QAAQ,CAACsM,WAAW,CAAC1B,WAAW,EAAE,4BAA4B,CAAC;MACpEA,WAAW,CAAC2B,SAAS,GAAI,mEAAkEP,MAAM,CAACpF,IAAK,aAAYoF,MAAM,CAACnF,EAAG,4CAA2C;IAC5K,CAAC,MACI;MACD,IAAI,CAAC7G,QAAQ,CAACwM,QAAQ,CAAC5B,WAAW,EAAE,4BAA4B,CAAC;MACjE,MAAM6B,yBAAyB,GAAG,CAC9B;QAAEtM,MAAM,EAAE,aAAa;QAAEC,EAAE,EAAEwK,WAAW;QAAEvK,IAAI,EAAE;MAAmB,CAAC,EACpE;QAAEF,MAAM,EAAE,aAAa;QAAEC,EAAE,EAAEwK,WAAW;QAAEvK,IAAI,EAAE;MAAO,CAAC,EACxD;QAAEF,MAAM,EAAE,aAAa;QAAEC,EAAE,EAAEwK,WAAW;QAAEvK,IAAI,EAAE;MAAiB,CAAC,CACrE;MACDE,uBAAuB,CAACkM,yBAAyB,EAAE,IAAI,CAACzM,QAAQ,CAAC;MACjE4K,WAAW,CAAC2B,SAAS,GAAG,EAAE;MAC1B,IAAI,IAAI,CAACjN,SAAS,EAAE;QAChB,IAAI,CAAC4K,oBAAoB,EAAE;MAC/B;IACJ;EACJ;EACAK,oBAAoB,CAAC5M,KAAK,EAAE;IACxB,IAAI,CAAC,IAAI,CAAC+O,cAAc,EAAE;MACtB;IACJ;IACA,IAAI,CAACvD,qBAAqB,CAACxL,KAAK,GAAGA,KAAK;IACxC,IAAI,CAACwL,qBAAqB,CAAC8C,KAAK,GAAG,IAAI,CAACI,YAAY;IACpD,IAAI,CAACpD,GAAG,CAAC0D,aAAa,EAAE;IACxB,IAAI,CAACC,aAAa,EAAE;EACxB;EACAA,aAAa,GAAG;IACZ,MAAMC,OAAO,GAAG,IAAI,CAACC,YAAY,CAAClK,aAAa;IAC/C,MAAMnC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACmC,aAAa;IAC1C,MAAM+I,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC/I,aAAa;IAC1C,IAAIgJ,OAAO;IACX,IAAImB,QAAQ;IACZ,IAAI,CAACvM,cAAc,CAACC,OAAO,CAAC,EAAE;MAC1B,MAAMqL,WAAW,GAAGH,OAAO,CAACE,qBAAqB,EAAE;MACnDD,OAAO,GAAGE,WAAW,CAACnL,KAAK;MAC3BoM,QAAQ,GAAGjB,WAAW,CAAClL,MAAM;IACjC,CAAC,MACI;MACD,MAAMoM,WAAW,GAAGvM,OAAO,CAACoL,qBAAqB,EAAE;MACnDD,OAAO,GAAGoB,WAAW,CAACrM,KAAK;MAC3BoM,QAAQ,GAAGC,WAAW,CAACpM,MAAM;IACjC;IACA,MAAMqM,IAAI,GAAIrB,OAAO,GAAG,CAAC,GAAKiB,OAAO,CAACK,WAAW,GAAG,CAAE;IACtD,MAAMC,GAAG,GAAIJ,QAAQ,GAAG,CAAC,GAAKF,OAAO,CAACO,YAAY,GAAG,CAAE;IACvD,MAAMC,iBAAiB,GAAG,CACtB;MAAElN,MAAM,EAAE,UAAU;MAAEC,EAAE,EAAEyM,OAAO;MAAExM,IAAI,EAAE,MAAM;MAAEC,SAAS,EAAG,GAAE2M,IAAK;IAAI,CAAC,EACzE;MAAE9M,MAAM,EAAE,UAAU;MAAEC,EAAE,EAAEyM,OAAO;MAAExM,IAAI,EAAE,KAAK;MAAEC,SAAS,EAAG,GAAE6M,GAAI;IAAI,CAAC,CAC1E;IACDrN,oBAAoB,CAACuN,iBAAiB,EAAE,IAAI,CAACrN,QAAQ,CAAC;EAC1D;EACA,IAAIqM,YAAY,GAAG;IACf,MAAMA,YAAY,GAAG,IAAI,CAACpC,QAAQ,CAACrH,aAAa,CAAClC,KAAK,CAACyL,MAAM;IAC7D,OAAOE,YAAY;EACvB;EACA5B,mBAAmB,CAAC9M,KAAK,EAAE;IACvB,MAAMiN,WAAW,GAAG,IAAI,CAACX,QAAQ,CAACrH,aAAa;IAC/C,IAAI,OAAO,IAAI,CAAC4H,aAAa,KAAK,QAAQ,EAAE;MACxC,IAAI,CAACxK,QAAQ,CAACiH,QAAQ,CAAC2D,WAAW,EAAE,QAAQ,EAAE,IAAI,CAACJ,aAAa,CAAC;IACrE,CAAC,MACI;MACD,KAAK,IAAI/B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC+B,aAAa,CAAC3L,MAAM,EAAE4J,CAAC,EAAE,EAAE;QAChD,MAAM7B,IAAI,GAAG,IAAI,CAAC4D,aAAa,CAAC/B,CAAC,CAAC,CAAC7B,IAAI;QACvC,MAAMC,EAAE,GAAG,IAAI,CAAC2D,aAAa,CAAC/B,CAAC,CAAC,CAAC5B,EAAE;QACnC,IAAIlJ,KAAK,IAAIiJ,IAAI,IAAIjJ,KAAK,IAAIkJ,EAAE,IAAK,CAACD,IAAI,IAAIjJ,KAAK,IAAIkJ,EAAG,EAAE;UACxD,IAAI,CAAC7G,QAAQ,CAACiH,QAAQ,CAAC2D,WAAW,EAAE,QAAQ,EAAE,IAAI,CAACJ,aAAa,CAAC/B,CAAC,CAAC,CAACwD,KAAK,CAAC;UAC1E;QACJ;QACA,IAAI,CAACpF,EAAE,IAAIlJ,KAAK,IAAIiJ,IAAI,EAAE;UACtB,IAAI,CAAC5G,QAAQ,CAACiH,QAAQ,CAAC2D,WAAW,EAAE,QAAQ,EAAE,IAAI,CAACJ,aAAa,CAAC/B,CAAC,CAAC,CAACwD,KAAK,CAAC;QAC9E;MACJ;IACJ;EACJ;EACApC,YAAY,CAAC3K,IAAI,EAAE;IACf,IAAIvD,SAAS,EAAE,EAAE;MACb,QAAQuD,IAAI;QACR,KAAK,aAAa;UACd,MAAM,IAAIZ,KAAK,CAAC,kEAAkE,CAAC;QACvF,KAAK,aAAa;UACd,MAAM,IAAIA,KAAK,CAAC,yEAAyE,CAAC;QAC9F,KAAK,WAAW;UACZ,MAAM,IAAIA,KAAK,CAAC,mDAAmD,CAAC;QACxE;MAAQ;IAEhB;EACJ;EACAgP,YAAY,GAAG;IACX,IAAI,CAAC7L,GAAG,GAAG,IAAI,CAACT,YAAY,CAACS,GAAG;IAChC,IAAI,IAAI,CAAChB,OAAO,EAAE;MACd,IAAI,CAACT,QAAQ,CAAC8C,YAAY,CAAC,IAAI,CAACrC,OAAO,CAACmC,aAAa,EAAE,KAAK,EAAE,IAAI,CAACnB,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;IAC3F;IACA,IAAI,IAAI,CAACqL,YAAY,EAAE;MACnB,IAAI,CAAC9M,QAAQ,CAAC8C,YAAY,CAAC,IAAI,CAACgK,YAAY,CAAClK,aAAa,EAAE,KAAK,EAAE,IAAI,CAACnB,GAAG,GAAG,KAAK,GAAG,KAAK,CAAC;IAChG;EACJ;EACAkI,SAAS,GAAG;IACR,IAAI,IAAI,CAAClJ,OAAO,IAAI,IAAI,CAACgB,GAAG,KAAK,IAAI,CAACT,YAAY,CAACS,GAAG,EAAE;MACpD,IAAI,CAAC6L,YAAY,EAAE;IACvB;EACJ;AACJ;AACAtE,4BAA4B,CAAC5F,IAAI;EAAA,iBAAyF4F,4BAA4B,EA/6BnDtN,EAAE,mBA+6BmEA,EAAE,CAAC4H,SAAS,GA/6BjF5H,EAAE,mBA+6B4FA,EAAE,CAAC6R,iBAAiB,GA/6BlH7R,EAAE,mBA+6B6HJ,EAAE,CAACE,mBAAmB,GA/6BrJE,EAAE,mBA+6BgKA,EAAE,CAAC2H,UAAU,GA/6B/K3H,EAAE,mBA+6B0LA,EAAE,CAAC0L,MAAM;AAAA,CAA4C;AACpV4B,4BAA4B,CAACzF,IAAI,kBAh7BkE7H,EAAE;EAAA,MAg7BSsN,4BAA4B;EAAA;EAAA;IAAA;MAh7BvCtN,EAAE,0BAs7B1BkN,0CAA0C;IAAA;IAAA;MAAA;MAt7BlBlN,EAAE,qBAAFA,EAAE;IAAA;EAAA;EAAA;IAAA;MAAFA,EAAE;MAAFA,EAAE;MAAFA,EAAE;MAAFA,EAAE;IAAA;IAAA;MAAA;MAAFA,EAAE,qBAAFA,EAAE;MAAFA,EAAE,qBAAFA,EAAE;MAAFA,EAAE,qBAAFA,EAAE;MAAFA,EAAE,qBAAFA,EAAE;IAAA;EAAA;EAAA;EAAA;IAAA;MAAFA,EAAE;MAAFA,EAAE;IAAA;EAAA;EAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA,WAAFA,EAAE,oBAg7BoiB,CACjoBF,mBAAmB,EACnB;IACIuI,OAAO,EAAEtI,WAAW;IACpB4L,QAAQ,EAAE;EACd,CAAC,CACJ,GAt7B8F3L,EAAE;EAAA;EAAA;EAAA;IAAA;IAAA;MAAA;AACrG;AACA;AACA;MAHqG;MAAA;IAAA;MAAA,UAy7BvE,4IAAoB;IAAA;IAAA;EAAA;EAAA;IAAA;MAz7BiDA,EAAE,yBA27B9E;MA37B4EA,EAAE,+BA47BxC;MA57BsCA,EAAE,iBA87B3E;MA97ByEA,EAAE,kCA87B3E;MA97ByEA,EAAE,6BAg8BG;MAh8BLA,EAAE,eAk8B7E;MAl8B2EA,EAAE,6EAs8B/E;MAt8B6EA,EAAE,eAu8BnF;MAv8BiFA,EAAE,kBAy8BlD;MAz8BgDA,EAAE,6CAy8BlD;MAz8BgDA,EAAE;QAAA,OAy8B9D,cAAU;MAAA,EAAC;MAz8BiDA,EAAE,eAy8B5B;IAAA;IAAA;MAz8B0BA,EAAE,cAo8BtB;MAp8BoBA,EAAE,uCAo8BtB;IAAA;EAAA;EAAA,eAMdkB,EAAE,CAAC2K,IAAI,EAA6F3K,EAAE,CAAC4Q,gBAAgB,EAAoJjR,EAAE,CAACkR,qBAAqB,EAA4G5J,qCAAqC;EAAA;AAAA,EAAuD;AAC5iB;EAAA,mDA38BmGnI,EAAE,mBA28BTsN,4BAA4B,EAAc,CAAC;IAC3H9J,IAAI,EAAEtD,SAAS;IACf4H,IAAI,EAAE,CAAC;MACCiE,QAAQ,EAAE,0BAA0B;MACpCvD,QAAQ,EAAE,2BAA2B;MACrCT,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;MAAEQ,SAAS,EAAE,CACMzI,mBAAmB,EACnB;QACIuI,OAAO,EAAEtI,WAAW;QACpB4L,QAAQ,EAAE;MACd,CAAC;IAET,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEnI,IAAI,EAAExD,EAAE,CAAC4H;IAAU,CAAC,EAAE;MAAEpE,IAAI,EAAExD,EAAE,CAAC6R;IAAkB,CAAC,EAAE;MAAErO,IAAI,EAAE5D,EAAE,CAACE;IAAoB,CAAC,EAAE;MAAE0D,IAAI,EAAExD,EAAE,CAAC2H;IAAW,CAAC,EAAE;MAAEnE,IAAI,EAAExD,EAAE,CAAC0L;IAAO,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEnG,WAAW,EAAE,CAAC;MAC9M/B,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,8BAA8B;IACzC,CAAC,CAAC;IAAEvB,gBAAgB,EAAE,CAAC;MACnB/C,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAErB,gBAAgB,EAAE,CAAC;MACnBjD,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAEpB,kBAAkB,EAAE,CAAC;MACrBlD,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,oBAAoB;IAC/B,CAAC,CAAC;IAAEtC,aAAa,EAAE,CAAC;MAChBhC,IAAI,EAAErD,WAAW;MACjB2H,IAAI,EAAE,CAAC,WAAW;IACtB,CAAC,CAAC;IAAE7F,KAAK,EAAE,CAAC;MACRuB,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE+B,GAAG,EAAE,CAAC;MACNqB,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE8B,GAAG,EAAE,CAAC;MACNsB,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEwD,SAAS,EAAE,CAAC;MACZJ,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEoN,OAAO,EAAE,CAAC;MACVhK,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEwF,aAAa,EAAE,CAAC;MAChBpC,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAE0O,aAAa,EAAE,CAAC;MAChBtL,IAAI,EAAEpD;IACV,CAAC,CAAC;IAAEuI,YAAY,EAAE,CAAC;MACfnF,IAAI,EAAEhD;IACV,CAAC,CAAC;IAAE+N,QAAQ,EAAE,CAAC;MACX/K,IAAI,EAAE/C,SAAS;MACfqH,IAAI,EAAE,CAAC,UAAU;IACrB,CAAC,CAAC;IAAEkI,KAAK,EAAE,CAAC;MACRxM,IAAI,EAAE/C,SAAS;MACfqH,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEsJ,YAAY,EAAE,CAAC;MACf5N,IAAI,EAAE/C,SAAS;MACfqH,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEmI,OAAO,EAAE,CAAC;MACVzM,IAAI,EAAE/C,SAAS;MACfqH,IAAI,EAAE,CAAC,SAAS;IACpB,CAAC,CAAC;IAAEkJ,cAAc,EAAE,CAAC;MACjBxN,IAAI,EAAE9C,YAAY;MAClBoH,IAAI,EAAE,CAACoF,0CAA0C;IACrD,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA,MAAM8E,kCAAkC,SAAShK,mBAAmB,CAAC;EACjE5C,WAAW,CAACgD,OAAO,EAAE;IACjB,KAAK,EAAE;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EACA,IAAI6J,QAAQ,GAAG;IACX,OAAO,IAAI;EACf;AACJ;AACAD,kCAAkC,CAACtK,IAAI;EAAA,iBAAyFsK,kCAAkC,EAziC/DhS,EAAE,mBAyiC+EJ,EAAE,CAACE,mBAAmB;AAAA,CAA4C;AACtPkS,kCAAkC,CAACnK,IAAI,kBA1iC4D7H,EAAE;EAAA,MA0iCegS,kCAAkC;EAAA;EAAA,WA1iCnDhS,EAAE,oBA0iCsG,CACnM;IACIqI,OAAO,EAAEL,mBAAmB;IAC5BM,WAAW,EAAEhI,UAAU,CAAC,MAAM0R,kCAAkC;EACpE,CAAC,CACJ,GA/iC8FhS,EAAE;EAAA;EAAA;EAAA;EAAA;AAAA,EA+iC1B;AAC3E;EAAA,mDAhjCmGA,EAAE,mBAgjCTgS,kCAAkC,EAAc,CAAC;IACjIxO,IAAI,EAAEtD,SAAS;IACf4H,IAAI,EAAE,CAAC;MACCS,SAAS,EAAE,CACP;QACIF,OAAO,EAAEL,mBAAmB;QAC5BM,WAAW,EAAEhI,UAAU,CAAC,MAAM0R,kCAAkC;MACpE,CAAC,CACJ;MACDxJ,QAAQ,EAAE,4BAA4B;MACtCT,QAAQ,EAAG;IACf,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEvE,IAAI,EAAE5D,EAAE,CAACE;IAAoB,CAAC,CAAC;EAAE,CAAC;AAAA;AAEtF,MAAMoS,oBAAoB,GAAG,CACzBzJ,oBAAoB,EACpB4D,yBAAyB,EACzBiB,4BAA4B,EAC5BJ,0CAA0C,EAC1C/E,qCAAqC,EACrC6J,kCAAkC,CACrC;AACD,MAAMG,OAAO,GAAG,CAAChR,YAAY,EAAEF,kBAAkB,CAAC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMmR,iBAAiB,CAAC;AAExBA,iBAAiB,CAAC1K,IAAI;EAAA,iBAAyF0K,iBAAiB;AAAA,CAAkD;AAClLA,iBAAiB,CAACC,IAAI,kBAzmC6ErS,EAAE;EAAA,MAymCWoS;AAAiB,EAUnF;AAC9CA,iBAAiB,CAACE,IAAI,kBApnC6EtS,EAAE;EAAA,UAonCwCmS,OAAO;AAAA,EAAI;AACxJ;EAAA,mDArnCmGnS,EAAE,mBAqnCToS,iBAAiB,EAAc,CAAC;IAChH5O,IAAI,EAAE7C,QAAQ;IACdmH,IAAI,EAAE,CAAC;MACCyK,YAAY,EAAEL,oBAAoB;MAClCM,OAAO,EAAEN,oBAAoB;MAC7BO,OAAO,EAAEN;IACb,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAAS9F,yBAAyB,EAAEiB,4BAA4B,EAAEJ,0CAA0C,EAAE/E,qCAAqC,EAAEM,oBAAoB,EAAEuJ,kCAAkC,EAAEI,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}