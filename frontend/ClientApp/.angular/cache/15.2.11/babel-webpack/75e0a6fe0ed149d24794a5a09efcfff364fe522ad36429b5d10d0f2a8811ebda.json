{"ast":null,"code":"import point from './align-point';\nconst align = options => {\n  const {\n    anchorRect,\n    anchorAlign,\n    elementRect,\n    elementAlign,\n    margin = {}\n  } = options;\n  const anchorHorizontal = anchorAlign.horizontal;\n  const anchorVertical = anchorAlign.vertical;\n  const elementHorizontal = elementAlign.horizontal;\n  const elementVertical = elementAlign.vertical;\n  let horizontalMargin = margin.horizontal || 0;\n  let verticalMargin = margin.vertical || 0;\n  let top = anchorRect.top;\n  let left = anchorRect.left;\n  if (anchorVertical === point.bottom) {\n    top += anchorRect.height;\n  }\n  if (anchorVertical === point.center || anchorVertical === point.middle) {\n    top += Math.round(anchorRect.height / 2);\n  }\n  if (elementVertical === point.bottom) {\n    top -= elementRect.height;\n    verticalMargin *= -1;\n  }\n  if (elementVertical === point.center || elementVertical === point.middle) {\n    top -= Math.round(elementRect.height / 2);\n    verticalMargin *= -1;\n  }\n  if (anchorHorizontal === point.right) {\n    left += anchorRect.width;\n  }\n  if (anchorHorizontal === point.center || anchorHorizontal === point.middle) {\n    left += Math.round(anchorRect.width / 2);\n  }\n  if (elementHorizontal === point.right) {\n    left -= elementRect.width;\n    horizontalMargin *= -1;\n  }\n  if (elementHorizontal === point.center || elementHorizontal === point.middle) {\n    left -= Math.round(elementRect.width / 2);\n    horizontalMargin *= -1;\n  }\n  return {\n    top: top + verticalMargin,\n    left: left + horizontalMargin\n  };\n};\nexport default align;","map":{"version":3,"names":["point","align","options","anchorRect","anchorAlign","elementRect","elementAlign","margin","anchorHorizontal","horizontal","anchorVertical","vertical","elementHorizontal","elementVertical","horizontalMargin","verticalMargin","top","left","bottom","height","center","middle","Math","round","right","width"],"sources":["/Users/teqnoid/Projects/teachingchannel/node_modules/@progress/kendo-popup-common/dist/es2015/align.js"],"sourcesContent":["import point from './align-point';\n\nconst align = (options) => {\n    const { anchorRect, anchorAlign, elementRect, elementAlign, margin = {} } = options;\n    const anchorHorizontal = anchorAlign.horizontal;\n    const anchorVertical = anchorAlign.vertical;\n    const elementHorizontal = elementAlign.horizontal;\n    const elementVertical = elementAlign.vertical;\n\n    let horizontalMargin = margin.horizontal || 0;\n    let verticalMargin = margin.vertical || 0;\n\n    let top = anchorRect.top;\n    let left = anchorRect.left;\n\n    if (anchorVertical === point.bottom) {\n        top += anchorRect.height;\n    }\n\n    if (anchorVertical === point.center || anchorVertical === point.middle) {\n        top += Math.round(anchorRect.height / 2);\n    }\n\n    if (elementVertical === point.bottom) {\n        top -= elementRect.height;\n        verticalMargin *= -1;\n    }\n\n    if (elementVertical === point.center || elementVertical === point.middle) {\n        top -= Math.round(elementRect.height / 2);\n        verticalMargin *= -1;\n    }\n\n    if (anchorHorizontal === point.right) {\n        left += anchorRect.width;\n    }\n\n    if (anchorHorizontal === point.center || anchorHorizontal === point.middle) {\n        left += Math.round(anchorRect.width / 2);\n    }\n\n    if (elementHorizontal === point.right) {\n        left -= elementRect.width;\n        horizontalMargin *= -1;\n    }\n\n    if (elementHorizontal === point.center || elementHorizontal === point.middle) {\n        left -= Math.round(elementRect.width / 2);\n        horizontalMargin *= -1;\n    }\n\n    return {\n        top: top + verticalMargin,\n        left: left + horizontalMargin\n    };\n};\n\nexport default align;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,eAAe;AAEjC,MAAMC,KAAK,GAAIC,OAAO,IAAK;EACvB,MAAM;IAAEC,UAAU;IAAEC,WAAW;IAAEC,WAAW;IAAEC,YAAY;IAAEC,MAAM,GAAG,CAAC;EAAE,CAAC,GAAGL,OAAO;EACnF,MAAMM,gBAAgB,GAAGJ,WAAW,CAACK,UAAU;EAC/C,MAAMC,cAAc,GAAGN,WAAW,CAACO,QAAQ;EAC3C,MAAMC,iBAAiB,GAAGN,YAAY,CAACG,UAAU;EACjD,MAAMI,eAAe,GAAGP,YAAY,CAACK,QAAQ;EAE7C,IAAIG,gBAAgB,GAAGP,MAAM,CAACE,UAAU,IAAI,CAAC;EAC7C,IAAIM,cAAc,GAAGR,MAAM,CAACI,QAAQ,IAAI,CAAC;EAEzC,IAAIK,GAAG,GAAGb,UAAU,CAACa,GAAG;EACxB,IAAIC,IAAI,GAAGd,UAAU,CAACc,IAAI;EAE1B,IAAIP,cAAc,KAAKV,KAAK,CAACkB,MAAM,EAAE;IACjCF,GAAG,IAAIb,UAAU,CAACgB,MAAM;EAC5B;EAEA,IAAIT,cAAc,KAAKV,KAAK,CAACoB,MAAM,IAAIV,cAAc,KAAKV,KAAK,CAACqB,MAAM,EAAE;IACpEL,GAAG,IAAIM,IAAI,CAACC,KAAK,CAACpB,UAAU,CAACgB,MAAM,GAAG,CAAC,CAAC;EAC5C;EAEA,IAAIN,eAAe,KAAKb,KAAK,CAACkB,MAAM,EAAE;IAClCF,GAAG,IAAIX,WAAW,CAACc,MAAM;IACzBJ,cAAc,IAAI,CAAC,CAAC;EACxB;EAEA,IAAIF,eAAe,KAAKb,KAAK,CAACoB,MAAM,IAAIP,eAAe,KAAKb,KAAK,CAACqB,MAAM,EAAE;IACtEL,GAAG,IAAIM,IAAI,CAACC,KAAK,CAAClB,WAAW,CAACc,MAAM,GAAG,CAAC,CAAC;IACzCJ,cAAc,IAAI,CAAC,CAAC;EACxB;EAEA,IAAIP,gBAAgB,KAAKR,KAAK,CAACwB,KAAK,EAAE;IAClCP,IAAI,IAAId,UAAU,CAACsB,KAAK;EAC5B;EAEA,IAAIjB,gBAAgB,KAAKR,KAAK,CAACoB,MAAM,IAAIZ,gBAAgB,KAAKR,KAAK,CAACqB,MAAM,EAAE;IACxEJ,IAAI,IAAIK,IAAI,CAACC,KAAK,CAACpB,UAAU,CAACsB,KAAK,GAAG,CAAC,CAAC;EAC5C;EAEA,IAAIb,iBAAiB,KAAKZ,KAAK,CAACwB,KAAK,EAAE;IACnCP,IAAI,IAAIZ,WAAW,CAACoB,KAAK;IACzBX,gBAAgB,IAAI,CAAC,CAAC;EAC1B;EAEA,IAAIF,iBAAiB,KAAKZ,KAAK,CAACoB,MAAM,IAAIR,iBAAiB,KAAKZ,KAAK,CAACqB,MAAM,EAAE;IAC1EJ,IAAI,IAAIK,IAAI,CAACC,KAAK,CAAClB,WAAW,CAACoB,KAAK,GAAG,CAAC,CAAC;IACzCX,gBAAgB,IAAI,CAAC,CAAC;EAC1B;EAEA,OAAO;IACHE,GAAG,EAAEA,GAAG,GAAGD,cAAc;IACzBE,IAAI,EAAEA,IAAI,GAAGH;EACjB,CAAC;AACL,CAAC;AAED,eAAeb,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}