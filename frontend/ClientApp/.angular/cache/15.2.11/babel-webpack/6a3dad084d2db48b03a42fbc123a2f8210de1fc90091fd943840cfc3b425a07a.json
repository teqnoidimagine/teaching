{"ast":null,"code":"/**-----------------------------------------------------------------------------------------\n* Copyright © 2024 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Injectable, Directive, InjectionToken, Inject, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip, map, tap } from 'rxjs/operators';\n\n/**\n * A base class for a service that returns localized messages.\n *\n * For more information, refer to the section on [using the message service]({% slug messages_l10n %}#toc-using-the-message-service).\n */\nclass MessageService {\n  /**\n   * @hidden\n   */\n  constructor() {\n    /**\n     * @hidden\n     */\n    this.changes = new BehaviorSubject({\n      rtl: undefined\n    });\n    /* noop */\n  }\n  /**\n   * Notifies the components that the messages were changed.\n   *\n   * @param rtl - (Optional) A new value for the [text direction token]({% slug api_l10n_rtl %}).\n   */\n  notify(rtl) {\n    this.changes.next({\n      rtl\n    });\n  }\n  /**\n   * Returns a localized message for the supplied key.\n   *\n   * @param _key - The message key. For example, `\"kendo.grid.noRecords\"`.\n   * @return - The localized message for this key or `undefined` if not found.\n   */\n  get(_key) {\n    return undefined;\n  }\n}\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)();\n};\nMessageService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MessageService,\n  factory: MessageService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MessageService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Base class that acts as a component messages container.\n *\n * For internal use.\n * @hidden\n */\nclass ComponentMessages {\n  get override() {\n    return false;\n  }\n  ngOnChanges(changes) {\n    this.register(changes);\n    if (Object.keys(changes).some(field => !changes[field].isFirstChange())) {\n      this.service.notifyChanges();\n    }\n  }\n  ngOnInit() {\n    this.subscription = this.service.changes.pipe(skip(1)).subscribe(() => this.register(this));\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  register(changes) {\n    const keys = Object.keys(changes);\n    keys.forEach(key => this.service.register(key, this[key], this.override));\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\nComponentMessages.ɵfac = function ComponentMessages_Factory(t) {\n  return new (t || ComponentMessages)();\n};\nComponentMessages.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ComponentMessages,\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ComponentMessages, [{\n    type: Directive,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * A token that specifies the text direction of Kendo UI for Angular components.\n *\n * {% embed_file rtl/app.module.ts preview %}\n * {% embed_file rtl/app.component.ts %}\n * {% embed_file shared/main.ts hidden %}\n *\n */\nconst RTL = new InjectionToken(\"Kendo UI Right-to-Left token\");\n\n/**\n * Localization prefix for the component messages.\n *\n * For internal use.\n * @hidden\n */\nconst L10N_PREFIX = new InjectionToken('Localization key prefix');\n/**\n * Component localization service.\n *\n * For internal use.\n * @hidden\n */\nclass LocalizationService {\n  constructor(prefix, messageService, _rtl) {\n    this.prefix = prefix;\n    this.messageService = messageService;\n    this._rtl = _rtl;\n    this.changes = new BehaviorSubject({\n      rtl: this._rtl\n    });\n    this.dictionary = {};\n    if (messageService) {\n      this.subscription = messageService.changes.pipe(map(({\n        rtl\n      }) => rtl !== undefined ? rtl : this._rtl), tap(rtl => this._rtl = rtl)).subscribe(rtl => {\n        this.dictionary = {};\n        this.changes.next({\n          rtl\n        });\n      });\n    }\n  }\n  get rtl() {\n    return this._rtl;\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n  get(shortKey) {\n    const key = this.key(shortKey);\n    return this.dictionary[key];\n  }\n  register(shortKey, value, override = false) {\n    const key = this.key(shortKey);\n    let message = value;\n    if (!override) {\n      if (Object.hasOwnProperty.call(this.dictionary, key)) {\n        return;\n      }\n      message = this.defaultValue(key, value);\n    }\n    this.dictionary[key] = message;\n  }\n  notifyChanges() {\n    this.changes.next({\n      rtl: this.rtl\n    });\n  }\n  key(shortKey) {\n    return this.prefix + '.' + shortKey;\n  }\n  defaultValue(key, value) {\n    if (!this.messageService) {\n      return value;\n    }\n    const alt = this.messageService.get(key);\n    return alt === undefined ? value : alt;\n  }\n}\nLocalizationService.ɵfac = function LocalizationService_Factory(t) {\n  return new (t || LocalizationService)(i0.ɵɵinject(L10N_PREFIX), i0.ɵɵinject(MessageService, 8), i0.ɵɵinject(RTL, 8));\n};\nLocalizationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LocalizationService,\n  factory: LocalizationService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LocalizationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [L10N_PREFIX]\n      }]\n    }, {\n      type: MessageService,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ComponentMessages, L10N_PREFIX, LocalizationService, MessageService, RTL };","map":{"version":3,"names":["i0","Injectable","Directive","InjectionToken","Inject","Optional","BehaviorSubject","skip","map","tap","MessageService","constructor","changes","rtl","undefined","notify","next","get","_key","ɵfac","ɵprov","type","ComponentMessages","override","ngOnChanges","register","Object","keys","some","field","isFirstChange","service","notifyChanges","ngOnInit","subscription","pipe","subscribe","forEach","key","ngOnDestroy","unsubscribe","ɵdir","args","RTL","L10N_PREFIX","LocalizationService","prefix","messageService","_rtl","dictionary","shortKey","value","message","hasOwnProperty","call","defaultValue","alt","decorators"],"sources":["/Users/teqnoid/Projects/teachingchannel/node_modules/@progress/kendo-angular-l10n/fesm2020/progress-kendo-angular-l10n.mjs"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2024 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport * as i0 from '@angular/core';\nimport { Injectable, Directive, InjectionToken, Inject, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip, map, tap } from 'rxjs/operators';\n\n/**\n * A base class for a service that returns localized messages.\n *\n * For more information, refer to the section on [using the message service]({% slug messages_l10n %}#toc-using-the-message-service).\n */\nclass MessageService {\n    /**\n     * @hidden\n     */\n    constructor() {\n        /**\n         * @hidden\n         */\n        this.changes = new BehaviorSubject({ rtl: undefined });\n        /* noop */\n    }\n    /**\n     * Notifies the components that the messages were changed.\n     *\n     * @param rtl - (Optional) A new value for the [text direction token]({% slug api_l10n_rtl %}).\n     */\n    notify(rtl) {\n        this.changes.next({ rtl });\n    }\n    /**\n     * Returns a localized message for the supplied key.\n     *\n     * @param _key - The message key. For example, `\"kendo.grid.noRecords\"`.\n     * @return - The localized message for this key or `undefined` if not found.\n     */\n    get(_key) {\n        return undefined;\n    }\n}\nMessageService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: MessageService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMessageService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: MessageService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: MessageService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Base class that acts as a component messages container.\n *\n * For internal use.\n * @hidden\n */\nclass ComponentMessages {\n    get override() {\n        return false;\n    }\n    ngOnChanges(changes) {\n        this.register(changes);\n        if (Object.keys(changes).some(field => !changes[field].isFirstChange())) {\n            this.service.notifyChanges();\n        }\n    }\n    ngOnInit() {\n        this.subscription = this.service.changes.pipe(skip(1)).subscribe(() => this.register(this));\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    register(changes) {\n        const keys = Object.keys(changes);\n        keys.forEach(key => this.service.register(key, this[key], this.override));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nComponentMessages.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ComponentMessages, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nComponentMessages.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.10\", type: ComponentMessages, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: ComponentMessages, decorators: [{\n            type: Directive,\n            args: [{}]\n        }] });\n\n/**\n * A token that specifies the text direction of Kendo UI for Angular components.\n *\n * {% embed_file rtl/app.module.ts preview %}\n * {% embed_file rtl/app.component.ts %}\n * {% embed_file shared/main.ts hidden %}\n *\n */\nconst RTL = new InjectionToken(\"Kendo UI Right-to-Left token\");\n\n/**\n * Localization prefix for the component messages.\n *\n * For internal use.\n * @hidden\n */\nconst L10N_PREFIX = new InjectionToken('Localization key prefix');\n/**\n * Component localization service.\n *\n * For internal use.\n * @hidden\n */\nclass LocalizationService {\n    constructor(prefix, messageService, _rtl) {\n        this.prefix = prefix;\n        this.messageService = messageService;\n        this._rtl = _rtl;\n        this.changes = new BehaviorSubject({ rtl: this._rtl });\n        this.dictionary = {};\n        if (messageService) {\n            this.subscription = messageService.changes\n                .pipe(map(({ rtl }) => rtl !== undefined ? rtl : this._rtl), tap(rtl => this._rtl = rtl))\n                .subscribe(rtl => {\n                this.dictionary = {};\n                this.changes.next({ rtl });\n            });\n        }\n    }\n    get rtl() {\n        return this._rtl;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    get(shortKey) {\n        const key = this.key(shortKey);\n        return this.dictionary[key];\n    }\n    register(shortKey, value, override = false) {\n        const key = this.key(shortKey);\n        let message = value;\n        if (!override) {\n            if (Object.hasOwnProperty.call(this.dictionary, key)) {\n                return;\n            }\n            message = this.defaultValue(key, value);\n        }\n        this.dictionary[key] = message;\n    }\n    notifyChanges() {\n        this.changes.next({ rtl: this.rtl });\n    }\n    key(shortKey) {\n        return this.prefix + '.' + shortKey;\n    }\n    defaultValue(key, value) {\n        if (!this.messageService) {\n            return value;\n        }\n        const alt = this.messageService.get(key);\n        return (alt === undefined) ? value : alt;\n    }\n}\nLocalizationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: LocalizationService, deps: [{ token: L10N_PREFIX }, { token: MessageService, optional: true }, { token: RTL, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLocalizationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: LocalizationService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: LocalizationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [L10N_PREFIX]\n                }] }, { type: MessageService, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [RTL]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ComponentMessages, L10N_PREFIX, LocalizationService, MessageService, RTL };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}