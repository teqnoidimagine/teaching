{"ast":null,"code":"import defaultData from './default-data';\nimport isString from '../common/is-string';\nimport { errors } from '../errors';\nfunction availableLocaleInfo(fullName, suffixes) {\n  const parts = fullName.split(\"-\");\n  const language = parts[0];\n  const script = parts[1];\n  const territory = parts[2];\n  return cldr[fullName] || suffixes.indexOf(territory) !== -1 && cldr[language + \"-\" + territory] || suffixes.indexOf(script) !== -1 && cldr[language + \"-\" + script] || cldr[language];\n}\nfunction localeFullName(language, suffixes) {\n  const likelySubtags = cldr.supplemental.likelySubtags;\n  for (let idx = 0; idx < suffixes.length; idx++) {\n    let name = likelySubtags[language + \"-\" + suffixes[idx]];\n    if (name) {\n      return name;\n    }\n  }\n  if (likelySubtags[language]) {\n    return likelySubtags[language];\n  }\n}\nexport const cldr = defaultData;\nexport function getLocaleInfo(locale) {\n  let info;\n  if (isString(locale)) {\n    info = localeInfo(locale);\n  } else {\n    info = locale;\n  }\n  return info;\n}\nexport function localeInfo(locale) {\n  if (cldr[locale]) {\n    return cldr[locale];\n  }\n  const likelySubtags = cldr.supplemental.likelySubtags;\n  if (likelySubtags) {\n    const parts = locale.split(\"-\");\n    const language = parts[0];\n    const suffixes = parts.slice(1);\n    const fullName = localeFullName(language, suffixes);\n    const info = fullName ? availableLocaleInfo(fullName, suffixes) : null;\n    if (info) {\n      return info;\n    }\n  }\n  throw errors.NoLocale.error(locale);\n}","map":{"version":3,"names":["defaultData","isString","errors","availableLocaleInfo","fullName","suffixes","parts","split","language","script","territory","cldr","indexOf","localeFullName","likelySubtags","supplemental","idx","length","name","getLocaleInfo","locale","info","localeInfo","slice","NoLocale","error"],"sources":["/Users/teqnoid/Projects/teachingchannel/node_modules/@progress/kendo-intl/dist/es2015/cldr/info.js"],"sourcesContent":["import defaultData from './default-data';\nimport isString from '../common/is-string';\nimport { errors } from '../errors';\n\nfunction availableLocaleInfo(fullName, suffixes) {\n    const parts = fullName.split(\"-\");\n    const language = parts[0];\n    const script = parts[1];\n    const territory = parts[2];\n\n    return cldr[fullName] || (suffixes.indexOf(territory) !== -1 && cldr[language + \"-\" + territory]) || (suffixes.indexOf(script) !== -1 && cldr[language + \"-\" + script]) || cldr[language];\n}\n\nfunction localeFullName(language, suffixes) {\n    const likelySubtags = cldr.supplemental.likelySubtags;\n\n    for (let idx = 0; idx < suffixes.length; idx++) {\n        let name = likelySubtags[language + \"-\" + suffixes[idx ]];\n        if (name) {\n            return name;\n        }\n    }\n\n    if (likelySubtags[language]) {\n        return likelySubtags[language];\n    }\n}\n\nexport const cldr = defaultData;\n\nexport function getLocaleInfo(locale) {\n    let info;\n    if (isString(locale)) {\n        info = localeInfo(locale);\n    } else {\n        info = locale;\n    }\n    return info;\n}\n\nexport function localeInfo(locale) {\n    if (cldr[locale]) {\n        return cldr[locale];\n    }\n\n    const likelySubtags = cldr.supplemental.likelySubtags;\n    if (likelySubtags) {\n        const parts = locale.split(\"-\");\n        const language = parts[0];\n        const suffixes = parts.slice(1);\n        const fullName = localeFullName(language, suffixes);\n        const info = fullName ? availableLocaleInfo(fullName, suffixes) : null;\n        if (info) {\n            return info;\n        }\n    }\n\n    throw errors.NoLocale.error(locale);\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,MAAM,QAAQ,WAAW;AAElC,SAASC,mBAAmB,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC7C,MAAMC,KAAK,GAAGF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;EACjC,MAAMC,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;EACzB,MAAMG,MAAM,GAAGH,KAAK,CAAC,CAAC,CAAC;EACvB,MAAMI,SAAS,GAAGJ,KAAK,CAAC,CAAC,CAAC;EAE1B,OAAOK,IAAI,CAACP,QAAQ,CAAC,IAAKC,QAAQ,CAACO,OAAO,CAACF,SAAS,CAAC,KAAK,CAAC,CAAC,IAAIC,IAAI,CAACH,QAAQ,GAAG,GAAG,GAAGE,SAAS,CAAE,IAAKL,QAAQ,CAACO,OAAO,CAACH,MAAM,CAAC,KAAK,CAAC,CAAC,IAAIE,IAAI,CAACH,QAAQ,GAAG,GAAG,GAAGC,MAAM,CAAE,IAAIE,IAAI,CAACH,QAAQ,CAAC;AAC7L;AAEA,SAASK,cAAc,CAACL,QAAQ,EAAEH,QAAQ,EAAE;EACxC,MAAMS,aAAa,GAAGH,IAAI,CAACI,YAAY,CAACD,aAAa;EAErD,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGX,QAAQ,CAACY,MAAM,EAAED,GAAG,EAAE,EAAE;IAC5C,IAAIE,IAAI,GAAGJ,aAAa,CAACN,QAAQ,GAAG,GAAG,GAAGH,QAAQ,CAACW,GAAG,CAAE,CAAC;IACzD,IAAIE,IAAI,EAAE;MACN,OAAOA,IAAI;IACf;EACJ;EAEA,IAAIJ,aAAa,CAACN,QAAQ,CAAC,EAAE;IACzB,OAAOM,aAAa,CAACN,QAAQ,CAAC;EAClC;AACJ;AAEA,OAAO,MAAMG,IAAI,GAAGX,WAAW;AAE/B,OAAO,SAASmB,aAAa,CAACC,MAAM,EAAE;EAClC,IAAIC,IAAI;EACR,IAAIpB,QAAQ,CAACmB,MAAM,CAAC,EAAE;IAClBC,IAAI,GAAGC,UAAU,CAACF,MAAM,CAAC;EAC7B,CAAC,MAAM;IACHC,IAAI,GAAGD,MAAM;EACjB;EACA,OAAOC,IAAI;AACf;AAEA,OAAO,SAASC,UAAU,CAACF,MAAM,EAAE;EAC/B,IAAIT,IAAI,CAACS,MAAM,CAAC,EAAE;IACd,OAAOT,IAAI,CAACS,MAAM,CAAC;EACvB;EAEA,MAAMN,aAAa,GAAGH,IAAI,CAACI,YAAY,CAACD,aAAa;EACrD,IAAIA,aAAa,EAAE;IACf,MAAMR,KAAK,GAAGc,MAAM,CAACb,KAAK,CAAC,GAAG,CAAC;IAC/B,MAAMC,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;IACzB,MAAMD,QAAQ,GAAGC,KAAK,CAACiB,KAAK,CAAC,CAAC,CAAC;IAC/B,MAAMnB,QAAQ,GAAGS,cAAc,CAACL,QAAQ,EAAEH,QAAQ,CAAC;IACnD,MAAMgB,IAAI,GAAGjB,QAAQ,GAAGD,mBAAmB,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAG,IAAI;IACtE,IAAIgB,IAAI,EAAE;MACN,OAAOA,IAAI;IACf;EACJ;EAEA,MAAMnB,MAAM,CAACsB,QAAQ,CAACC,KAAK,CAACL,MAAM,CAAC;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}