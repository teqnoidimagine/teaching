{"ast":null,"code":"import errorDetails from './error-details';\nconst formatRegExp = /\\{(\\d+)}?\\}/g;\nclass IntlError {\n  constructor({\n    name,\n    message\n  }) {\n    if (!name || !message) {\n      throw new Error(\"{ name: string, message: string } object is required!\");\n    }\n    this.name = name;\n    this.message = message;\n  }\n  formatMessage(...values) {\n    const flattenValues = flatten(values);\n    const formattedMessage = this.message.replace(formatRegExp, function (match, index) {\n      return flattenValues[parseInt(index, 10)];\n    });\n    return `${this.name}: ${formattedMessage}`;\n  }\n  error(...values) {\n    return new Error(this.formatMessage(values));\n  }\n}\nconst flatten = function (arr) {\n  return arr.reduce((a, b) => a.concat(b), []);\n};\nconst toIntlErrors = function (errors) {\n  const predicate = function (prev, name) {\n    prev[name] = new IntlError({\n      name,\n      message: errors[name]\n    });\n    return prev;\n  };\n  return Object.keys(errors).reduce(predicate, {});\n};\nconst errors = toIntlErrors(errorDetails);\nexport { errors, IntlError, toIntlErrors };","map":{"version":3,"names":["errorDetails","formatRegExp","IntlError","constructor","name","message","Error","formatMessage","values","flattenValues","flatten","formattedMessage","replace","match","index","parseInt","error","arr","reduce","a","b","concat","toIntlErrors","errors","predicate","prev","Object","keys"],"sources":["/Users/teqnoid/Projects/teachingchannel/node_modules/@progress/kendo-intl/dist/es2015/errors.js"],"sourcesContent":["import errorDetails from './error-details';\n\nconst formatRegExp = /\\{(\\d+)}?\\}/g;\n\nclass IntlError {\n    constructor({ name, message }) {\n        if (!name || !message) {\n            throw new Error(\"{ name: string, message: string } object is required!\");\n        }\n\n        this.name = name;\n        this.message = message;\n    }\n\n    formatMessage(...values) {\n        const flattenValues = flatten(values);\n\n        const formattedMessage = this.message.replace(formatRegExp, function(match, index) {\n            return flattenValues[parseInt(index, 10)];\n        });\n\n        return `${this.name}: ${formattedMessage}`;\n    }\n\n    error(...values) {\n        return new Error(this.formatMessage(values));\n    }\n}\n\nconst flatten = function(arr) {\n    return arr.reduce((a, b) => a.concat(b), []);\n};\n\nconst toIntlErrors = function(errors) {\n    const predicate = function(prev, name) {\n        prev[name] = new IntlError({ name, message: errors[name] });\n        return prev;\n    };\n\n    return Object.keys(errors).reduce(predicate, {});\n};\n\nconst errors = toIntlErrors(errorDetails);\n\nexport {\n    errors,\n    IntlError,\n    toIntlErrors\n};\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,iBAAiB;AAE1C,MAAMC,YAAY,GAAG,cAAc;AAEnC,MAAMC,SAAS,CAAC;EACZC,WAAW,CAAC;IAAEC,IAAI;IAAEC;EAAQ,CAAC,EAAE;IAC3B,IAAI,CAACD,IAAI,IAAI,CAACC,OAAO,EAAE;MACnB,MAAM,IAAIC,KAAK,CAAC,uDAAuD,CAAC;IAC5E;IAEA,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAGA,OAAO;EAC1B;EAEAE,aAAa,CAAC,GAAGC,MAAM,EAAE;IACrB,MAAMC,aAAa,GAAGC,OAAO,CAACF,MAAM,CAAC;IAErC,MAAMG,gBAAgB,GAAG,IAAI,CAACN,OAAO,CAACO,OAAO,CAACX,YAAY,EAAE,UAASY,KAAK,EAAEC,KAAK,EAAE;MAC/E,OAAOL,aAAa,CAACM,QAAQ,CAACD,KAAK,EAAE,EAAE,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEF,OAAQ,GAAE,IAAI,CAACV,IAAK,KAAIO,gBAAiB,EAAC;EAC9C;EAEAK,KAAK,CAAC,GAAGR,MAAM,EAAE;IACb,OAAO,IAAIF,KAAK,CAAC,IAAI,CAACC,aAAa,CAACC,MAAM,CAAC,CAAC;EAChD;AACJ;AAEA,MAAME,OAAO,GAAG,UAASO,GAAG,EAAE;EAC1B,OAAOA,GAAG,CAACC,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,MAAM,CAACD,CAAC,CAAC,EAAE,EAAE,CAAC;AAChD,CAAC;AAED,MAAME,YAAY,GAAG,UAASC,MAAM,EAAE;EAClC,MAAMC,SAAS,GAAG,UAASC,IAAI,EAAErB,IAAI,EAAE;IACnCqB,IAAI,CAACrB,IAAI,CAAC,GAAG,IAAIF,SAAS,CAAC;MAAEE,IAAI;MAAEC,OAAO,EAAEkB,MAAM,CAACnB,IAAI;IAAE,CAAC,CAAC;IAC3D,OAAOqB,IAAI;EACf,CAAC;EAED,OAAOC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACL,MAAM,CAACM,SAAS,EAAE,CAAC,CAAC,CAAC;AACpD,CAAC;AAED,MAAMD,MAAM,GAAGD,YAAY,CAACtB,YAAY,CAAC;AAEzC,SACIuB,MAAM,EACNrB,SAAS,EACToB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}