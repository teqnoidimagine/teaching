{"ast":null,"code":"export function convertTimeZone(date, fromOffset, toOffset) {\n  const fromLocalOffset = date.getTimezoneOffset();\n  const offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n  const toLocalOffset = offsetDate.getTimezoneOffset();\n  return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n}\nexport function adjustDST(date, hours) {\n  if (!hours && date.getHours() === 23) {\n    date.setHours(date.getHours() + 2);\n  }\n}","map":{"version":3,"names":["convertTimeZone","date","fromOffset","toOffset","fromLocalOffset","getTimezoneOffset","offsetDate","Date","getTime","toLocalOffset","adjustDST","hours","getHours","setHours"],"sources":["/Users/teqnoid/Projects/teachingchannel/node_modules/@progress/kendo-intl/dist/es2015/dates/time-utils.js"],"sourcesContent":["export function convertTimeZone(date, fromOffset, toOffset) {\n    const fromLocalOffset = date.getTimezoneOffset();\n\n    const offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n\n    const toLocalOffset = offsetDate.getTimezoneOffset();\n\n    return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n}\n\nexport function adjustDST(date, hours) {\n    if (!hours && date.getHours() === 23) {\n        date.setHours(date.getHours() + 2);\n    }\n}"],"mappings":"AAAA,OAAO,SAASA,eAAe,CAACC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAE;EACxD,MAAMC,eAAe,GAAGH,IAAI,CAACI,iBAAiB,EAAE;EAEhD,MAAMC,UAAU,GAAG,IAAIC,IAAI,CAACN,IAAI,CAACO,OAAO,EAAE,GAAG,CAACN,UAAU,GAAGC,QAAQ,IAAI,KAAK,CAAC;EAE7E,MAAMM,aAAa,GAAGH,UAAU,CAACD,iBAAiB,EAAE;EAEpD,OAAO,IAAIE,IAAI,CAACD,UAAU,CAACE,OAAO,EAAE,GAAG,CAACC,aAAa,GAAGL,eAAe,IAAI,KAAK,CAAC;AACrF;AAEA,OAAO,SAASM,SAAS,CAACT,IAAI,EAAEU,KAAK,EAAE;EACnC,IAAI,CAACA,KAAK,IAAIV,IAAI,CAACW,QAAQ,EAAE,KAAK,EAAE,EAAE;IAClCX,IAAI,CAACY,QAAQ,CAACZ,IAAI,CAACW,QAAQ,EAAE,GAAG,CAAC,CAAC;EACtC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}